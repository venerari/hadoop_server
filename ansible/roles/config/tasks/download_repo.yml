---

- name: Create a directory if it does not exist 
  file:
    path: '{{artifacts_dest}}'
    state: directory
    mode: 0755

- name: Downloading artifacts
  get_url:
    url: "{{item.url}}{{item.name}}"
    dest: "{{artifacts_dest}}"
    mode: "{{mode_file}}"
    timeout: 1200
    validate_certs: no
  with_items: "{{artifactslist}}"
  register: x
  retries: 10
  delay: 10
  until: x is not failed  
  when: donotexec|default(False)==True    
          
- name: Unarchive file
  unarchive:
    src: "{{ artifacts_dest }}{{item.name}}"
    dest: "{{ artifacts_dest }}"
    remote_src: yes    
  with_items:
    - "{{artifactslist}}"
  register: x 
  when: extract_repo|default(False)==True    
  
- name: Delete artifacts
  file:
    path: "{{ artifacts_dest }}{{ item.name }}"
    state: absent
  become: true
  when: x is not failed
  with_items:
    - "{{artifactslist}}"
  when: deleterepo|default(False)==True    
  
- name: Set permssion on the folder
  file:
    path: "{{ artifacts_dest }}{{ item.folder }}"
    owner: "{{owner_file}}" 
    group: "{{group_file}}"
    mode: "{{mode_file}}" 
    recurse: yes 
  when: x is not failed and item.folder is defined
  with_items: "{{artifactslist}}"
