{
    "configurations": [
        {
            "zoo.cfg": {
                "properties_attributes": {},
                "properties": {
                    "quorum.cnxn.threads.size": "20",
                    "autopurge.purgeInterval": "24",
                    "dataDir": "/hadoop/zookeeper",
                    "autopurge.snapRetainCount": "30",
                    "clientPort": "2181",
                    "initLimit": "10",
                    "tickTime": "3000",
                    "syncLimit": "5",
                    "quorum.auth.enableSasl": "false"
                }
            }
        },
        {
            "ams-hbase-site": {
                "properties_attributes": {
                    "final": {
                        "hbase.zookeeper.quorum": "true"
                    }
                },
                "properties": {
                    "hfile.block.cache.size": "0.3",
                    "phoenix.query.spoolThresholdBytes": "20971520",
                    "hbase.zookeeper.property.dataDir": "${hbase.tmp.dir}/zookeeper",
                    "hbase.regionserver.thread.compaction.large": "2",
                    "hbase.master.port": "61300",
                    "zookeeper.session.timeout.localHBaseCluster": "120000",
                    "phoenix.query.keepAliveMs": "300000",
                    "hbase.local.dir": "${hbase.tmp.dir}/local",
                    "phoenix.query.timeoutMs": "300000",
                    "hbase.regionserver.thread.compaction.small": "3",
                    "hbase.zookeeper.quorum": "{{zookeeper_quorum_hosts}}",
                    "hbase.client.scanner.timeout.period": "300000",
                    "hbase.regionserver.info.port": "61330",
                    "phoenix.query.rowKeyOrderSaltedTable": "true",
                    "phoenix.mutate.batchSize": "10000",
                    "zookeeper.znode.parent": "/ams-hbase-secure",
                    "hbase.master.info.port": "61310",
                    "hbase.rootdir": "file:///hadoop/var/lib/ambari-metrics-collector/hbase",
                    "hbase.cluster.distributed": "false",
                    "hbase.hregion.majorcompaction": "0",
                    "hbase.hstore.flusher.count": "2",
                    "hbase.master.normalizer.class": "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
                    "hbase.snapshot.enabled": "false",
                    "phoenix.spool.directory": "${hbase.tmp.dir}/phoenix-spool",
                    "phoenix.coprocessor.maxMetaDataCacheSize": "20480000",
                    "hbase.zookeeper.property.tickTime": "6000",
                    "hbase.zookeeper.leaderport": "61388",
                    "phoenix.sequence.saltBuckets": "2",
                    "hbase.hstore.blockingStoreFiles": "200",
                    "zookeeper.session.timeout": "120000",
                    "phoenix.coprocessor.maxServerCacheTimeToLiveMs": "60000",
                    "hbase.master.info.bindAddress": "0.0.0.0",
                    "hbase.regionserver.global.memstore.lowerLimit": "0.3",
                    "dfs.client.read.shortcircuit": "true",
                    "phoenix.query.maxGlobalMemoryPercentage": "15",
                    "hbase.hregion.memstore.flush.size": "134217728",
                    "hbase.hregion.max.filesize": "4294967296",
                    "phoenix.groupby.maxCacheSize": "307200000",
                    "hbase.master.wait.on.regionservers.mintostart": "1",
                    "hbase.regionserver.global.memstore.upperLimit": "0.35",
                    "hbase.normalizer.period": "600000",
                    "hbase.tmp.dir": "/var/lib/ambari-metrics-collector/hbase-tmp",
                    "hbase.client.scanner.caching": "10000",
                    "hbase.replication": "false",
                    "hbase.unsafe.stream.capability.enforce": "false",
                    "hbase.rpc.timeout": "300000",
                    "hbase.superuser": "activity_explorer,ams,activity_analyzer",
                    "hbase.zookeeper.peerport": "61288",
                    "hbase.regionserver.port": "61320",
                    "hbase.zookeeper.property.clientPort": "{{zookeeper_clientPort}}",
                    "hbase.hregion.memstore.block.multiplier": "4",
                    "hbase.normalizer.enabled": "false"
                }
            }
        },
        {
            "zookeeper-log4j": {
                "properties_attributes": {},
                "properties": {
                    "zookeeper_log_max_backup_size": "10",
                    "zookeeper_log_number_of_backup_files": "10",
                    "content": "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File={{zk_log_dir}}/zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize={{zookeeper_log_max_backup_size}}MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex={{zookeeper_log_number_of_backup_files}}\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
                }
            }
        },
        {
            "ranger-hdfs-policymgr-ssl": {
                "properties_attributes": {},
                "properties": {
                    "xasecure.policymgr.clientssl.truststore": "",
                    "xasecure.policymgr.clientssl.keystore": "",
                    "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
                    "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
                }
            }
        },
        {
            "activity-log4j": {
                "properties_attributes": {},
                "properties": {
                    "activity_max_file_size": "30",
                    "activity-log4j-content": "\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Define some default values that can be overridden by system properties\n# Root logger option\nlog4j.rootLogger=INFO,file\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{activity_log_dir}}/${log.file.name}\nlog4j.appender.file.MaxFileSize={{activity_max_file_size}}MB\nlog4j.appender.file.MaxBackupIndex={{activity_max_backup_index}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n",
                    "activity_log_dir": "/var/log/smartsense-activity",
                    "activity_max_backup_index": "10"
                }
            }
        },
        {
            "ranger-yarn-policymgr-ssl": {
                "properties_attributes": {},
                "properties": {
                    "xasecure.policymgr.clientssl.truststore": "",
                    "xasecure.policymgr.clientssl.keystore": "",
                    "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
                    "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
                }
            }
        },
        {
            "ssl-server": {
                "properties_attributes": {},
                "properties": {
                    "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
                    "ssl.server.truststore.reload.interval": "10000",
                    "ssl.server.truststore.type": "jks",
                    "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
                    "ssl.server.keystore.type": "jks"
                }
            }
        },
        {
            "hst-agent-conf": {
                "properties_attributes": {},
                "properties": {
                    "security.anonymization.max.heap": "2048",
                    "agent.tmp_dir": "/var/lib/smartsense/hst-agent/data/tmp",
                    "upload.retry_count": "100",
                    "server.connection_retry_interval": "10",
                    "agent.version": "1.5.1.2.7.4.0-118",
                    "upload.retry_interval": "15",
                    "agent.loglevel": "INFO",
                    "bundle.logs_to_capture": "(.*).log$,(.*).out$,(.*).err$",
                    "server.connection_retry_count": "100"
                }
            }
        },
        {
            "ranger-yarn-security": {
                "properties_attributes": {},
                "properties": {
                    "ranger.add-yarn-authorization": "true",
                    "ranger.plugin.yarn.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
                    "ranger.plugin.yarn.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
                    "ranger.plugin.yarn.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
                    "ranger.plugin.yarn.policy.pollIntervalMs": "30000",
                    "ranger.plugin.yarn.policy.rest.url": "{{policymgr_mgr_url}}",
                    "ranger.plugin.yarn.service.name": "{{repo_name}}"
                }
            }
        },
        {
            "hadoop-policy": {
                "properties_attributes": {},
                "properties": {
                    "security.inter.datanode.protocol.acl": "*",
                    "security.refresh.usertogroups.mappings.protocol.acl": "hadoop",
                    "security.admin.operations.protocol.acl": "hadoop",
                    "security.client.datanode.protocol.acl": "*",
                    "security.datanode.protocol.acl": "*",
                    "security.inter.tracker.protocol.acl": "*",
                    "security.job.client.protocol.acl": "*",
                    "security.client.protocol.acl": "*",
                    "security.job.task.protocol.acl": "*",
                    "security.refresh.policy.protocol.acl": "hadoop",
                    "security.namenode.protocol.acl": "*"
                }
            }
        },
        {
            "ranger-yarn-audit": {
                "properties_attributes": {},
                "properties": {
                    "xasecure.audit.is.enabled": "true",
                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                    "xasecure.audit.jaas.Client.option.useKeyTab": "true",
                    "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/hadoop/yarn/audit/solr/spool",
                    "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
                    "xasecure.audit.destination.db.jdbc.driver": "{{jdbc_driver}}",
                    "xasecure.audit.destination.db": "false",
                    "xasecure.audit.destination.solr": "false",
                    "xasecure.audit.destination.solr.zookeepers": "NONE",
                    "xasecure.audit.destination.solr.urls": "",
                    "xasecure.audit.credential.provider.file": "jceks://file{{credential_file}}",
                    "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/hadoop/yarn/audit/hdfs/spool",
                    "xasecure.audit.jaas.Client.option.keyTab": "/etc/security/keytabs/rm.service.keytab",
                    "xasecure.audit.destination.hdfs": "true",
                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                    "xasecure.audit.destination.db.jdbc.url": "{{audit_jdbc_url}}",
                    "xasecure.audit.jaas.Client.option.principal": "rm/_HOST@TEST014.ORG",
                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                    "ranger.plugin.yarn.ambari.cluster.name": "{{cluster_name}}",
                    "xasecure.audit.destination.db.user": "{{xa_audit_db_user}}",
                    "xasecure.audit.provider.summary.enabled": "false",
                    "xasecure.audit.destination.db.batch.filespool.dir": "/var/log/hadoop/yarn/audit/db/spool",
                    "xasecure.audit.jaas.Client.option.storeKey": "false"
                }
            }
        },
        {
            "anonymization-rules": {
                "properties_attributes": {},
                "properties": {
                    "anonymization-rules-content": "{\n  \"rules\":[\n    {\n      \"name\": \"IP Address\",\n      \"description\": \"Anonymize IP addresses like 123.123.12.34 from all non-binary files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?![\\\\-])((?<![a-z0-9\\\\.])[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}(?!\\\\.[0-9])(?![a-z0-9]))\"],\n      \"exclude_files\": [\"hdp-select*.*\", \"*version.txt\"]\n    },\n    {\n      \"name\": \"Domain Names\",\n      \"rule_id\": \"Domain\"\n    },\n    {\n      \"name\": \"File Names\",\n      \"rule_id\": \"FileName\",\n      \"description\": \"Anonymize file names that have domain names and/or ip addresses\",\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"shared\": true\n    },\n    {\n      \"name\": \"SSN\",\n      \"description\": \"Anonymize social security numbers in format xxx-xx-xxxx from .log and .out files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![0-9x])([0-9x]{3}-[0-9x]{2}-[0-9]{4})(?![0-9x])\"],\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"exclude_files\" : [\"hst.log*\", \"hst.out*\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Credit Card Numbers\",\n      \"description\": \"Anonymize credit card numbers from .log and .out files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![0-9x])(18|21|3[04678]|4[0-9x]|5[1-5]|60|65)[0-9x]{2}[- ]([0-9x]{4}[- ]){2}[0-9]{0,4}(?![0-9x])\"],\n      \"extract\": \"(?<![0-9x])([0-9x -]+)(?![0-9x])\",\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"exclude_files\" : [\"hst.log.*\", \"hst.out\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"email\",\n      \"description\": \"Anonymize based on standard email pattern from all files except metadata.json which is used by SmartSense to send bundle notifications\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![a-z0-9._%+-])[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,6}(?![a-z0-9._%+-])$?\"],\n      \"exclude_files\" : [\"metadata.json\"],\n      \"shared\": true\n    },\n    {\n      \"name\": \"Core Site S3 Credentials\",\n      \"description\": \"Anonymize the value of properties from core-site.xml that might contain S3 credentials\",\n      \"rule_id\": \"Property\",\n      \"properties\": [\"fs.s3a.session.token\",\"fs.s3a.proxy.host\",\"fs.s3a.proxy.username\"],\n      \"include_files\": [\"core-site.xml\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Password Configurations\",\n      \"description\": \"Anonymize various password related properties from configuration files. Properties and configuration files are listed below\",\n      \"rule_id\": \"Property\",\n      \"properties\": [\".*password.*\", \".*awsAccessKeyId.*\",  \".*awsSecretAccessKey.*\", \"fs.azure.account.key.*\", \"ranger.service.https.attrib.keystore.pass\",\"https.attrib.keystorePass\", \"HTTPS_KEYSTORE_PASS\"],\n      \"include_files\": [\"*.xml\", \"*.properties\", \"*.yaml\", \"*.ini\", \"*.json\"],\n      \"exclude_files\" : [\"capacity-scheduler.xml\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"KNOX LDAP Password\",\n      \"description\": \"Anonymize KNOX LDAP passwords from topology configurations xml\",\n      \"rule_id\": \"XPATH\",\n      \"paths\": [\"//name[contains(text(),'Password')]/following-sibling::value[1]/text()\"],\n      \"include_files\": [\"topologies/*.xml\"],\n      \"parentNode\": \"param\",\n      \"shared\": false\n    },\n    {\n      \"name\": \"Ranger KMS Oozie Ganglia Falcon Passwords\",\n      \"description\": \"Anomymize various password related properties for multiple services. Properties are listed below\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"oozie.https.keystore.pass=([^\\\\s]*)\", \"OOZIE_HTTPS_KEYSTORE_PASS=([^\\\\s]*)\", \"ganglia_password=([^\\\\s]*)\", \"javax.jdo.option.ConnectionPassword=([^\\\\s]*)\",\"KMS_SSL_KEYSTORE_PASS=([^\\\\s]*)\",\"falcon.statestore.jdbc.password=([^\\\\s]*)\"],\n      \"extract\": \"=([^\\\\s]*)\",\n      \"include_files\": [\"java_process.txt\", \"pid.txt\", \"ambari-agent.log\", \"oozie-env.cmd\", \"hive_set_v.txt\", \"beeline_set_v.txt\", \"process_list.txt\", \"kms-env.sh\", \"statestore.credentials\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"MAC Addresses\",\n      \"description\": \"Anonymize MAC addresses like ab:12:3c:44:5d:6e from network_info.txt\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(([0-9a-f]{2}[:-]){5}[0-9a-f]{2})\"],\n      \"extract\": \"([0-9a-f:-]{17})\",\n      \"include_files\": [\"network_info.txt\"],\n      \"shared\": true\n    },\n    {\n      \"name\":\"IPv6 Addresses\",\n      \"description\":\"Anonymize IPv6 addresses like inet6 ab10::g457:6xxx:xxxx:6c9b/64 from network_info.txt\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"inet6 addr:\\\\s((([\\\\da-f:\\\\/\\\\d]))*)\"],\n      \"extract\": \":\\\\s((([\\\\da-f:\\\\/\\\\d]))*)\",\n      \"include_files\": [\"network_info.txt\"],\n      \"shared\":true\n    },\n    {\n      \"name\": \"Zeppelin Interpreter Passwords\",\n      \"description\": \"Anonymize password related properties from zeppelin interpreter.json\",\n      \"rule_id\": \"JSONPATH\",\n      \"paths\": [\"$.interpreterSettings..properties.['hive.password','phoenix.password','default.password','spark2.password','spark.password','psql.password','hive_interactive.password']\"],\n      \"include_files\": [\"interpreter.json\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Zeppelin Interpreter Passwords\",\n      \"description\": \"Anonymize password related properties from zeppelin interpreter.json\",\n      \"rule_id\": \"JSONPATH\",\n      \"paths\": [\"$.interpreterSettings..properties.*[?(@.name=~/.*password.*/i)].value\"],\n      \"include_files\": [\"interpreter.json\"],\n     \"shared\": false\n    }\n  ]\n}"
                }
            }
        },
        {
            "container-executor": {
                "properties_attributes": {},
                "properties": {
                    "docker_trusted_registries": "",
                    "cgroup_root": "",
                    "docker_binary": "/usr/bin/docker",
                    "docker_privileged-containers_enabled": "false",
                    "docker_allowed_ro-mounts": "",
                    "docker_allowed_rw-mounts": "",
                    "content": "{#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#}\n\n#/*\n# * Licensed to the Apache Software Foundation (ASF) under one\n# * or more contributor license agreements.  See the NOTICE file\n# * distributed with this work for additional information\n# * regarding copyright ownership.  The ASF licenses this file\n# * to you under the Apache License, Version 2.0 (the\n# * \"License\"); you may not use this file except in compliance\n# * with the License.  You may obtain a copy of the License at\n# *\n# *     http://www.apache.org/licenses/LICENSE-2.0\n# *\n# * Unless required by applicable law or agreed to in writing, software\n# * distributed under the License is distributed on an \"AS IS\" BASIS,\n# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# * See the License for the specific language governing permissions and\n# * limitations under the License.\n# */\nyarn.nodemanager.local-dirs={{nm_local_dirs}}\nyarn.nodemanager.log-dirs={{nm_log_dirs}}\nyarn.nodemanager.linux-container-executor.group={{yarn_executor_container_group}}\nbanned.users=hdfs,yarn,mapred,bin\nmin.user.id={{min_user_id}}\n\n{{ '[docker]' }}\n  module.enabled={{docker_module_enabled}}\n  docker.binary={{docker_binary}}\n  docker.allowed.capabilities={{docker_allowed_capabilities}}\n  docker.allowed.devices={{docker_allowed_devices}}\n  docker.allowed.networks={{docker_allowed_networks}}\n  docker.allowed.ro-mounts={{nm_local_dirs}},{{docker_allowed_ro_mounts}}\n  docker.allowed.rw-mounts={{nm_local_dirs}},{{nm_log_dirs}},{{docker_allowed_rw_mounts}}\n  docker.privileged-containers.enabled={{docker_privileged_containers_enabled}}\n  docker.trusted.registries={{docker_trusted_registries}}\n  docker.allowed.volume-drivers={{docker_allowed_volume_drivers}}\n\n{{ '[gpu]' }}\n  module.enabled={{gpu_module_enabled}}\n\n{{ '[cgroups]' }}\n  root={{cgroup_root}}\n  yarn-hierarchy={{yarn_hierarchy}}",
                    "min_user_id": "1000",
                    "yarn_hierarchy": "",
                    "docker_allowed_volume-drivers": "",
                    "docker_allowed_devices": "",
                    "gpu_module_enabled": "false",
                    "docker_module_enabled": "false"
                }
            }
        },
        {
            "core-site": {
                "properties_attributes": {
                    "final": {
                        "fs.defaultFS": "true"
                    }
                },
                "properties": {
                    "fs.defaultFS": "hdfs://hdfscluster",
                    "fs.s3a.multipart.size": "67108864",
                    "hadoop.http.cross-origin.allowed-methods": "GET,PUT,POST,OPTIONS,HEAD,DELETE",
                    "hadoop.http.authentication.kerberos.keytab": "/etc/security/keytabs/spnego.service.keytab",
                    "ipc.server.tcpnodelay": "true",
                    "fs.gs.working.dir": "/",
                    "hadoop.http.cross-origin.allowed-origins": "*",
                    "mapreduce.jobtracker.webinterface.trusted": "false",
                    "fs.gs.path.encoding": "uri-path",
                    "hadoop.http.cross-origin.max-age": "1800",
                    "ipc.client.idlethreshold": "8000",
                    "hadoop.proxyuser.hdfs.groups": "*",
                    "fs.s3a.fast.upload": "true",
                    "fs.trash.interval": "360",
                    "hadoop.http.authentication.simple.anonymous.allowed": "false",
                    "hadoop.http.authentication.type": "kerberos",
                    "hadoop.security.authorization": "true",
                    "ipc.client.connection.maxidletime": "30000",
                    "hadoop.http.authentication.kerberos.principal": "HTTP/_HOST@TEST014.ORG",
                    "fs.gs.application.name.suffix": " (GPN:Hortonworks; version 1.0) HDP/{{version}}",
                    "hadoop.proxyuser.ambari-server-hadoopdev.hosts": "hdmas1dev.test014.org",
                    "ha.failover-controller.active-standby-elector.zk.op.retries": "120",
                    "hadoop.http.cross-origin.allowed-headers": "X-Requested-With,Content-Type,Accept,Origin,WWW-Authenticate,Accept-Encoding,Transfer-Encoding",
                    "hadoop.security.authentication": "kerberos",
                    "fs.s3a.fast.upload.buffer": "disk",
                    "hadoop.proxyuser.ambari-server-hadoopdev.groups": "*",
                    "hadoop.proxyuser.hdfs.hosts": "*",
                    "fs.azure.user.agent.prefix": "User-Agent: APN/1.0 Hortonworks/1.0 HDP/{{version}}",
                    "hadoop.security.instrumentation.requires.admin": "false",
                    "ha.zookeeper.acl": "sasl:nn:rwcda",
                    "ipc.client.connect.max.retries": "50",
                    "hadoop.proxyuser.yarn.groups": "*",
                    "io.file.buffer.size": "131072",
                    "fs.s3a.user.agent.prefix": "User-Agent: APN/1.0 Hortonworks/1.0 HDP/{{version}}",
                    "hadoop.rpc.protection": "authentication,privacy",
                    "net.topology.script.file.name": "/etc/hadoop/conf/topology_script.py",
                    "hadoop.http.authentication.signature.secret.file": "/etc/security/http_secret",
                    "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
                    "hadoop.proxyuser.yarn.hosts": "%HOSTGROUP::host_group_1%",
                    "ha.zookeeper.quorum": "%HOSTGROUP::host_group_2%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_3%:2181",
                    "hadoop.http.filter.initializers": "org.apache.hadoop.security.AuthenticationFilterInitializer,org.apache.hadoop.security.HttpCrossOriginFilterInitializer",
                    "hadoop.proxyuser.HTTP.groups": "users",
                    "io.serializations": "org.apache.hadoop.io.serializer.WritableSerialization"
                }
            }
        },
        {
            "yarn-hbase-log4j": {
                "properties_attributes": {},
                "properties": {
                    "hbase_log_maxbackupindex": "20",
                    "hbase_security_log_maxfilesize": "256",
                    "hbase_log_maxfilesize": "256",
                    "hbase_security_log_maxbackupindex": "20",
                    "content": "\n            # Licensed to the Apache Software Foundation (ASF) under one\n            # or more contributor license agreements.  See the NOTICE file\n            # distributed with this work for additional information\n            # regarding copyright ownership.  The ASF licenses this file\n            # to you under the Apache License, Version 2.0 (the\n            # \"License\"); you may not use this file except in compliance\n            # with the License.  You may obtain a copy of the License at\n            #\n            #     http://www.apache.org/licenses/LICENSE-2.0\n            #\n            # Unless required by applicable law or agreed to in writing, software\n            # distributed under the License is distributed on an \"AS IS\" BASIS,\n            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            # See the License for the specific language governing permissions and\n            # limitations under the License.\n\n\n            # Define some default values that can be overridden by system properties\n            hbase.root.logger=INFO,console\n            hbase.security.logger=INFO,console\n            hbase.log.dir=.\n            hbase.log.file=hbase.log\n\n            # Define the root logger to the system property \"hbase.root.logger\".\n            log4j.rootLogger=${hbase.root.logger}\n\n            # Logging Threshold\n            log4j.threshold=ALL\n\n            #\n            # Daily Rolling File Appender\n            #\n            log4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n            log4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n            # Rollver at midnight\n            log4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n            # 30-day backup\n            #log4j.appender.DRFA.MaxBackupIndex=30\n            log4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n            # Pattern format: Date LogLevel LoggerName LogMessage\n            log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n            # Rolling File Appender properties\n            hbase.log.maxfilesize={{hbase_log_maxfilesize}}MB\n            hbase.log.maxbackupindex={{hbase_log_maxbackupindex}}\n\n            # Rolling File Appender\n            log4j.appender.RFA=org.apache.log4j.RollingFileAppender\n            log4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\n            log4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\n            log4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\n            log4j.appender.RFA.layout=org.apache.log4j.PatternLayout\n            log4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n            #\n            # Security audit appender\n            #\n            hbase.security.log.file=SecurityAuth.audit\n            hbase.security.log.maxfilesize={{hbase_security_log_maxfilesize}}MB\n            hbase.security.log.maxbackupindex={{hbase_security_log_maxbackupindex}}\n            log4j.appender.RFAS=org.apache.log4j.RollingFileAppender\n            log4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\n            log4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\n            log4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\n            log4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\n            log4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n            log4j.category.SecurityLogger=${hbase.security.logger}\n            log4j.additivity.SecurityLogger=false\n            #log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n            #\n            # Null Appender\n            #\n            log4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n            #\n            # console\n            # Add \"console\" to rootlogger above if you want to use this\n            #\n            log4j.appender.console=org.apache.log4j.ConsoleAppender\n            log4j.appender.console.target=System.err\n            log4j.appender.console.layout=org.apache.log4j.PatternLayout\n            log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n            # Custom Logging levels\n\n            log4j.logger.org.apache.zookeeper=INFO\n            #log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\n            log4j.logger.org.apache.hadoop.hbase=INFO\n            # Make these two classes INFO-level. Make them DEBUG to see more zk debug.\n            log4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\n            log4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n            #log4j.logger.org.apache.hadoop.dfs=DEBUG\n            # Set this class to log INFO only otherwise its OTT\n            # Enable this to get detailed connection error/retry logging.\n            # log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n            # Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n            #log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n            # Uncomment the below if you want to remove logging of client region caching'\n            # and scan of .META. messages\n            # log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n            # log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
                }
            }
        },
        {
            "hdfs-site": {
                "properties_attributes": {
                    "final": {
                        "dfs.webhdfs.enabled": "true",
                        "dfs.namenode.http-address": "true",
                        "dfs.namenode.name.dir": "true",
                        "dfs.datanode.failed.volumes.tolerated": "true",
                        "dfs.datanode.data.dir": "true"
                    }
                },
                "properties": {
                    "dfs.ha.namenodes.hdfscluster": "nn1,nn2",
                    "dfs.namenode.rpc-address.hdfscluster.nn1": "%HOSTGROUP::host_group_1%:8020",
                    "dfs.replication": "3",
                    "dfs.namenode.keytab.file": "/etc/security/keytabs/nn.service.keytab",
                    "dfs.namenode.rpc-address.hdfscluster.nn2": "%HOSTGROUP::host_group_2%:8020",
                    "dfs.namenode.audit.log.async": "true",
                    "dfs.nameservices": "hdfscluster",
                    "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary",
                    "dfs.namenode.avoid.read.stale.datanode": "true",
                    "manage.include.files": "false",
                    "dfs.journalnode.http-address": "0.0.0.0:8480",
                    "dfs.namenode.http-address.hdfscluster.nn2": "%HOSTGROUP::host_group_2%:50070",
                    "dfs.namenode.http-address.hdfscluster.nn1": "%HOSTGROUP::host_group_1%:50070",
                    "nfs.file.dump.dir": "/tmp/.hdfs-nfs",
                    "dfs.web.authentication.kerberos.principal": "HTTP/_HOST@TEST014.ORG",
                    "dfs.internal.nameservices": "hdfscluster",
                    "dfs.encrypt.data.transfer.cipher.suites": "AES/CTR/NoPadding",
                    "dfs.client.read.shortcircuit.streams.cache.size": "4096",
                    "dfs.hosts.exclude": "/etc/hadoop/conf/dfs.exclude",
                    "dfs.namenode.kerberos.internal.spnego.principal": "HTTP/_HOST@TEST014.ORG",
                    "dfs.namenode.acls.enabled": "true",
                    "dfs.journalnode.keytab.file": "/etc/security/keytabs/jn.service.keytab",
                    "dfs.datanode.keytab.file": "/etc/security/keytabs/dn.service.keytab",
                    "dfs.namenode.accesstime.precision": "0",
                    "dfs.journalnode.kerberos.principal": "jn/_HOST@TEST014.ORG",
                    "dfs.namenode.fslock.fair": "false",
                    "dfs.web.authentication.kerberos.keytab": "/etc/security/keytabs/spnego.service.keytab",
                    "dfs.permissions.enabled": "true",
                    "dfs.permissions.ContentSummary.subAccess": "false",
                    "dfs.datanode.balance.bandwidthPerSec": "6250000",
                    "dfs.namenode.stale.datanode.interval": "30000",
                    "dfs.content-summary.limit": "5000",
                    "dfs.http.policy": "HTTP_ONLY",
                    "dfs.ha.fencing.methods": "shell(/bin/true)",
                    "dfs.journalnode.https-address": "0.0.0.0:8481",
                    "dfs.datanode.du.reserved": "6707085824",
                    "dfs.datanode.kerberos.principal": "dn/_HOST@TEST014.ORG",
                    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
                    "dfs.datanode.ipc.address": "0.0.0.0:8010",
                    "dfs.cluster.administrators": " hdfs",
                    "dfs.datanode.max.transfer.threads": "4096",
                    "dfs.namenode.handler.count": "50",
                    "dfs.https.port": "50470",
                    "dfs.namenode.https-address.hdfscluster.nn2": "%HOSTGROUP::host_group_2%:50470",
                    "dfs.namenode.https-address.hdfscluster.nn1": "%HOSTGROUP::host_group_1%:50470",
                    "dfs.replication.max": "50",
                    "dfs.client.read.shortcircuit": "true",
                    "dfs.webhdfs.enabled": "true",
                    "dfs.namenode.name.dir": "/hadoop/hdfs/namenode,/hadoop/hadoop/hdfs/namenode",
                    "dfs.namenode.avoid.write.stale.datanode": "true",
                    "dfs.namenode.kerberos.principal": "nn/_HOST@TEST014.ORG",
                    "dfs.datanode.https.address": "0.0.0.0:50475",
                    "dfs.datanode.failed.volumes.tolerated": "0",
                    "dfs.client.retry.policy.enabled": "false",
                    "hadoop.caller.context.enabled": "true",
                    "dfs.namenode.startup.delay.block.deletion.sec": "3600",
                    "dfs.block.access.token.enable": "true",
                    "dfs.datanode.data.dir": "/hadoop/hdfs/data,/hadoop/hadoop/hdfs/data",
                    "dfs.permissions.superusergroup": "hdfs",
                    "dfs.blocksize": "134217728",
                    "dfs.namenode.shared.edits.dir": "qjournal://%HOSTGROUP::host_group_3%:8485;%HOSTGROUP::host_group_1%:8485;%HOSTGROUP::host_group_2%:8485/hdfscluster",
                    "dfs.namenode.checkpoint.edits.dir": "${dfs.namenode.checkpoint.dir}",
                    "nfs.exports.allowed.hosts": "* rw",
                    "dfs.datanode.address": "0.0.0.0:1019",
                    "dfs.blockreport.initialDelay": "120",
                    "dfs.datanode.data.dir.perm": "750",
                    "dfs.namenode.write.stale.datanode.ratio": "1.0f",
                    "dfs.namenode.name.dir.restore": "true",
                    "dfs.client.failover.proxy.provider.hdfscluster": "org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider",
                    "dfs.heartbeat.interval": "3",
                    "dfs.data.transfer.protection": "authentication,privacy",
                    "dfs.namenode.checkpoint.txns": "1000000",
                    "dfs.journalnode.edits.dir": "/hadoop/hdfs/journal",
                    "fs.permissions.umask-mode": "022",
                    "dfs.namenode.safemode.threshold-pct": "0.99f",
                    "dfs.namenode.checkpoint.period": "21600",
                    "dfs.datanode.http.address": "0.0.0.0:1022",
                    "dfs.ha.automatic-failover.enabled": "true",
                    "dfs.journalnode.kerberos.internal.spnego.principal": "HTTP/_HOST@TEST014.ORG"
                }
            }
        },
        {
            "yarn-site": {
                "properties_attributes": {
                    "hidden": {
                        "hadoop.registry.dns.bind-port": "true"
                    }
                },
                "properties": {
                    "yarn.nodemanager.resource-plugins.gpu.path-to-discovery-executables": "",
                    "yarn.resourcemanager.zk-address": "%HOSTGROUP::host_group_2%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_3%:2181",
                    "yarn.nodemanager.container-monitor.interval-ms": "3000",
                    "yarn.timeline-service.http-authentication.signer.secret.provider.object": "",
                    "hadoop.registry.dns.bind-address": "0.0.0.0",
                    "yarn.nodemanager.recovery.supervised": "true",
                    "yarn.application.classpath": "$HADOOP_CONF_DIR,{{hadoop_home}}/*,{{hadoop_home}}/lib/*,{{stack_root}}/current/hadoop-hdfs-client/*,{{stack_root}}/current/hadoop-hdfs-client/lib/*,{{stack_root}}/current/hadoop-yarn-client/*,{{stack_root}}/current/hadoop-yarn-client/lib/*",
                    "yarn.timeline-service.http-authentication.token.validity": "",
                    "yarn.admin.acl": "activity_analyzer,yarn",
                    "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds": "3600",
                    "yarn.nodemanager.address": "0.0.0.0:45454",
                    "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms": "300000",
                    "yarn.nodemanager.runtime.linux.allowed-runtimes": "default,docker",
                    "yarn.scheduler.maximum-allocation-vcores": "1",
                    "yarn.timeline-service.http-authentication.kerberos.keytab": "/etc/security/keytabs/spnego.service.keytab",
                    "yarn.timeline-service.address": "%HOSTGROUP::host_group_2%:10200",
                    "yarn.timeline-service.http-cross-origin.enabled": "true",
                    "yarn.nodemanager.aux-services": "mapreduce_shuffle,spark2_shuffle,{{timeline_collector}}",
                    "yarn.system-metricspublisher.enabled": "true",
                    "yarn.webapp.api-service.enable": "true",
                    "yarn.nodemanager.runtime.linux.docker.default-container-network": "host",
                    "yarn.timeline-service.http-authentication.proxyuser.*.users": "",
                    "yarn.timeline-service.http-authentication.kerberos.principal": "HTTP/_HOST@TEST014.ORG",
                    "yarn.http.policy": "HTTP_ONLY",
                    "yarn.resourcemanager.proxyuser.*.groups": "",
                    "yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidiadocker-v1.endpoint": "",
                    "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size": "10000",
                    "hadoop.registry.secure": "true",
                    "yarn.nodemanager.keytab": "/etc/security/keytabs/nm.service.keytab",
                    "yarn.nodemanager.resource-plugins.gpu.docker-plugin": "",
                    "yarn.resourcemanager.admin.address": "%HOSTGROUP::host_group_1%:8141",
                    "yarn.timeline-service.generic-application-history.save-non-am-container-meta-info": "false",
                    "yarn.nodemanager.delete.debug-delay-sec": "0",
                    "yarn.resourcemanager.fs.state-store.retry-policy-spec": "2000, 500",
                    "yarn.timeline-service.http-authentication.type": "kerberos",
                    "yarn.timeline-service.ttl-enable": "true",
                    "yarn.timeline-service.entity-group-fs-store.retain-seconds": "604800",
                    "yarn.log-aggregation.retain-seconds": "2592000",
                    "yarn.resourcemanager.zk-num-retries": "1000",
                    "yarn.scheduler.minimum-allocation-vcores": "1",
                    "yarn.nodemanager.aux-services.spark2_shuffle.classpath": "{{stack_root}}/{{spark2_version}}/spark2/aux/*",
                    "yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed": "false",
                    "yarn.timeline-service.client.max-retries": "30",
                    "yarn.timeline-service.client.retry-interval-ms": "1000",
                    "yarn.nodemanager.webapp.spnego-keytab-file": "/etc/security/keytabs/spnego.service.keytab",
                    "yarn.timeline-service.bind-host": "0.0.0.0",
                    "yarn.nodemanager.container-metrics.unregister-delay-ms": "60000",
                    "yarn.resourcemanager.monitor.capacity.preemption.monitoring_interval": "15000",
                    "yarn.resourcemanager.fs.state-store.uri": " ",
                    "yarn.resourcemanager.recovery.enabled": "true",
                    "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath": "",
                    "yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices": "",
                    "yarn.log.server.url": "http://%HOSTGROUP::host_group_2%:19888/jobhistory/logs",
                    "yarn.resourcemanager.address": "%HOSTGROUP::host_group_1%:8050",
                    "yarn.timeline-service.reader.webapp.address": "%HOSTGROUP::host_group_1%:8198",
                    "yarn.resourcemanager.scheduler.monitor.enable": "true",
                    "yarn.resourcemanager.webapp.cross-origin.enabled": "true",
                    "yarn.resourcemanager.bind-host": "0.0.0.0",
                    "yarn.timeline-service.http-authentication.cookie.path": "",
                    "hadoop.registry.dns.domain-name": "EXAMPLE.COM",
                    "yarn.nodemanager.admin-env": "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
                    "yarn.timeline-service.reader.webapp.https.address": "%HOSTGROUP::host_group_1%:8199",
                    "yarn.resourcemanager.proxy-user-privileges.enabled": "true",
                    "yarn.acl.enable": "true",
                    "hadoop.registry.client.auth": "kerberos",
                    "yarn.client.nodemanager-connect.retry-interval-ms": "10000",
                    "yarn.service.system-service.dir": "/services",
                    "yarn.timeline-service.version": "2.0f",
                    "yarn.timeline-service.leveldb-timeline-store.read-cache-size": "104857600",
                    "yarn.resourcemanager.placement-constraints.handler": "scheduler",
                    "yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor": "1",
                    "yarn.timeline-service.leveldb-timeline-store.path": "/hadoop/yarn/timeline",
                    "yarn.resourcemanager.zk-timeout-ms": "10000",
                    "hadoop.registry.system.accounts": "sasl:yarn,sasl:jhs,sasl:hdfs-hadoopdev,sasl:rm,sasl:hive,sasl:spark",
                    "yarn.node-labels.fs-store.retry-policy-spec": "2000, 500",
                    "yarn.log-aggregation-enable": "true",
                    "yarn.resourcemanager.work-preserving-recovery.enabled": "true",
                    "yarn.timeline-service.principal": "yarn/_HOST@TEST014.ORG",
                    "yarn.resourcemanager.store.class": "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
                    "yarn.timeline-service.http-authentication.signature.secret.file": "",
                    "yarn.timeline-service.http-authentication.proxyuser.*.hosts": "",
                    "yarn.timeline-service.leveldb-state-store.path": "/hadoop/yarn/timeline",
                    "yarn.nodemanager.log.retain-seconds": "604800",
                    "yarn.timeline-service.entity-group-fs-store.done-dir": "/ats/done/",
                    "hadoop.registry.dns.bind-port": "53",
                    "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor",
                    "yarn.resourcemanager.nodes.exclude-path": "/etc/hadoop/conf/yarn.exclude",
                    "yarn.nodemanager.bind-host": "0.0.0.0",
                    "yarn.nodemanager.resource-plugins": "",
                    "yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round": "0.33",
                    "yarn.timeline-service.versions": "1.5f,2.0f",
                    "yarn.resourcemanager.connect.retry-interval.ms": "30000",
                    "yarn.timeline-service.webapp.address": "%HOSTGROUP::host_group_2%:8188",
                    "yarn.scheduler.minimum-allocation-mb": "768",
                    "yarn.resourcemanager.zk-retry-interval-ms": "1000",
                    "yarn.nodemanager.runtime.linux.docker.capabilities": "\n      CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,\n      SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE",
                    "yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled": "true",
                    "yarn.nodemanager.remote-app-log-dir": "/app-logs",
                    "yarn.scheduler.maximum-allocation-mb": "3072",
                    "yarn.nodemanager.vmem-check-enabled": "false",
                    "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds": "60",
                    "yarn.timeline-service.webapp.https.address": "%HOSTGROUP::host_group_2%:8190",
                    "yarn.nodemanager.resource.percentage-physical-cpu-limit": "80",
                    "yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users": "true",
                    "yarn.timeline-service.hbase.configuration.file": "file://{{yarn_hbase_conf_dir}}/hbase-site.xml",
                    "yarn.rm.system-metricspublisher.emit-container-events": "true",
                    "yarn.resourcemanager.webapp.spnego-principal": "HTTP/_HOST@TEST014.ORG",
                    "yarn.timeline-service.entity-group-fs-store.active-dir": "/ats/active/",
                    "yarn.log.server.web-service.url": "http://%HOSTGROUP::host_group_2%:8188/ws/v1/applicationhistory",
                    "yarn.nodemanager.linux-container-executor.group": "hadoop",
                    "yarn.resourcemanager.proxyuser.*.hosts": "",
                    "yarn.resourcemanager.display.per-user-apps": "true",
                    "yarn.nodemanager.remote-app-log-dir-suffix": "logs",
                    "yarn.resourcemanager.webapp.address": "%HOSTGROUP::host_group_1%:8088",
                    "yarn.timeline-service.enabled": "true",
                    "yarn.nodemanager.resource.cpu-vcores": "1",
                    "yarn.nodemanager.aux-services.timeline_collector.class": "org.apache.hadoop.yarn.server.timelineservice.collector.PerNodeTimelineCollectorsAuxService",
                    "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled": "false",
                    "yarn.nodemanager.aux-services.spark_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
                    "yarn.nodemanager.log-aggregation.debug-enabled": "false",
                    "yarn.resourcemanager.zk-acl": "sasl:rm:rwcda",
                    "yarn.resourcemanager.webapp.spnego-keytab-file": "/etc/security/keytabs/spnego.service.keytab",
                    "yarn.client.nodemanager-connect.max-wait-ms": "60000",
                    "yarn.timeline-service.http-authentication.simple.anonymous.allowed": "true",
                    "yarn.resourcemanager.zk-state-store.parent-path": "/rmstore",
                    "yarn.nodemanager.runtime.linux.docker.allowed-container-networks": "host,none,bridge",
                    "hadoop.registry.dns.zone-mask": "255.255.255.0",
                    "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage": "false",
                    "yarn.resourcemanager.resource-tracker.address": "%HOSTGROUP::host_group_1%:8025",
                    "hadoop.registry.dns.zone-subnet": "172.17.0.0",
                    "yarn.nodemanager.resource.memory-mb": "3072",
                    "yarn.nodemanager.disk-health-checker.min-healthy-disks": "0.25",
                    "yarn.node-labels.enabled": "false",
                    "yarn.resourcemanager.connect.max-wait.ms": "900000",
                    "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
                    "yarn.resourcemanager.system-metrics-publisher.enabled": "true",
                    "yarn.nodemanager.webapp.spnego-principal": "HTTP/_HOST@TEST014.ORG",
                    "yarn.timeline-service.http-authentication.kerberos.name.rules": "",
                    "yarn.timeline-service.store-class": "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
                    "yarn.timeline-service.generic-application-history.store-class": "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
                    "yarn.nodemanager.webapp.cross-origin.enabled": "true",
                    "yarn.resourcemanager.scheduler.address": "%HOSTGROUP::host_group_1%:8030",
                    "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size": "10000",
                    "yarn.timeline-service.ttl-ms": "2678400000",
                    "yarn.nodemanager.health-checker.script.timeout-ms": "60000",
                    "yarn.nodemanager.aux-services.spark2_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
                    "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes": "org.apache.hadoop.yarn.applications.distributedshell.DistributedShellTimelinePlugin",
                    "yarn.timeline-service.recovery.enabled": "true",
                    "yarn.timeline-service.http-authentication.proxyuser.*.groups": "",
                    "yarn.nodemanager.recovery.dir": "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
                    "yarn.resourcemanager.keytab": "/etc/security/keytabs/rm.service.keytab",
                    "yarn.resourcemanager.monitor.capacity.preemption.intra-queue-preemption.enabled": "true",
                    "yarn.webapp.ui2.enable": "true",
                    "yarn.nodemanager.log-aggregation.num-log-files-per-app": "30",
                    "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size": "10",
                    "yarn.nodemanager.principal": "nm/_HOST@TEST014.ORG",
                    "manage.include.files": "false",
                    "yarn.resourcemanager.ha.enabled": "false",
                    "yarn.timeline-service.entity-group-fs-store.app-cache-size": "10",
                    "yarn.resourcemanager.proxyuser.*.users": "",
                    "yarn.nodemanager.local-dirs": "/hadoop/yarn/local,/hadoop/hadoop/yarn/local",
                    "yarn.nodemanager.recovery.enabled": "true",
                    "yarn.service.framework.path": "/hdp/apps/${hdp.version}/yarn/service-dep.tar.gz",
                    "yarn.resourcemanager.am.max-attempts": "2",
                    "yarn.resourcemanager.state-store.max-completed-applications": "${yarn.resourcemanager.max-completed-applications}",
                    "yarn.node-labels.fs-store.root-dir": "/system/yarn/node-labels",
                    "yarn.nodemanager.aux-services.mapreduce_shuffle.class": "org.apache.hadoop.mapred.ShuffleHandler",
                    "yarn.nodemanager.aux-services.spark_shuffle.classpath": "{{stack_root}}/${hdp.version}/spark/aux/*",
                    "yarn.nodemanager.resourcemanager.connect.wait.secs": "1800",
                    "hadoop.registry.dns.enabled": "true",
                    "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage": "90",
                    "hadoop.registry.zk.quorum": "%HOSTGROUP::host_group_2%:2181,%HOSTGROUP::host_group_1%:2181,%HOSTGROUP::host_group_3%:2181",
                    "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds": "3600",
                    "yarn.timeline-service.hbase-schema.prefix": "prod.",
                    "hadoop.http.cross-origin.allowed-origins": "{{cross_origins}}",
                    "yarn.nodemanager.runtime.linux.docker.privileged-containers.acl": "",
                    "yarn.timeline-service.state-store-class": "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
                    "hadoop.registry.jaas.context": "Client",
                    "yarn.resourcemanager.hostname": "%HOSTGROUP::host_group_1%",
                    "yarn.resourcemanager.principal": "rm/_HOST@TEST014.ORG",
                    "yarn.timeline-service.entity-group-fs-store.summary-store": "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
                    "yarn.nodemanager.health-checker.interval-ms": "135000",
                    "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb": "1000",
                    "yarn.timeline-service.keytab": "/etc/security/keytabs/yarn.service.keytab",
                    "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::host_group_1%:8090",
                    "yarn.timeline-service.http-authentication.signer.secret.provider": "",
                    "yarn.nodemanager.vmem-pmem-ratio": "2.1",
                    "yarn.nodemanager.log-aggregation.compression-type": "gz",
                    "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms": "10000",
                    "yarn.nodemanager.log-dirs": "/hadoop/yarn/log,/hadoop/hadoop/yarn/log",
                    "yarn.timeline-service.hbase.coprocessor.jar.hdfs.location": "{{yarn_timeline_jar_location}}",
                    "yarn.timeline-service.http-authentication.cookie.domain": ""
                }
            }
        },
        {
            "viewfs-mount-table": {
                "properties_attributes": {},
                "properties": {
                    "content": " "
                }
            }
        },
        {
            "activity-env": {
                "properties_attributes": {},
                "properties": {
                    "analyzer_jvm_heap": "8192",
                    "analyzer_jvm_opts": "-Xms128m",
                    "activity-env-content": "#!/bin/bash\n\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Enable verbose shell execution\n#set -xv\n\n## Set HOME for various components\nexport HADOOP_HOME=/usr/hdp/current/hadoop-client\nexport HDFS_HOME=/usr/hdp/current/hadoop-hdfs-client\nexport MAPREDUCE_HOME=/usr/hdp/current/hadoop-mapreduce-client\nexport YARN_HOME=/usr/hdp/current/hadoop-yarn-client\nexport HIVE_HOME=/usr/hdp/current/hive-client\nexport HCAT_HOME=/usr/hdp/current/hive-webhcat\nexport TEZ_HOME=/usr/hdp/current/tez-client\nexport HBASE_HOME=/usr/hdp/current/hbase-client\nexport PHOENIX_HOME=/usr/hdp/current/phoenix-client\nexport ACTIVITY_ANALYZER_HOME=/usr/hdp/share/hst/activity-analyzer\nexport AMS_COLLECTOR_HOME=/usr/lib/ambari-metrics-collector\nexport JAVA_HOME={{java_home}}\n\n## Set conf dir for various components\nexport HADOOP_CONF_DIR=/etc/hadoop/conf/\nexport HIVE_CONF_DIR=/etc/hive/conf/\nexport HBASE_CONF_DIR=/etc/hbase/conf/\nexport TEZ_CONF_DIR=/etc/tez/conf/\nexport ACTIVITY_ANALYZER_CONF_DIR=/etc/smartsense-activity/conf/\nexport AMS_HBASE_CONF=/etc/ams-hbase/conf\n\nexport DEBUG_ENABLED=false\n\n## Set JVM related configs\nexport ANALYZER_JAVA_OPTS=\"{{analyzer_jvm_opts}} -Xmx{{analyzer_jvm_heap}}m\""
                }
            }
        },
        {
            "activity-zeppelin-env": {
                "properties_attributes": {},
                "properties": {
                    "activity-zeppelin-env-content": "#!/bin/bash\n\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n\nexport JAVA_HOME={{java_home}}\n# Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\"\nexport ZEPPELIN_JAVA_OPTS=\"-Dhdp.version={{hdp_version}} -Dlog.file.name=activity-explorer.log -DSmartSenseActivityExplorer\"      \t\t\n# export ZEPPELIN_INTP_MEM       \t\t# zeppelin interpreter process jvm mem options. Default = ZEPPELIN_MEM\n# export ZEPPELIN_INTP_JAVA_OPTS \t\t# zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTS\n\nexport RUN_AS_USER={{run_as_user}}\nexport ZEPPELIN_MEM=\" -Xms256m -Xmx1024m -XX:MaxPermSize=256m\"\nexport ZEPPELIN_LOG_DIR={{activity_log_dir}}\nexport ZEPPELIN_PID_DIR=/var/run/smartsense-activity-explorer\nexport ZEPPELIN_WAR_TEMPDIR=/var/lib/smartsense/activity-explorer/webapp\nexport ZEPPELIN_NOTEBOOK_DIR=/var/lib/smartsense/activity-explorer/notebook\nexport ZEPPELIN_CLASSPATH=\"/etc/ams-hbase/conf:${ZEPPELIN_CLASSPATH}\"\nexport CLASSPATH=${ZEPPELIN_CLASSPATH}"
                }
            }
        },
        {
            "yarn-hbase-policy": {
                "properties_attributes": {},
                "properties": {
                    "security.masterregion.protocol.acl": "*",
                    "security.admin.protocol.acl": "*",
                    "security.client.protocol.acl": "*"
                }
            }
        },
        {
            "activity-zeppelin-shiro": {
                "properties_attributes": {},
                "properties": {
                    "main.iniRealm.credentialsMatcher": "$credentialMatcher",
                    "main.credentialMatcher": "org.apache.shiro.authc.credential.PasswordMatcher",
                    "main.securityManager.sessionManager": "$sessionManager",
                    "main.securityManager.sessionManager.globalSessionTimeout": "86400000",
                    "main.sessionManager": "org.apache.shiro.web.session.mgt.DefaultWebSessionManager"
                }
            }
        },
        {
            "ams-hbase-security-site": {
                "properties_attributes": {},
                "properties": {
                    "hbase.coprocessor.master.classes": "org.apache.hadoop.hbase.security.access.AccessController",
                    "hbase.myclient.keytab": "/etc/security/keytabs/ams.collector.keytab",
                    "hadoop.security.authentication": "kerberos",
                    "ams.zookeeper.keytab": "/etc/security/keytabs/ams-zk.service.keytab",
                    "hbase.zookeeper.property.jaasLoginRenew": "3600000",
                    "hbase.regionserver.keytab.file": "/etc/security/keytabs/ams-hbase.regionserver.keytab",
                    "hbase.zookeeper.property.authProvider.1": "org.apache.zookeeper.server.auth.SASLAuthenticationProvider",
                    "ams.monitor.principal": "amsmon/_HOST@TEST014.ORG",
                    "hbase.zookeeper.property.kerberos.removeHostFromPrincipal": "true",
                    "ams.monitor.keytab": "/etc/security/keytabs/ams-monitor.keytab",
                    "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
                    "hbase.security.authentication": "kerberos",
                    "hbase.master.keytab.file": "/etc/security/keytabs/ams-hbase.master.keytab",
                    "hbase.security.authorization": "true",
                    "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal": "true"
                }
            }
        },
        {
            "ranger-yarn-plugin-properties": {
                "properties_attributes": {},
                "properties": {
                    "ranger-yarn-plugin-enabled": "No",
                    "hadoop.rpc.protection": "",
                    "external_ranger_admin_username": "",
                    "REPOSITORY_CONFIG_USERNAME": "yarn",
                    "external_admin_username": "",
                    "common.name.for.certificate": "",
                    "policy_user": "ambari-qa"
                }
            }
        },
        {
            "yarn-env": {
                "properties_attributes": {},
                "properties": {
                    "yarn_cgroups_enabled": "false",
                    "yarn_user_nproc_limit": "65536",
                    "yarn_log_dir_prefix": "/var/log/hadoop-yarn",
                    "apptimelineserver_heapsize": "8072",
                    "yarn_user_nofile_limit": "32768",
                    "yarn.registry-dns.keytab": "/etc/security/keytabs/yarn.service.keytab",
                    "content": "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport HADOOP_LOG_DIR={{yarn_log_dir}}\nexport HADOOP_SECURE_LOG_DIR={{yarn_log_dir}}\nexport HADOOP_PID_DIR={{yarn_pid_dir}}\nexport HADOOP_SECURE_PID_DIR={{yarn_pid_dir}}\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\nexport JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n# We need to add the EWMA and RFA appender for the yarn daemons only;\n# however, HADOOP_ROOT_LOGGER is shared by the yarn client and the\n# daemons. This is restrict the EWMA appender to daemons only.\nexport HADOOP_LOGLEVEL=${HADOOP_LOGLEVEL:-INFO}\nexport HADOOP_ROOT_LOGGER=${HADOOP_ROOT_LOGGER:-INFO,console}\nexport HADOOP_DAEMON_ROOT_LOGGER=${HADOOP_DAEMON_ROOT_LOGGER:-${HADOOP_LOGLEVEL},EWMA,RFA}\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n#echo \"run java in $JAVA_HOME\"\nJAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\necho \"Error: JAVA_HOME is not set.\"\nexit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\nJAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either HADOOP_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as HADOOP_OPTS\n# and therefore may override any similar flags set in HADOOP_OPTS\n{% if security_enabled %}\nexport YARN_RESOURCEMANAGER_OPTS=\"-Djava.security.auth.login.config={{yarn_jaas_file}}\"\n{% endif %}\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either HADOOP_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the timeline server using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either HADOOP_OPTS\n# and/or YARN_TIMELINESERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n{% if security_enabled %}\nexport YARN_TIMELINESERVER_OPTS=\"-Djava.security.auth.login.config={{yarn_ats_jaas_file}}\"\n{% endif %}\n\n{% if security_enabled %}\nexport YARN_TIMELINEREADER_OPTS=\"-Djava.security.auth.login.config={{yarn_ats_jaas_file}}\"\n{% endif %}\n\n{% if security_enabled %}\nexport YARN_REGISTRYDNS_OPTS=\"-Djava.security.auth.login.config={{yarn_registry_dns_jaas_file}}\"\n{% endif %}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as HADOOP_OPTS\n# and therefore may override any similar flags set in HADOOP_OPTS\n{% if security_enabled %}\nexport YARN_NODEMANAGER_OPTS=\"-Djava.security.auth.login.config={{yarn_nm_jaas_file}} -Dsun.security.krb5.rcache=none\"\n{% endif %}\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$HADOOP_LOG_DIR\" = \"\" ]; then\nHADOOP_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$HADOOP_LOGFILE\" = \"\" ]; then\nHADOOP_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\nYARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n# YARN now uses specific subcommand options of the pattern (command)_(subcommand)_OPTS for every\n# component. Because of this, HADDOP_OPTS is now used as a simple way to specify common properties\n# between all YARN components.\nHADOOP_OPTS=\"$HADOOP_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nHADOOP_OPTS=\"$HADOOP_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\nHADOOP_OPTS=\"$HADOOP_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}\"\n\n{% if security_enabled %}\nHADOOP_OPTS=\"$HADOOP_OPTS -Djavax.security.auth.useSubjectCredsOnly=false\"\n{% endif %}\n\n{% if rm_security_opts is defined %}\nYARN_RESOURCEMANAGER_OPTS=\"{{rm_security_opts}} $YARN_RESOURCEMANAGER_OPTS\"\n{% endif %}\n\nexport YARN_NODEMANAGER_OPTS=\"$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT\"\nexport YARN_RESOURCEMANAGER_OPTS=\"$YARN_RESOURCEMANAGER_OPTS -Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY -Drm.audit.logger=INFO,RMAUDIT\"\n\n{% if registry_dns_needs_privileged_access %}\n# If the DNS server is configured to use the standard privileged port 53,\n# the environment variables YARN_REGISTRYDNS_SECURE_USER and\n# YARN_REGISTRYDNS_SECURE_EXTRA_OPTS must be set.\nexport YARN_REGISTRYDNS_SECURE_USER={{yarn_user}}\nexport YARN_REGISTRYDNS_SECURE_EXTRA_OPTS=\"-jvm server\"\n{% endif %}",
                    "is_supported_yarn_ranger": "true",
                    "service_check.queue.name": "default",
                    "resourcemanager_heapsize": "1024",
                    "registry.dns.bind-port": "53",
                    "yarn_pid_dir_prefix": "/var/run/hadoop-yarn",
                    "yarn_user": "yarn",
                    "min_user_id": "1000",
                    "yarn_ats_user_keytab": "/etc/security/keytabs/yarn-ats.hbase-client.headless.keytab",
                    "yarn_heapsize": "1024",
                    "yarn_ats_user": "yarn-ats",
                    "yarn.registry-dns.principal": "yarn/_HOST@TEST014.ORG",
                    "nodemanager_heapsize": "1024"
                }
            }
        },
        {
            "hst-server-conf": {
                "properties_attributes": {},
                "properties": {
                    "customer.account.name": "unspecified",
                    "server.ssl_enabled": "false",
                    "agent.request.processing.timeout": "7200",
                    "client.threadpool.size.max": "40",
                    "server.max.heap": "2048",
                    "server.storage.dir": "/var/lib/smartsense/hst-server/data",
                    "customer.enable.flex.subscription": "false",
                    "gateway.registration.port": "9450",
                    "gateway.port": "9451",
                    "customer.flex.subscription.id": "",
                    "customer.notification.email": "unspecified",
                    "agent.request.syncup.interval": "180",
                    "gateway.host": "embedded",
                    "server.port": "9000",
                    "server.tmp.dir": "/var/lib/smartsense/hst-server/tmp",
                    "server.url": "http://hdmas1dev.test014.org:9000",
                    "customer.smartsense.id": "unspecified"
                }
            }
        },
        {
            "ranger-hdfs-audit": {
                "properties_attributes": {},
                "properties": {
                    "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/hadoop/hdfs/audit/hdfs/spool",
                    "xasecure.audit.is.enabled": "true",
                    "xasecure.audit.jaas.Client.option.keyTab": "/etc/security/keytabs/nn.service.keytab",
                    "xasecure.audit.destination.hdfs": "true",
                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                    "xasecure.audit.jaas.Client.option.useKeyTab": "true",
                    "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/hadoop/hdfs/audit/solr/spool",
                    "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
                    "xasecure.audit.jaas.Client.option.principal": "nn/_HOST@TEST014.ORG",
                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                    "ranger.plugin.hdfs.ambari.cluster.name": "{{cluster_name}}",
                    "xasecure.audit.destination.solr": "false",
                    "xasecure.audit.destination.solr.zookeepers": "NONE",
                    "xasecure.audit.provider.summary.enabled": "false",
                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                    "xasecure.audit.destination.solr.urls": ""
                }
            }
        },
        {
            "ranger-hdfs-plugin-properties": {
                "properties_attributes": {},
                "properties": {
                    "ranger-hdfs-plugin-enabled": "No",
                    "hadoop.rpc.protection": "authentication",
                    "external_ranger_admin_username": "",
                    "REPOSITORY_CONFIG_USERNAME": "hadoop",
                    "external_admin_username": "",
                    "common.name.for.certificate": "",
                    "policy_user": "ambari-qa"
                }
            }
        },
        {
            "resource-types": {
                "properties_attributes": {},
                "properties": {
                    "yarn.resource-types.yarn.io_gpu.maximum-allocation": "8",
                    "yarn.resource-types": ""
                }
            }
        },
        {
            "ams-env": {
                "properties_attributes": {},
                "properties": {
                    "timeline.metrics.skip.disk.metrics.patterns": "true",
                    "metrics_collector_heapsize": "512",
                    "min_ambari_metrics_hadoop_sink_version": "2.7.0.0",
                    "failover_strategy_blacklisted_interval": "300",
                    "metrics_collector_pid_dir": "/var/run/ambari-metrics-collector",
                    "metrics_collector_log_dir": "/var/log/ambari-metrics-collector",
                    "metrics_monitor_pid_dir": "/var/run/ambari-metrics-monitor",
                    "ams_classpath_additional": "",
                    "content": "\n# Set environment variables here.\n\n# AMS instance name\nexport AMS_INSTANCE_NAME={{hostname}}\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase Tables Initialization check enabled\nexport AMS_HBASE_INIT_CHECK_ENABLED={{ams_hbase_init_check_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Dzookeeper.sasl.client.username={{zk_principal_user}} -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\"\n\n# Metrics collector host will be blacklisted for specified number of seconds if metric monitor failed to connect to it.\nexport AMS_FAILOVER_STRATEGY_BLACKLISTED_INTERVAL={{failover_strategy_blacklisted_interval}}\n\n# Extra Java CLASSPATH elements for Metrics Collector. Optional.\nexport COLLECTOR_ADDITIONAL_CLASSPATH={{ams_classpath_additional}}",
                    "timeline.metrics.skip.network.interfaces.patterns": "None",
                    "ambari_metrics_user": "ams",
                    "metrics_monitor_log_dir": "/var/log/ambari-metrics-monitor",
                    "timeline.metrics.host.inmemory.aggregation.jvm.arguments": "-Xmx256m -Xms128m -XX:PermSize=68m",
                    "timeline.metrics.skip.virtual.interfaces": "false"
                }
            }
        },
        {
            "hst-log4j": {
                "properties_attributes": {},
                "properties": {
                    "hst_max_backup_index": "10",
                    "hst_max_file_size": "30",
                    "hst-log4j-content": "\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Define some default values that can be overridden by system properties\n# Root logger option\nlog4j.rootLogger=INFO,file\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{hst_log_dir}}/${log.file.name}\nlog4j.appender.file.MaxFileSize={{hst_max_file_size}}MB\nlog4j.appender.file.MaxBackupIndex={{hst_max_backup_index}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n\n\nlog4j.appender.analytics=org.apache.log4j.RollingFileAppender\nlog4j.appender.analytics.File={{hst_log_dir}}/analytics.log\nlog4j.appender.analytics.MaxFileSize={{hst_max_file_size}}MB\nlog4j.appender.analytics.MaxBackupIndex={{hst_max_backup_index}}\nlog4j.appender.analytics.layout=org.apache.log4j.PatternLayout\nlog4j.appender.analytics.layout.ConversionPattern=%m%n\n\n# HST logger\nlog4j.logger.com.hortonworks=INFO\ncom.github.oxo42.stateless4j=WARN\nlog4j.logger.com.sun.jersey=WARN\nlog4j.logger.org.eclipse.jetty.server=INFO\n\n# Analytics logger\nlog4j.logger.analytics=INFO,analytics\nlog4j.additivity.analytics=false",
                    "hst_log_dir": "/var/log/hst"
                }
            }
        },
        {
            "capacity-scheduler": {
                "properties_attributes": {},
                "properties": {
                    "yarn.scheduler.capacity.schedule-asynchronously.maximum-threads": "1",
                    "yarn.scheduler.capacity.root.acl_submit_applications": "yarn,ambari-qa",
                    "yarn.scheduler.capacity.root.accessible-node-labels": "*",
                    "yarn.scheduler.capacity.default.minimum-user-limit-percent": "100",
                    "yarn.scheduler.capacity.maximum-am-resource-percent": "0.2",
                    "yarn.scheduler.capacity.root.acl_administer_queue": "yarn",
                    "yarn.scheduler.capacity.root.default.acl_administer_jobs": "yarn",
                    "yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
                    "yarn.scheduler.capacity.root.default.capacity": "100",
                    "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
                    "yarn.scheduler.capacity.root.queues": "default",
                    "yarn.scheduler.capacity.root.capacity": "100",
                    "yarn.scheduler.capacity.root.default.acl_submit_applications": "yarn,yarn-ats",
                    "yarn.scheduler.capacity.root.default.maximum-capacity": "100",
                    "yarn.scheduler.capacity.schedule-asynchronously.enable": "true",
                    "yarn.scheduler.capacity.node-locality-delay": "40",
                    "yarn.scheduler.capacity.root.default.acl_administer_queue": "yarn",
                    "yarn.scheduler.capacity.maximum-applications": "10000",
                    "yarn.scheduler.capacity.schedule-asynchronously.scheduling-interval-ms": "10",
                    "yarn.scheduler.capacity.root.default.state": "RUNNING"
                }
            }
        },
        {
            "hadoop-metrics2.properties": {
                "properties_attributes": {},
                "properties": {
                    "content": "\n{% if has_ganglia_server %}\n*.period=60\n\n*.sink.ganglia.class=org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31\n*.sink.ganglia.period=10\n\n# default for supportsparse is false\n*.sink.ganglia.supportsparse=true\n\n.sink.ganglia.slope=jvm.metrics.gcCount=zero,jvm.metrics.memHeapUsedM=both\n.sink.ganglia.dmax=jvm.metrics.threadsBlocked=70,jvm.metrics.memHeapUsedM=40\n\n# Hook up to the server\nnamenode.sink.ganglia.servers={{ganglia_server_host}}:8661\ndatanode.sink.ganglia.servers={{ganglia_server_host}}:8659\njobtracker.sink.ganglia.servers={{ganglia_server_host}}:8662\ntasktracker.sink.ganglia.servers={{ganglia_server_host}}:8658\nmaptask.sink.ganglia.servers={{ganglia_server_host}}:8660\nreducetask.sink.ganglia.servers={{ganglia_server_host}}:8660\nresourcemanager.sink.ganglia.servers={{ganglia_server_host}}:8664\nnodemanager.sink.ganglia.servers={{ganglia_server_host}}:8657\nhistoryserver.sink.ganglia.servers={{ganglia_server_host}}:8666\njournalnode.sink.ganglia.servers={{ganglia_server_host}}:8654\nnimbus.sink.ganglia.servers={{ganglia_server_host}}:8649\nsupervisor.sink.ganglia.servers={{ganglia_server_host}}:8650\n\nresourcemanager.sink.ganglia.tagsForPrefix.yarn=Queue\n\n{% endif %}\n\n{% if has_metric_collector %}\n\n*.period={{metrics_collection_period}}\n*.sink.timeline.plugin.urls=file:///usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink.jar\n*.sink.timeline.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink\n*.sink.timeline.period={{metrics_collection_period}}\n*.sink.timeline.sendInterval={{metrics_report_interval}}000\n*.sink.timeline.slave.host.name={{hostname}}\n*.sink.timeline.zookeeper.quorum={{zookeeper_quorum}}\n*.sink.timeline.protocol={{metric_collector_protocol}}\n*.sink.timeline.port={{metric_collector_port}}\n*.sink.timeline.instanceId = {{cluster_name}}\n*.sink.timeline.set.instanceId = {{set_instanceId}}\n*.sink.timeline.host_in_memory_aggregation = {{host_in_memory_aggregation}}\n*.sink.timeline.host_in_memory_aggregation_port = {{host_in_memory_aggregation_port}}\n{% if is_aggregation_https_enabled %}\n*.sink.timeline.host_in_memory_aggregation_protocol = {{host_in_memory_aggregation_protocol}}\n{% endif %}\n\n# HTTPS properties\n*.sink.timeline.truststore.path = {{metric_truststore_path}}\n*.sink.timeline.truststore.type = {{metric_truststore_type}}\n*.sink.timeline.truststore.password = {{metric_truststore_password}}\n\ndatanode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nnamenode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nresourcemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}\nnodemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}\njobhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}\njournalnode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nmaptask.sink.timeline.collector.hosts={{ams_collector_hosts}}\nreducetask.sink.timeline.collector.hosts={{ams_collector_hosts}}\napplicationhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}\n\nresourcemanager.sink.timeline.tagsForPrefix.yarn=Queue\n\n{% if is_nn_client_port_configured %}\n# Namenode rpc ports customization\nnamenode.sink.timeline.metric.rpc.client.port={{nn_rpc_client_port}}\n{% endif %}\n{% if is_nn_dn_port_configured %}\nnamenode.sink.timeline.metric.rpc.datanode.port={{nn_rpc_dn_port}}\n{% endif %}\n{% if is_nn_healthcheck_port_configured %}\nnamenode.sink.timeline.metric.rpc.healthcheck.port={{nn_rpc_healthcheck_port}}\n{% endif %}\n\n{% endif %}"
                }
            }
        },
        {
            "ams-site": {
                "properties_attributes": {},
                "properties": {
                    "timeline.metrics.cluster.aggregator.hourly.interval": "3600",
                    "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.downsampler.event.metric.patterns": "topology\\.%",
                    "timeline.metrics.host.aggregator.hourly.interval": "3600",
                    "timeline.metrics.aggregators.skip.blockcache.enabled": "false",
                    "timeline.metrics.service.rpc.address": "0.0.0.0:60200",
                    "timeline.metrics.service.operation.mode": "embedded",
                    "timeline.metrics.aggregator.checkpoint.dir": "/var/lib/ambari-metrics-collector/checkpoint",
                    "failover.strategy": "round-robin",
                    "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.service.http.policy": "HTTP_ONLY",
                    "timeline.metrics.downsampler.topn.value": "10",
                    "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.service.watcher.timeout": "30",
                    "timeline.metrics.service.checkpointDelay": "60",
                    "timeline.metrics.host.inmemory.aggregation.port": "61888",
                    "timeline.metrics.cluster.aggregator.second.interval": "120",
                    "timeline.metrics.service.webapp.address": "0.0.0.0:6188",
                    "timeline.metrics.host.aggregator.daily.ttl": "31536000",
                    "timeline.metrics.service.watcher.delay": "30",
                    "timeline.metrics.service.watcher.disabled": "false",
                    "timeline.metrics.host.inmemory.aggregation.http.policy": "HTTP_ONLY",
                    "timeline.metrics.hbase.init.check.enabled": "true",
                    "timeline.metrics.host.aggregator.hourly.disabled": "false",
                    "timeline.metrics.service.cluster.aggregator.appIds": "datanode,nodemanager,hbase",
                    "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.service.resultset.fetchSize": "2000",
                    "timeline.metrics.cluster.aggregator.hourly.ttl": "31536000",
                    "cluster.zookeeper.quorum": "{{cluster_zookeeper_quorum_hosts}}",
                    "timeline.metrics.downsampler.topn.function": "max",
                    "timeline.metrics.host.aggregator.ttl": "86400",
                    "phoenix.spool.directory": "/tmp",
                    "timeline.metrics.service.handler.thread.count": "20",
                    "timeline.metrics.cache.size": "200",
                    "timeline.metrics.cluster.aggregator.minute.interval": "300",
                    "timeline.metrics.cluster.aggregator.minute.ttl": "2592000",
                    "timeline.metrics.host.aggregator.minute.interval": "300",
                    "timeline.metrics.cluster.aggregator.interpolation.enabled": "true",
                    "timeline.metrics.cache.commit.interval": "10",
                    "timeline.metrics.host.aggregator.minute.disabled": "false",
                    "timeline.metrics.service.metadata.filters": "ContainerResource",
                    "timeline.metrics.cache.enabled": "true",
                    "timeline.metrics.cluster.aggregator.minute.disabled": "false",
                    "timeline.metrics.service.use.groupBy.aggregators": "true",
                    "phoenix.query.maxGlobalMemoryPercentage": "25",
                    "timeline.metrics.service.default.result.limit": "5760",
                    "timeline.metrics.hbase.compression.scheme": "SNAPPY",
                    "timeline.metrics.cluster.aggregator.daily.ttl": "63072000",
                    "cluster.zookeeper.property.clientPort": "{{cluster_zookeeper_clientPort}}",
                    "timeline.metrics.sink.report.interval": "60",
                    "timeline.metrics.cluster.aggregator.second.timeslice.interval": "30",
                    "timeline.metrics.transient.metric.patterns": "topology\\.%",
                    "timeline.metrics.cluster.aggregation.sql.filters": "sdisk\\_%,boottime",
                    "timeline.metrics.downsampler.topn.metric.patterns": "dfs.NNTopUserOpCounts.windowMs=60000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=300000.op=__%.user=%,dfs.NNTopUserOpCounts.windowMs=1500000.op=__%.user=%",
                    "timeline.metrics.host.aggregator.hourly.ttl": "2592000",
                    "timeline.metrics.whitelisting.enabled": "false",
                    "timeline.metrics.cluster.aggregator.daily.interval": "86400",
                    "timeline.metrics.host.aggregator.daily.disabled": "false",
                    "timeline.metrics.cluster.aggregator.daily.disabled": "false",
                    "timeline.metrics.cluster.aggregator.hourly.disabled": "false",
                    "timeline.metrics.service.watcher.initial.delay": "600",
                    "timeline.metrics.host.aggregator.minute.ttl": "604800",
                    "timeline.metrics.host.inmemory.aggregation": "false",
                    "timeline.metrics.hbase.data.block.encoding": "FAST_DIFF",
                    "timeline.metrics.cluster.aggregator.second.disabled": "false",
                    "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier": "2",
                    "timeline.metrics.daily.aggregator.minute.interval": "86400",
                    "timeline.metrics.cluster.aggregator.second.ttl": "259200"
                }
            }
        },
        {
            "krb5-conf": {
                "properties_attributes": {},
                "properties": {
                    "manage_krb5_conf": "true",
                    "conf_dir": "/etc",
                    "content": "{#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#}\n[libdefaults]\n  renew_lifetime = 7d\n  forwardable = true\n  default_realm = {{realm}}\n  ticket_lifetime = 24h\n  dns_lookup_realm = false\n  dns_lookup_kdc = false\n  default_ccache_name = /tmp/krb5cc_%{uid}\n  #default_tgs_enctypes = {{encryption_types}}\n  #default_tkt_enctypes = {{encryption_types}}\n{% if domains %}\n[domain_realm]\n{%- for domain in domains.split(',') %}\n  {{domain|trim()}} = {{realm}}\n{%- endfor %}\n{% endif %}\n[logging]\n  default = FILE:/var/log/krb5kdc.log\n  admin_server = FILE:/var/log/kadmind.log\n  kdc = FILE:/var/log/krb5kdc.log\n\n[realms]\n  {{realm}} = {\n{%- if master_kdc %}\n    master_kdc = {{master_kdc|trim()}}\n{%- endif -%}\n{%- if kdc_hosts > 0 -%}\n{%- set kdc_host_list = kdc_hosts.split(',')  -%}\n{%- if kdc_host_list and kdc_host_list|length > 0 %}\n    admin_server = {{admin_server_host|default(kdc_host_list[0]|trim(), True)}}\n{%- if kdc_host_list -%}\n{%- if master_kdc and (master_kdc not in kdc_host_list) %}\n    kdc = {{master_kdc|trim()}}\n{%- endif -%}\n{% for kdc_host in kdc_host_list %}\n    kdc = {{kdc_host|trim()}}\n{%- endfor -%}\n{% endif %}\n{%- endif %}\n{%- endif %}\n  }\n\n{# Append additional realm declarations below #}"
                }
            }
        },
        {
            "mapred-site": {
                "properties_attributes": {},
                "properties": {
                    "mapreduce.map.speculative": "false",
                    "mapreduce.jobhistory.keytab": "/etc/security/keytabs/jhs.service.keytab",
                    "mapreduce.jobhistory.recovery.store.class": "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
                    "mapreduce.job.counters.max": "130",
                    "mapreduce.reduce.log.level": "INFO",
                    "mapreduce.shuffle.port": "13562",
                    "yarn.app.mapreduce.am.admin-command-opts": "-Dhdp.version=${hdp.version}",
                    "mapreduce.jobhistory.admin.acl": "mapred",
                    "mapreduce.jobhistory.principal": "jhs/_HOST@TEST014.ORG",
                    "mapreduce.job.emit-timeline-data": "true",
                    "mapreduce.jobhistory.recovery.enable": "true",
                    "mapreduce.map.log.level": "INFO",
                    "yarn.app.mapreduce.am.staging-dir": "/user",
                    "mapreduce.reduce.shuffle.merge.percent": "0.66",
                    "mapreduce.cluster.acls.enabled": "true",
                    "mapreduce.job.acl-modify-job": " ",
                    "mapreduce.output.fileoutputformat.compress": "false",
                    "mapreduce.admin.map.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
                    "mapreduce.job.reduce.slowstart.completedmaps": "0.05",
                    "mapreduce.jobhistory.http.policy": "HTTP_ONLY",
                    "mapreduce.job.queuename": "default",
                    "mapreduce.application.framework.path": "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
                    "mapreduce.application.classpath": "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
                    "mapreduce.jobhistory.webapp.spnego-keytab-file": "/etc/security/keytabs/spnego.service.keytab",
                    "mapreduce.reduce.java.opts": "-Xmx1228m",
                    "mapreduce.map.output.compress": "false",
                    "mapreduce.reduce.input.buffer.percent": "0.0",
                    "mapreduce.job.acl-view-job": " ",
                    "mapreduce.jobhistory.intermediate-done-dir": "/mr-history/tmp",
                    "yarn.app.mapreduce.am.log.level": "INFO",
                    "mapreduce.reduce.shuffle.fetch.retry.interval-ms": "1000",
                    "mapreduce.reduce.shuffle.input.buffer.percent": "0.7",
                    "mapreduce.reduce.speculative": "false",
                    "mapreduce.output.fileoutputformat.compress.type": "BLOCK",
                    "mapreduce.task.io.sort.mb": "429",
                    "mapred.local.dir": "/hadoop/mapred,/hadoop/hadoop/mapred",
                    "mapreduce.cluster.administrators": " hadoop",
                    "mapreduce.reduce.shuffle.fetch.retry.timeout-ms": "30000",
                    "mapreduce.jobhistory.webapp.spnego-principal": "HTTP/_HOST@TEST014.ORG",
                    "mapreduce.jobhistory.address": "%HOSTGROUP::host_group_2%:10020",
                    "mapreduce.map.sort.spill.percent": "0.7",
                    "mapreduce.map.memory.mb": "768",
                    "mapreduce.admin.reduce.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
                    "mapreduce.jobhistory.bind-host": "0.0.0.0",
                    "mapreduce.task.timeout": "300000",
                    "mapreduce.admin.user.env": "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64",
                    "mapreduce.am.max-attempts": "2",
                    "mapreduce.reduce.memory.mb": "1536",
                    "mapreduce.framework.name": "yarn",
                    "mapreduce.reduce.shuffle.parallelcopies": "30",
                    "mapreduce.jobhistory.done-dir": "/mr-history/done",
                    "mapreduce.jobhistory.webapp.address": "%HOSTGROUP::host_group_2%:19888",
                    "mapreduce.reduce.shuffle.fetch.retry.enabled": "1",
                    "mapreduce.task.io.sort.factor": "100",
                    "mapreduce.jobhistory.recovery.store.leveldb.path": "/hadoop/mapreduce/jhs",
                    "yarn.app.mapreduce.am.command-opts": "-Xmx614m -Dhdp.version=${hdp.version}",
                    "mapreduce.map.java.opts": "-Xmx614m",
                    "yarn.app.mapreduce.am.resource.mb": "768"
                }
            }
        },
        {
            "hdfs-log4j": {
                "properties_attributes": {},
                "properties": {
                    "hadoop_security_log_max_backup_size": "256",
                    "hadoop_security_log_number_of_backup_files": "20",
                    "hadoop_log_number_of_backup_files": "10",
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize={{hadoop_security_log_max_backup_size}}MB\nhadoop.security.log.maxbackupindex={{hadoop_security_log_number_of_backup_files}}\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.additivity.SecurityLogger=false\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# NameNode metrics logging.\n# The default is to retain two namenode-metrics.log files up to 64MB each.\n#\nnamenode.metrics.logger=INFO,NullAppender\nlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}\nlog4j.additivity.NameNodeMetricsLog=false\nlog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log\nlog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1\nlog4j.appender.NNMETRICSRFA.MaxFileSize=64MB\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize={{hadoop_log_max_backup_size}}MB\nlog4j.appender.RFA.MaxBackupIndex={{hadoop_log_number_of_backup_files}}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN\n\n# Adding logging for 3rd party library\nlog4j.logger.org.apache.commons.beanutils=WARN",
                    "hadoop_log_max_backup_size": "256"
                }
            }
        },
        {
            "activity-conf": {
                "properties_attributes": {},
                "properties": {
                    "global.activity.processing.parallelism": "8",
                    "yarn_app.activity.watcher.enabled": "true",
                    "mr_job.max.job.size.mb.for.parallel.execution": "500",
                    "global.activity.processor.pool.max.wait.seconds": "60",
                    "phoenix.sink.batch.size": "5000",
                    "activity.explorer.user.keytab": "/etc/security/keytabs/activity-explorer.headless.keytab",
                    "phoenix.sink.flush.interval.seconds": "3600",
                    "hdfs.activity.watcher.enabled": "true",
                    "global.activity.analyzer.user": "activity_analyzer",
                    "tez_job.activity.watcher.enabled": "true",
                    "activity.explorer.user": "activity_explorer",
                    "global.activity.analyzer.user.keytab": "/etc/security/keytabs/activity-analyzer.headless.keytab",
                    "global.activity.analyzer.user.principal": "activity_analyzer/_HOST@TEST014.ORG",
                    "activity.explorer.user.principal": "activity_explorer/_HOST@TEST014.ORG",
                    "mr_job.activity.watcher.enabled": "true",
                    "tez_job.tmp.dir": "/var/lib/smartsense/activity-analyzer/tez/tmp/"
                }
            }
        },
        {
            "activity-zeppelin-site": {
                "properties_attributes": {},
                "properties": {
                    "zeppelin.notebook.dir": "/var/lib/smartsense/activity-explorer/notebook",
                    "zeppelin.server.context.path": "/",
                    "zeppelin.ssl.keystore.type": "JKS",
                    "zeppelin.ssl.truststore.path": "/var/lib/smartsense/activity-explorer/truststore",
                    "zeppelin.war.tempdir": "/var/lib/smartsense/activity-explorer/webapp",
                    "zeppelin.websocket.max.text.message.size": "1024000",
                    "zeppelin.notebook.homescreen.hide": "false",
                    "zeppelin.interpreters": "org.apache.zeppelin.phoenix.PhoenixInterpreter",
                    "zeppelin.server.port": "9060",
                    "zeppelin.ssl": "false",
                    "zeppelin.notebook.storage": "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
                    "zeppelin.interpreter.connect.timeout": "30000",
                    "zeppelin.anonymous.allowed": "false",
                    "zeppelin.interpreter.dir": "/usr/hdp/share/hst/activity-explorer/interpreter",
                    "zeppelin.server.kerberos.keytab": "/etc/security/keytabs/activity-explorer.headless.keytab",
                    "zeppelin.ssl.truststore.type": "JKS",
                    "zeppelin.ssl.keystore.path": "/var/lib/smartsense/activity-explorer/keystore",
                    "zeppelin.server.allowed.origins": "*",
                    "zeppelin.server.kerberos.principal": "activity_explorer/_HOST@TEST014.ORG",
                    "zeppelin.notebook.cron.enable": "true",
                    "zeppelin.server.addr": "0.0.0.0",
                    "zeppelin.ssl.client.auth": "false"
                }
            }
        },
        {
            "ams-hbase-env": {
                "properties_attributes": {},
                "properties": {
                    "hbase_master_maxperm_size": "128",
                    "max_open_files_limit": "32768",
                    "regionserver_xmn_size": "128",
                    "hbase_master_heapsize": "768",
                    "hbase_regionserver_xmn_ratio": "0.2",
                    "hbase_master_xmn_size": "192",
                    "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Dzookeeper.sasl.client.username={{zk_principal_user}} -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Dzookeeper.sasl.client.username={{zk_principal_user}} -Djava.security.auth.login.config={{master_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Dzookeeper.sasl.client.username={{zk_principal_user}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}} -Djavax.security.auth.useSubjectCredsOnly=false\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Dzookeeper.sasl.client.username={{zk_principal_user}} -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}\n\n# Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\nexport HBASE_HOME={{ams_hbase_home_dir}}",
                    "hbase_pid_dir": "/var/run/ambari-metrics-collector/",
                    "hbase_regionserver_shutdown_timeout": "30",
                    "hbase_log_dir": "/var/log/ambari-metrics-collector",
                    "hbase_regionserver_heapsize": "512",
                    "hbase_classpath_additional": ""
                }
            }
        },
        {
            "ams-log4j": {
                "properties_attributes": {},
                "properties": {
                    "ams_log_number_of_backup_files": "60",
                    "ams_log_max_backup_size": "80",
                    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize={{ams_log_max_backup_size}}MB\nlog4j.appender.file.MaxBackupIndex={{ams_log_number_of_backup_files}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
                }
            }
        },
        {
            "ams-ssl-server": {
                "properties_attributes": {},
                "properties": {
                    "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
                    "ssl.server.truststore.reload.interval": "10000",
                    "ssl.server.truststore.type": "jks",
                    "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
                    "ssl.server.keystore.type": "jks"
                }
            }
        },
        {
            "ams-hbase-log4j": {
                "properties_attributes": {},
                "properties": {
                    "ams_hbase_log_maxfilesize": "256",
                    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize={{ams_hbase_log_maxfilesize}}MB\nhbase.log.maxbackupindex={{ams_hbase_log_maxbackupindex}}\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize={{ams_hbase_security_log_maxfilesize}}MB\nhbase.security.log.maxbackupindex={{ams_hbase_security_log_maxbackupindex}}\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO",
                    "ams_hbase_log_maxbackupindex": "20",
                    "ams_hbase_security_log_maxbackupindex": "20",
                    "ams_hbase_security_log_maxfilesize": "256"
                }
            }
        },
        {
            "kerberos-env": {
                "properties_attributes": {},
                "properties": {
                    "password_min_uppercase_letters": "1",
                    "password_min_whitespace": "0",
                    "password_min_punctuation": "1",
                    "manage_auth_to_local": "true",
                    "password_min_digits": "1",
                    "encryption_types": "aes des3-cbc-sha1 rc4 des-cbc-md5",
                    "kdc_create_attributes": "",
                    "create_ambari_principal": "true",
                    "password_min_lowercase_letters": "1",
                    "password_length": "20",
                    "case_insensitive_username_rules": "false",
                    "service_check_retry_period_sec": "15",
                    "ipa_user_group": "",
                    "kadmin_principal_name": "kadmin/${admin_server_host|stripPort()}",
                    "manage_identities": "true",
                    "ad_create_attributes_template": "\n{\n  \"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\n  \"cn\": \"$principal_name\",\n  #if( $is_service )\n  \"servicePrincipalName\": \"$principal_name\",\n  #end\n  \"userPrincipalName\": \"$normalized_principal\",\n  \"unicodePwd\": \"$password\",\n  \"accountExpires\": \"0\",\n  \"userAccountControl\": \"66048\"\n}",
                    "preconfigure_services": "DEFAULT",
                    "service_check_retry_count": "9",
                    "install_packages": "true",
                    "ldap_url": "ldaps://192.168.3.111:636",
                    "executable_search_paths": "/usr/bin, /usr/kerberos/bin, /usr/sbin, /usr/lib/mit/bin, /usr/lib/mit/sbin"
                }
            }
        },
        {
            "ssl-client": {
                "properties_attributes": {},
                "properties": {
                    "ssl.client.truststore.reload.interval": "10000",
                    "ssl.client.keystore.location": "",
                    "ssl.client.truststore.location": "",
                    "ssl.client.truststore.type": "jks",
                    "ssl.client.keystore.type": "jks"
                }
            }
        },
        {
            "ams-ssl-client": {
                "properties_attributes": {},
                "properties": {
                    "ssl.client.truststore.type": "jks",
                    "ssl.client.truststore.location": "/etc/security/clientKeys/all.jks"
                }
            }
        },
        {
            "ams-hbase-policy": {
                "properties_attributes": {},
                "properties": {
                    "security.masterregion.protocol.acl": "*",
                    "security.admin.protocol.acl": "*",
                    "security.client.protocol.acl": "*"
                }
            }
        },
        {
            "ranger-hdfs-security": {
                "properties_attributes": {},
                "properties": {
                    "xasecure.add-hadoop-authorization": "true",
                    "ranger.plugin.hdfs.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
                    "ranger.plugin.hdfs.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
                    "ranger.plugin.hdfs.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
                    "ranger.plugin.hdfs.policy.pollIntervalMs": "30000",
                    "ranger.plugin.hdfs.service.name": "{{repo_name}}",
                    "ranger.plugin.hdfs.policy.rest.url": "{{policymgr_mgr_url}}"
                }
            }
        },
        {
            "ams-grafana-ini": {
                "properties_attributes": {},
                "properties": {
                    "protocol": "http",
                    "cert_key": "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
                    "port": "3000",
                    "cert_file": "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
                    "ca_cert": "",
                    "content": "\n##################### Grafana Configuration Example #####################\n#\n# Everything has defaults so you only need to uncomment things you want to\n# change\n\n# possible values : production, development\n; app_mode = production\n\n#################################### Paths ####################################\n[paths]\n# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)\n#\n;data = /var/lib/grafana\ndata = {{ams_grafana_data_dir}}\n#\n# Directory where grafana can store logs\n#\n;logs = /var/log/grafana\nlogs = {{ams_grafana_log_dir}}\n\n\n#################################### Server ####################################\n[server]\n# Protocol (http or https)\n;protocol = http\nprotocol = {{ams_grafana_protocol}}\n# The ip address to bind to, empty will bind to all interfaces\n;http_addr =\n\n# The http port  to use\n;http_port = 3000\nhttp_port = {{ams_grafana_port}}\n\n# The public facing domain name used to access grafana from a browser\n;domain = localhost\n\n# Redirect to correct domain if host header does not match domain\n# Prevents DNS rebinding attacks\n;enforce_domain = false\n\n# The full public facing url\n;root_url = %(protocol)s://%(domain)s:%(http_port)s/\n\n# Log web requests\n;router_logging = false\n\n# the path relative working path\n;static_root_path = public\nstatic_root_path = /usr/lib/ambari-metrics-grafana/public\n\n# enable gzip\n;enable_gzip = false\n\n# https certs & key file\n;cert_file =\n;cert_key =\ncert_file = {{ams_grafana_cert_file}}\ncert_key = {{ams_grafana_cert_key}}\n\n#################################### Database ####################################\n[database]\n# Either \"mysql\", \"postgres\" or \"sqlite3\", it's your choice\n;type = sqlite3\n;host = 127.0.0.1:3306\n;name = grafana\n;user = root\n;password =\n\n# For \"postgres\" only, either \"disable\", \"require\" or \"verify-full\"\n;ssl_mode = disable\n\n# For \"sqlite3\" only, path relative to data_path setting\n;path = grafana.db\n\n#################################### Session ####################################\n[session]\n# Either \"memory\", \"file\", \"redis\", \"mysql\", \"postgres\", default is \"file\"\n;provider = file\n\n# Provider config options\n# memory: not have any config yet\n# file: session dir path, is relative to grafana data_path\n# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`\n# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`\n# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable\n;provider_config = sessions\n\n# Session cookie name\n;cookie_name = grafana_sess\n\n# If you use session in https only, default is false\n;cookie_secure = false\n\n# Session life time, default is 86400\n;session_life_time = 86400\n\n#################################### Analytics ####################################\n[analytics]\n# Server reporting, sends usage counters to stats.grafana.org every 24 hours.\n# No ip addresses are being tracked, only simple counters to track\n# running instances, dashboard and error counts. It is very helpful to us.\n# Change this option to false to disable reporting.\n;reporting_enabled = true\n\n# Google Analytics universal tracking code, only enabled if you specify an id here\n;google_analytics_ua_id =\n\n#################################### Security ####################################\n[security]\n# default admin user, created on startup\nadmin_user = {{ams_grafana_admin_user}}\n\n# default admin password, can be changed before first start of grafana,  or in profile settings\n;admin_password =\n\n# used for signing\n;secret_key = SW2YcwTIb9zpOOhoPsMm\n\n# Auto-login remember days\n;login_remember_days = 7\n;cookie_username = grafana_user\n;cookie_remember_name = grafana_remember\n\n# disable gravatar profile images\n;disable_gravatar = false\n\n# data source proxy whitelist (ip_or_domain:port seperated by spaces)\n;data_source_proxy_whitelist =\n\n#################################### Users ####################################\n[users]\n# disable user signup / registration\n;allow_sign_up = true\n\n# Allow non admin users to create organizations\n;allow_org_create = true\n\n# Set to true to automatically assign new users to the default organization (id 1)\n;auto_assign_org = true\n\n# Default role new users will be automatically assigned (if disabled above is set to true)\n;auto_assign_org_role = Viewer\n\n# Background text for the user field on the login page\n;login_hint = email or username\n\n#################################### Anonymous Auth ##########################\n[auth.anonymous]\n# enable anonymous access\nenabled = true\n\n# specify organization name that should be used for unauthenticated users\norg_name = Main Org.\n\n# specify role for unauthenticated users\n;org_role = Admin\n\n#################################### Github Auth ##########################\n[auth.github]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_id\n;client_secret = some_secret\n;scopes = user:email,read:org\n;auth_url = https://github.com/login/oauth/authorize\n;token_url = https://github.com/login/oauth/access_token\n;api_url = https://api.github.com/user\n;team_ids =\n;allowed_organizations =\n\n#################################### Google Auth ##########################\n[auth.google]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_client_id\n;client_secret = some_client_secret\n;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\n;auth_url = https://accounts.google.com/o/oauth2/auth\n;token_url = https://accounts.google.com/o/oauth2/token\n;api_url = https://www.googleapis.com/oauth2/v1/userinfo\n;allowed_domains =\n\n#################################### Auth Proxy ##########################\n[auth.proxy]\n;enabled = false\n;header_name = X-WEBAUTH-USER\n;header_property = username\n;auto_sign_up = true\n\n#################################### Basic Auth ##########################\n[auth.basic]\n;enabled = true\n\n#################################### Auth LDAP ##########################\n[auth.ldap]\n;enabled = false\n;config_file = /etc/grafana/ldap.toml\n\n#################################### SMTP / Emailing ##########################\n[smtp]\n;enabled = false\n;host = localhost:25\n;user =\n;password =\n;cert_file =\n;key_file =\n;skip_verify = false\n;from_address = admin@grafana.localhost\n\n[emails]\n;welcome_email_on_sign_up = false\n\n#################################### Logging ##########################\n[log]\n# Either \"console\", \"file\", default is \"console\"\n# Use comma to separate multiple modes, e.g. \"console, file\"\n;mode = console, file\n\n# Buffer length of channel, keep it as it is if you don't know what it is.\n;buffer_len = 10000\n\n# Either \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\", default is \"Trace\"\n;level = Info\n\n# For \"console\" mode only\n[log.console]\n;level =\n\n# For \"file\" mode only\n[log.file]\n;level =\n# This enables automated log rotate(switch of following options), default is true\n;log_rotate = true\n\n# Max line number of single file, default is 1000000\n;max_lines = 1000000\n\n# Max size shift of single file, default is 28 means 1 << 28, 256MB\n;max_lines_shift = 28\n\n# Segment log daily, default is true\n;daily_rotate = true\n\n# Expired days of log file(delete after max days), default is 7\n;max_days = 7\n\n#################################### AMPQ Event Publisher ##########################\n[event_publisher]\n;enabled = false\n;rabbitmq_url = amqp://localhost/\n;exchange = grafana_events\n\n;#################################### Dashboard JSON files ##########################\n[dashboards.json]\n;enabled = false\n;path = /var/lib/grafana/dashboards\npath = /usr/lib/ambari-metrics-grafana/public/dashboards"
                }
            }
        },
        {
            "hadoop-env": {
                "properties_attributes": {},
                "properties": {
                    "hadoop_heapsize": "1024",
                    "proxyuser_group": "users",
                    "hdfs_user_keytab": "/etc/security/keytabs/hdfs.headless.keytab",
                    "hadoop_root_logger": "INFO,RFA",
                    "dtnode_heapsize": "1024m",
                    "namenode_backup_dir": "/tmp/upgrades",
                    "hdfs_user": "hdfs",
                    "hadoop_pid_dir_prefix": "/var/run/hadoop",
                    "content": "\n      # Set Hadoop-specific environment variables here.\n\n      # The only required environment variable is JAVA_HOME.  All others are\n      # optional.  When running a distributed configuration it is best to\n      # set JAVA_HOME in this file, so that it is correctly defined on\n      # remote nodes.\n\n      # The java implementation to use.  Required.\n      export JAVA_HOME={{java_home}}\n      export HADOOP_HOME_WARN_SUPPRESS=1\n\n      # Hadoop home directory\n      export HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hadoop Configuration Directory\n\n      {# this is different for HDP1 #}\n      # Path to jsvc required by secure HDP 2.0 datanode\n      export JSVC_HOME={{jsvc_path}}\n\n\n      # The maximum amount of heap to use, in MB. Default is 1000.\n      export HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\n      export HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n      # Extra Java runtime options.  Empty by default.\n      export HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n      USER=\"$(whoami)\"\n\n      # Command specific options appended to HADOOP_OPTS when specified\n      HADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\n      HADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\n\n      {% if java_version < 8 %}\n      SHARED_HDFS_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\n      export HDFS_NAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HDFS_NAMENODE_OPTS}\"\n      export HDFS_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-datanode/bin/kill-data-node\\\" -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HDFS_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\n\n      export HDFS_SECONDARYNAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HDFS_SECONDARYNAMENODE_OPTS}\"\n\n      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)\n      export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n      {% else %}\n      SHARED_HDFS_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\n      export HDFS_NAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HDFS_NAMENODE_OPTS}\"\n      export HDFS_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-datanode/bin/kill-data-node\\\" -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HDFS_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\n\n      export HDFS_SECONDARYNAMENODE_OPTS=\"${SHARED_HDFS_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HDFS_SECONDARYNAMENODE_OPTS}\"\n\n      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)\n      export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n      {% endif %}\n\n      {% if security_enabled %}\n      export HDFS_NAMENODE_OPTS=\"$HDFS_NAMENODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_nn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      export HDFS_SECONDARYNAMENODE_OPTS=\"$HDFS_SECONDARYNAMENODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_nn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      export HDFS_DATANODE_OPTS=\"$HDFS_DATANODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_dn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      export HADOOP_JOURNALNODE_OPTS=\"$HADOOP_JOURNALNODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_jn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false\"\n      {% endif %}\n\n      HDFS_NFS3_OPTS=\"-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HDFS_NFS3_OPTS}\"\n      HADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n\n      # On secure datanodes, user to run the datanode as after dropping privileges\n      export HDFS_DATANODE_SECURE_USER=${HDFS_DATANODE_SECURE_USER:-{{hadoop_secure_dn_user}}}\n\n      # Extra ssh options.  Empty by default.\n      export HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n      # Where log files are stored.  $HADOOP_HOME/logs by default.\n      export HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n      # Where log files are stored in the secure data environment.\n      export HADOOP_SECURE_LOG_DIR=${HADOOP_SECURE_LOG_DIR:-{{hdfs_log_dir_prefix}}/$HDFS_DATANODE_SECURE_USER}\n\n      # File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n      # export HADOOP_WORKERS=${HADOOP_HOME}/conf/slaves\n\n      # host:path where hadoop code should be rsync'd from.  Unset by default.\n      # export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n      # Seconds to sleep between slave commands.  Unset by default.  This\n      # can be useful in large clusters, where, e.g., slave rsyncs can\n      # otherwise arrive faster than the master can service them.\n      # export HADOOP_WORKER_SLEEP=0.1\n\n      # The directory where pid files are stored. /tmp by default.\n      export HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\n      export HADOOP_SECURE_PID_DIR=${HADOOP_SECURE_PID_DIR:-{{hadoop_pid_dir_prefix}}/$HDFS_DATANODE_SECURE_USER}\n\n      YARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n      # A string representing this instance of hadoop. $USER by default.\n      export HADOOP_IDENT_STRING=$USER\n\n      # The scheduling priority for daemon processes.  See 'man nice'.\n\n      # export HADOOP_NICENESS=10\n\n      # Add database libraries\n      JAVA_JDBC_LIBS=\"\"\n      if [ -d \"/usr/share/java\" ]; then\n      for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n      do\n      JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n      done\n      fi\n\n      # Add libraries to the hadoop classpath - some may not need a colon as they already include it\n      export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}\n\n      # Setting path to hdfs command line\n      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n      # Mostly required for hadoop 2.0\n      export JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:{{hadoop_lib_home}}/native/Linux-{{architecture}}-64\n\n      {% if zk_principal_user is defined %}\n      HADOOP_OPTS=\"-Dzookeeper.sasl.client.username={{zk_principal_user}} $HADOOP_OPTS\"\n      {% endif %}\n\n      export HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n\n\n      # Fix temporary bug, when ulimit from conf files is not picked up, without full relogin.\n      # Makes sense to fix only when runing DN as root\n      if [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HDFS_DATANODE_SECURE_USER\" ]; then\n      {% if is_datanode_max_locked_memory_set %}\n      ulimit -l {{datanode_max_locked_memory}}\n      {% endif %}\n      ulimit -n {{hdfs_user_nofile_limit}}\n      fi\n      # Enable ACLs on zookeper znodes if required\n      {% if hadoop_zkfc_opts is defined %}\n      export HDFS_ZKFC_OPTS=\"{{hadoop_zkfc_opts}} $HDFS_ZKFC_OPTS\"\n      {% endif %}",
                    "hdfs_log_dir_prefix": "/var/log/hadoop",
                    "namenode_opt_newsize": "128m",
                    "namenode_heapsize": "1024m",
                    "hdfs_tmp_dir": "/tmp",
                    "namenode_opt_maxpermsize": "256m",
                    "nfsgateway_heapsize": "1024",
                    "hdfs_user_nofile_limit": "128000",
                    "keyserver_host": " ",
                    "keyserver_port": "",
                    "hdfs_user_nproc_limit": "65536",
                    "namenode_opt_maxnewsize": "128m",
                    "namenode_opt_permsize": "128m"
                }
            }
        },
        {
            "yarn-hbase-env": {
                "properties_attributes": {},
                "properties": {
                    "yarn_hbase_client_containers": "1",
                    "yarn_hbase_client_memory": "1536",
                    "yarn_hbase_master_cpu": "1",
                    "yarn_hbase_regionserver_containers": "1",
                    "yarn_hbase_heap_memory_factor": "0.8",
                    "content": "\n      # Set environment variables here.\n\n      # The java implementation to use. Java 1.6 required.\n      export JAVA_HOME={{java64_home}}\n\n      # HBase Configuration directory\n      export HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{yarn_hbase_conf_dir}}}\n\n      # Extra Java CLASSPATH elements. Optional.\n      export HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n      # The maximum amount of heap to use. Default is left to JVM default.\n      # export HBASE_HEAPSIZE=4G\n\n      # Extra Java runtime options.\n      # Below are what we set by default. May only work with SUN JVM.\n      # For more on why as well as other possible settings,\n      # see http://wiki.apache.org/hadoop/PerformanceTuning\n      export SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{yarn_hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n      # Uncomment below to enable java garbage collection logging.\n      # export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n      # Uncomment and adjust to enable JMX exporting\n      # See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n      # More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n      #\n      # export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n      # If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n      # export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n      # export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n      # File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\n      export HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n      # Extra ssh options. Empty by default.\n      # export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n      # Where log files are stored. $HBASE_HOME/logs by default.\n      export HBASE_LOG_DIR=${HBASE_LOG_DIR:-{{yarn_hbase_log_dir}}}\n\n      # A string representing this instance of hbase. $USER by default.\n      # export HBASE_IDENT_STRING=$USER\n\n      # The scheduling priority for daemon processes. See 'man nice'.\n      # export HBASE_NICENESS=10\n\n      # The directory where pid files are stored. /tmp by default.\n      export HBASE_PID_DIR=${HBASE_PID_DIR:-{{yarn_hbase_pid_dir}}}\n\n      # Seconds to sleep between slave commands. Unset by default. This\n      # can be useful in large clusters, where, e.g., slave rsyncs can\n      # otherwise arrive faster than the master can service them.\n      # export HBASE_SLAVE_SLEEP=0.1\n\n      # Tell HBase whether it should manage it's own instance of Zookeeper or not.\n      export HBASE_MANAGES_ZK=false\n\n      {% if java_version < 8 %}\n      JDK_DEPENDED_OPTS=\"-XX:PermSize=128m -XX:MaxPermSize=128m\"\n      {% endif %}\n\n      export HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile=$HBASE_LOG_DIR/hs_err_pid%p.log -Djava.io.tmpdir={{yarn_hbase_java_io_tmpdir}}\"\n      export HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{yarn_hbase_master_heapsize}} $JDK_DEPENDED_OPTS\"\n      export HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -XX:CMSInitiatingOccupancyFraction=70 -XX:ReservedCodeCacheSize=256m -Xms{{yarn_hbase_regionserver_heapsize}} -Xmx{{yarn_hbase_regionserver_heapsize}} $JDK_DEPENDED_OPTS\"\n\n      {% if security_enabled %}\n      export HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{yarn_hbase_master_jaas_file}}\"\n      export HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{yarn_hbase_regionserver_jaas_file}}\"\n      {% endif %}",
                    "yarn_hbase_pid_dir_prefix": "/var/run/hadoop-yarn-hbase",
                    "yarn_hbase_regionserver_cpu": "1",
                    "hbase_java_io_tmpdir": "/tmp",
                    "use_external_hbase": "false",
                    "yarn_hbase_log_level": "INFO",
                    "yarn_hbase_master_memory": "4096",
                    "yarn_hbase_master_containers": "1",
                    "yarn_hbase_system_service_queue_name": "default",
                    "yarn_hbase_system_service_launch_mode": "sync",
                    "is_hbase_system_service_launch": "false",
                    "yarn_hbase_client_cpu": "1",
                    "yarn_hbase_regionserver_memory": "4096"
                }
            }
        },
        {
            "yarn-hbase-site": {
                "properties_attributes": {},
                "properties": {
                    "hbase.coprocessor.master.classes": "org.apache.hadoop.hbase.security.access.AccessController",
                    "hfile.block.cache.size": "0.4",
                    "hbase.master.port": "17000",
                    "hbase.regionserver.keytab.file": "/etc/security/keytabs/yarn-ats.hbase-regionserver.service.keytab",
                    "hbase.local.dir": "${hbase.tmp.dir}/local",
                    "hbase.master.keytab.file": "/etc/security/keytabs/yarn-ats.hbase-master.service.keytab",
                    "hbase.client.retries.number": "7",
                    "hbase.hstore.compaction.max": "10",
                    "hbase.zookeeper.quorum": "{{zookeeper_quorum_hosts}}",
                    "hbase.regionserver.info.port": "17030",
                    "hbase.rpc.protection": "authentication",
                    "zookeeper.znode.parent": "/atsv2-hbase-secure",
                    "hbase.master.info.port": "17010",
                    "hbase.rootdir": "/atsv2/hbase/data",
                    "hbase.cluster.distributed": "true",
                    "hbase.hregion.majorcompaction": "604800000",
                    "hbase.regionserver.kerberos.principal": "yarn-ats-hbase/_HOST@TEST014.ORG",
                    "hbase.hregion.memstore.mslab.enabled": "true",
                    "hbase.security.authentication": "kerberos",
                    "hbase.bucketcache.percentage.in.combinedcache": "",
                    "hbase.security.authorization": "true",
                    "hbase.regionserver.executor.openregion.threads": "20",
                    "hbase.hstore.blockingStoreFiles": "10",
                    "hbase.zookeeper.useMulti": "true",
                    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
                    "zookeeper.session.timeout": "90000",
                    "hbase.master.info.bindAddress": "0.0.0.0",
                    "hbase.coprocessor.regionserver.classes": "",
                    "hbase.master.ui.readonly": "false",
                    "hbase.bucketcache.size": "",
                    "hbase.hregion.majorcompaction.jitter": "0.50",
                    "hbase.hregion.memstore.flush.size": "134217728",
                    "hbase.master.kerberos.principal": "yarn-ats-hbase/_HOST@TEST014.ORG",
                    "hbase.hregion.max.filesize": "10737418240",
                    "zookeeper.recovery.retry": "6",
                    "hbase.regionserver.global.memstore.size": "0.4",
                    "hbase.client.keyvalue.maxsize": "1048576",
                    "hbase.tmp.dir": "/tmp/hbase-${user.name}",
                    "hbase.client.scanner.caching": "100",
                    "hbase.hstore.compactionThreshold": "3",
                    "hbase.master.wait.on.regionservers.timeout": "30000",
                    "hbase.master.namespace.init.timeout": "2400000",
                    "hbase.rpc.timeout": "90000",
                    "hbase.superuser": "yarn",
                    "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
                    "hbase.regionserver.handler.count": "30",
                    "hbase.regionserver.port": "17020",
                    "hbase.zookeeper.property.clientPort": "{{zookeeper_clientPort}}",
                    "hbase.defaults.for.version.skip": "true",
                    "hbase.hregion.memstore.block.multiplier": "4",
                    "hbase.bucketcache.ioengine": ""
                }
            }
        },
        {
            "zookeeper-env": {
                "properties_attributes": {},
                "properties": {
                    "zk_pid_dir": "/var/run/zookeeper",
                    "zk_server_heapsize": "1024m",
                    "zk_log_dir": "/var/log/zookeeper",
                    "zk_user": "zookeeper",
                    "zookeeper_keytab_path": "/etc/security/keytabs/zk.service.keytab",
                    "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}} -Dzookeeper.sasl.client.username={{zk_principal_user}}\"\n{% endif %}"
                }
            }
        },
        {
            "yarn-log4j": {
                "properties_attributes": {},
                "properties": {
                    "yarn_rm_summary_log_max_backup_size": "256",
                    "yarn_rm_summary_log_number_of_backup_files": "20",
                    "content": "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize={{yarn_rm_summary_log_max_backup_size}}MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex={{yarn_rm_summary_log_number_of_backup_files}}\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n\n# Appender for viewing information for errors and warnings\nyarn.ewma.cleanupInterval=300\nyarn.ewma.messageAgeLimitSeconds=86400\nyarn.ewma.maxUniqueMessages=250\nlog4j.appender.EWMA=org.apache.hadoop.yarn.util.Log4jWarningErrorMetricsAppender\nlog4j.appender.EWMA.cleanupInterval=${yarn.ewma.cleanupInterval}\nlog4j.appender.EWMA.messageAgeLimitSeconds=${yarn.ewma.messageAgeLimitSeconds}\nlog4j.appender.EWMA.maxUniqueMessages=${yarn.ewma.maxUniqueMessages}\n\n# Audit logging for ResourceManager\nrm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=false\nlog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.log\nlog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd\n\n# Audit logging for NodeManager\nnm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=false\nlog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.log\nlog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
                }
            }
        },
        {
            "mapred-env": {
                "properties_attributes": {},
                "properties": {
                    "jobhistory_heapsize": "900",
                    "mapred_user_nofile_limit": "32768",
                    "mapred_user": "mapred",
                    "mapred_user_nproc_limit": "65536",
                    "mapred_pid_dir_prefix": "/var/run/hadoop-mapreduce",
                    "mapred_log_dir_prefix": "/var/log/hadoop-mapreduce",
                    "content": "\n      # export JAVA_HOME=/home/y/libexec/jdk1.8.0/\n\n      export HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\n      # We need to add the RFA appender for the mr daemons only;\n      # however, HADOOP_MAPRED_LOGGER is shared by the mapred client and the\n      # daemons. This will restrict the RFA appender to daemons only.\n      export HADOOP_LOGLEVEL=${HADOOP_LOGLEVEL:-INFO}\n      export HADOOP_ROOT_LOGGER=${HADOOP_ROOT_LOGGER:-INFO,console}\n      export HADOOP_DAEMON_ROOT_LOGGER=${HADOOP_DAEMON_ROOT_LOGGER:-${HADOOP_LOGLEVEL},RFA}\n\n      {% if security_enabled %}\n      export MAPRED_HISTORYSERVER_OPTS=\"-Djava.security.auth.login.config={{mapred_jaas_file}}  -Djavax.security.auth.useSubjectCredsOnly=false\"\n      {% endif %}\n\n      #export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n      #export HADOOP_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n      #export HADOOP_NICENESS= #The scheduling priority for daemons. Defaults to 0.\n      export HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n      export HADOOP_OPTS=\"-Djava.io.tmpdir={{hadoop_java_io_tmpdir}} $HADOOP_OPTS\"\n      export JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n      # History server logs\n      export HADOOP_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n      # History server pid\n      export HADOOP_PID_DIR={{mapred_pid_dir_prefix}}/$USER"
                }
            }
        },
        {
            "activity-zeppelin-interpreter": {
                "properties_attributes": {},
                "properties": {
                    "activity-zeppelin-interpreter-content": "{\n  \"interpreterSettings\": {\n    \"jdbc\": {\n      \"id\": \"jdbc\",\n      \"name\": \"jdbc\",\n      \"group\": \"jdbc\",\n      \"properties\": {\n        \"default.url\": {\n          \"name\": \"default.url\",\n          \"value\": \"jdbc:postgresql://localhost:5432/\",\n          \"type\": \"string\"\n        },\n        \"default.driver\": {\n          \"name\": \"default.driver\",\n          \"value\": \"org.postgresql.Driver\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.principal\": {\n          \"name\": \"zeppelin.jdbc.principal\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.completer.ttlInSeconds\": {\n          \"name\": \"default.completer.ttlInSeconds\",\n          \"value\": \"120\",\n          \"type\": \"number\"\n        },\n        \"default.password\": {\n          \"name\": \"default.password\",\n          \"value\": \"\",\n          \"type\": \"password\"\n        },\n        \"default.completer.schemaFilters\": {\n          \"name\": \"default.completer.schemaFilters\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"default.splitQueries\": {\n          \"name\": \"default.splitQueries\",\n          \"value\": false,\n          \"type\": \"checkbox\"\n        },\n        \"default.user\": {\n          \"name\": \"default.user\",\n          \"value\": \"gpadmin\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.max_connection\": {\n          \"name\": \"zeppelin.jdbc.concurrent.max_connection\",\n          \"value\": \"10\",\n          \"type\": \"number\"\n        },\n        \"common.max_count\": {\n          \"name\": \"common.max_count\",\n          \"value\": \"1000\",\n          \"type\": \"number\"\n        },\n        \"default.precode\": {\n          \"name\": \"default.precode\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"zeppelin.jdbc.auth.type\": {\n          \"name\": \"zeppelin.jdbc.auth.type\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.statementPrecode\": {\n          \"name\": \"default.statementPrecode\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.use\": {\n          \"name\": \"zeppelin.jdbc.concurrent.use\",\n          \"value\": true,\n          \"type\": \"checkbox\"\n        },\n        \"zeppelin.jdbc.keytab.location\": {\n          \"name\": \"zeppelin.jdbc.keytab.location\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"sql\",\n          \"class\": \"org.apache.zeppelin.jdbc.JDBCInterpreter\",\n          \"defaultInterpreter\": false,\n          \"editor\": {\n            \"language\": \"sql\",\n            \"editOnDblClick\": false,\n            \"completionSupport\": true\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"perNote\": \"shared\",\n        \"perUser\": \"shared\",\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    },\n    \"phoenix\": {\n      \"id\": \"phoenix\",\n      \"name\": \"phoenix\",\n      \"group\": \"jdbc\",\n      \"properties\": {\n        \"default.url\": {\n          \"name\": \"default.url\",\n          \"value\": \"{{activity_explorer_jdbc_url}}\",\n          \"type\": \"string\"\n        },\n        \"default.driver\": {\n          \"name\": \"default.driver\",\n          \"value\": \"org.apache.phoenix.jdbc.PhoenixDriver\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.principal\": {\n          \"name\": \"zeppelin.jdbc.principal\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.completer.ttlInSeconds\": {\n          \"name\": \"default.completer.ttlInSeconds\",\n          \"value\": \"120\",\n          \"type\": \"number\"\n        },\n        \"default.password\": {\n          \"name\": \"default.password\",\n          \"value\": \"\",\n          \"type\": \"password\"\n        },\n        \"default.completer.schemaFilters\": {\n          \"name\": \"default.completer.schemaFilters\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"default.splitQueries\": {\n          \"name\": \"default.splitQueries\",\n          \"value\": false,\n          \"type\": \"checkbox\"\n        },\n        \"default.user\": {\n          \"name\": \"default.user\",\n          \"value\": \"gpadmin\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.max_connection\": {\n          \"name\": \"zeppelin.jdbc.concurrent.max_connection\",\n          \"value\": \"10\",\n          \"type\": \"number\"\n        },\n        \"common.max_count\": {\n          \"name\": \"common.max_count\",\n          \"value\": \"1000\",\n          \"type\": \"number\"\n        },\n        \"default.precode\": {\n          \"name\": \"default.precode\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"zeppelin.jdbc.auth.type\": {\n          \"name\": \"zeppelin.jdbc.auth.type\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.statementPrecode\": {\n          \"name\": \"default.statementPrecode\",\n          \"value\": \"\"\n        },\n        \"zeppelin.jdbc.concurrent.use\": {\n          \"name\": \"zeppelin.jdbc.concurrent.use\",\n          \"value\": true,\n          \"type\": \"checkbox\"\n        },\n        \"zeppelin.jdbc.keytab.location\": {\n          \"name\": \"zeppelin.jdbc.keytab.location\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.phoenix.query.numberFormat\": {\n          \"name\": \"default.phoenix.query.numberFormat\",\n          \"value\": \"#.#\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"sql\",\n          \"class\": \"org.apache.zeppelin.jdbc.JDBCInterpreter\",\n          \"defaultInterpreter\": true,\n          \"editor\": {\n            \"language\": \"sql\",\n            \"editOnDblClick\": false,\n            \"completionSupport\": true\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"perNote\": \"shared\",\n        \"perUser\": \"shared\",\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    },\n    \"md\": {\n      \"id\": \"md\",\n      \"name\": \"md\",\n      \"group\": \"md\",\n      \"properties\": {\n        \"markdown.parser.type\": {\n          \"name\": \"markdown.parser.type\",\n          \"value\": \"pegdown\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"md\",\n          \"class\": \"org.apache.zeppelin.markdown.Markdown\",\n          \"defaultInterpreter\": false,\n          \"editor\": {\n            \"language\": \"markdown\",\n            \"editOnDblClick\": true,\n            \"completionSupport\": false\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    }\n  },\n  \"interpreterBindings\": {\n    \"2DGK3YSSY\": [\n      \"phoenix\"\n    ],\n    \"2BQH91X36\": [\n      \"phoenix\"\n    ],\n    \"2BNVQJUBK\": [\n      \"phoenix\"\n    ],\n    \"2BPD7951H\": [\n      \"phoenix\"\n    ],\n    \"2DGNFSF2D\": [\n      \"phoenix\"\n    ],\n    \"2DGCYZ7F3\": [\n      \"phoenix\"\n    ],\n    \"2BTCVPTMH\": [\n      \"phoenix\"\n    ]\n  },\n  \"interpreterRepositories\": [\n    {\n      \"id\": \"central\",\n      \"type\": \"default\",\n      \"url\": \"http://repo1.maven.org/maven2/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"HDPReleases\",\n      \"type\": \"default\",\n      \"url\": \"http://repo.hortonworks.com/content/groups/public/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"HDPDev\",\n      \"type\": \"default\",\n      \"url\": \"http://nexus-private.hortonworks.com/nexus/content/groups/public/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"local\",\n      \"type\": \"default\",\n      \"url\": \"file:///var/lib/smartsense/activity-explorer/.m2/repository\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    }\n  ]\n}"
                }
            }
        },
        {
            "cluster-env": {
                "properties_attributes": {},
                "properties": {
                    "hide_yarn_memory_widget": "false",
                    "enable_external_ranger": "false",
                    "recovery_max_count": "6",
                    "manage_dirs_on_root": "true",
                    "managed_hdfs_resource_property_names": "",
                    "recovery_retry_interval": "5",
                    "sysprep_skip_lzo_package_operations": "false",
                    "sysprep_skip_hive_schema_create": "false",
                    "ambari_principal_name": "ambari-server-hadoopdev@TEST014.ORG",
                    "stack_features": "{\n  \"HDP\": {\n    \"stack_features\": [\n      {\n        \"name\": \"snappy\",\n        \"description\": \"Snappy compressor/decompressor support\",\n        \"min_version\": \"2.0.0.0\",\n        \"max_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"lzo\",\n        \"description\": \"LZO libraries support\",\n        \"min_version\": \"2.2.1.0\"\n      },\n      {\n        \"name\": \"express_upgrade\",\n        \"description\": \"Express upgrade support\",\n        \"min_version\": \"2.1.0.0\"\n      },\n      {\n        \"name\": \"rolling_upgrade\",\n        \"description\": \"Rolling upgrade support\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"kafka_acl_migration_support\",\n        \"description\": \"ACL migration support\",\n        \"min_version\": \"2.3.4.0\"\n      },\n      {\n        \"name\": \"secure_zookeeper\",\n        \"description\": \"Protect ZNodes with SASL acl in secure clusters\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"config_versioning\",\n        \"description\": \"Configurable versions support\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"datanode_non_root\",\n        \"description\": \"DataNode running as non-root support (AMBARI-7615)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"remove_ranger_hdfs_plugin_env\",\n        \"description\": \"HDFS removes Ranger env files (AMBARI-14299)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"ranger\",\n        \"description\": \"Ranger Service support\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_tagsync_component\",\n        \"description\": \"Ranger Tagsync component support (AMBARI-14383)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"phoenix\",\n        \"description\": \"Phoenix Service support\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"nfs\",\n        \"description\": \"NFS support\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"tez_for_spark\",\n        \"description\": \"Tez dependency for Spark\",\n        \"min_version\": \"2.2.0.0\",\n        \"max_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"timeline_state_store\",\n        \"description\": \"Yarn application timeline-service supports state store property (AMBARI-11442)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"copy_tarball_to_hdfs\",\n        \"description\": \"Copy tarball to HDFS support (AMBARI-12113)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"spark_16plus\",\n        \"description\": \"Spark 1.6+\",\n        \"min_version\": \"2.4.0.0\"\n      },\n      {\n        \"name\": \"spark_thriftserver\",\n        \"description\": \"Spark Thrift Server\",\n        \"min_version\": \"2.3.2.0\"\n      },\n      {\n        \"name\": \"storm_ams\",\n        \"description\": \"Storm AMS integration (AMBARI-10710)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"kafka_listeners\",\n        \"description\": \"Kafka listeners (AMBARI-10984)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_kerberos\",\n        \"description\": \"Kafka Kerberos support (AMBARI-10984)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"pig_on_tez\",\n        \"description\": \"Pig on Tez support (AMBARI-7863)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_non_root\",\n        \"description\": \"Ranger Usersync as non-root user (AMBARI-10416)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_audit_db_support\",\n        \"description\": \"Ranger Audit to DB support\",\n        \"min_version\": \"2.2.0.0\",\n        \"max_version\": \"2.4.99.99\"\n      },\n      {\n        \"name\": \"accumulo_kerberos_user_auth\",\n        \"description\": \"Accumulo Kerberos User Auth (AMBARI-10163)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"knox_versioned_data_dir\",\n        \"description\": \"Use versioned data dir for Knox (AMBARI-13164)\",\n        \"min_version\": \"2.3.2.0\"\n      },\n      {\n        \"name\": \"knox_sso_topology\",\n        \"description\": \"Knox SSO Topology support (AMBARI-13975)\",\n        \"min_version\": \"2.3.8.0\"\n      },\n      {\n        \"name\": \"atlas_rolling_upgrade\",\n        \"description\": \"Rolling upgrade support for Atlas\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"oozie_admin_user\",\n        \"description\": \"Oozie install user as an Oozie admin user (AMBARI-7976)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_create_hive_tez_configs\",\n        \"description\": \"Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_setup_shared_lib\",\n        \"description\": \"Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"oozie_host_kerberos\",\n        \"description\": \"Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)\",\n        \"min_version\": \"2.0.0.0\"\n      },\n      {\n        \"name\": \"falcon_extensions\",\n        \"description\": \"Falcon Extension\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_upgrade_schema\",\n        \"description\": \"Hive metastore upgrade schema support (AMBARI-11176)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server_interactive\",\n        \"description\": \"Hive server interactive support (AMBARI-15573)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hive_purge_table\",\n        \"description\": \"Hive purge table support (AMBARI-12260)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"hive_server2_kerberized_env\",\n        \"description\": \"Hive server2 working on kerberized environment (AMBARI-13749)\",\n        \"min_version\": \"2.2.3.0\",\n        \"max_version\": \"2.2.5.0\"\n      },\n      {\n        \"name\": \"hive_env_heapsize\",\n        \"description\": \"Hive heapsize property defined in hive-env (AMBARI-12801)\",\n        \"min_version\": \"2.2.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_hsm_support\",\n        \"description\": \"Ranger KMS HSM support (AMBARI-15752)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_log4j_support\",\n        \"description\": \"Ranger supporting log-4j properties (AMBARI-15681)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_kerberos_support\",\n        \"description\": \"Ranger Kerberos support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hive_metastore_site_support\",\n        \"description\": \"Hive Metastore site support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_usersync_password_jceks\",\n        \"description\": \"Saving Ranger Usersync credentials in jceks\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_install_infra_client\",\n        \"description\": \"Ambari Infra Service support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"falcon_atlas_support_2_3\",\n        \"description\": \"Falcon Atlas integration support for 2.3 stack\",\n        \"min_version\": \"2.3.99.0\",\n        \"max_version\": \"2.4.0.0\"\n      },\n      {\n        \"name\": \"falcon_atlas_support\",\n        \"description\": \"Falcon Atlas integration\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"hbase_home_directory\",\n        \"description\": \"Hbase home directory in HDFS needed for HBASE backup\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"spark_livy\",\n        \"description\": \"Livy as slave component of spark\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"spark_livy2\",\n        \"description\": \"Livy2 as slave component of Spark2\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_ranger_plugin_support\",\n        \"description\": \"Atlas Ranger plugin support\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"atlas_conf_dir_in_path\",\n        \"description\": \"Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon\",\n        \"min_version\": \"2.3.0.0\",\n        \"max_version\": \"2.4.99.99\"\n      },\n      {\n        \"name\": \"atlas_upgrade_support\",\n        \"description\": \"Atlas supports express and rolling upgrades\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"atlas_hook_support\",\n        \"description\": \"Atlas support for hooks in Hive, Storm, Falcon, and Sqoop\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_pid_support\",\n        \"description\": \"Ranger Service support pid generation AMBARI-16756\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_pid_support\",\n        \"description\": \"Ranger KMS Service support pid generation\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_admin_password_change\",\n        \"description\": \"Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_setup_db_on_start\",\n        \"description\": \"Allows setup of ranger db and java patches to be called multiple times on each START\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"storm_metrics_apache_classes\",\n        \"description\": \"Metrics sink for Storm that uses Apache class names\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"spark_java_opts_support\",\n        \"description\": \"Allow Spark to generate java-opts file\",\n        \"min_version\": \"2.2.0.0\",\n        \"max_version\": \"2.4.0.0\"\n      },\n      {\n        \"name\": \"atlas_hbase_setup\",\n        \"description\": \"Use script to create Atlas tables in Hbase and set permissions for Atlas user.\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"ranger_hive_plugin_jdbc_url\",\n        \"description\": \"Handle Ranger hive repo config jdbc url change for stack 2.5 (AMBARI-18386)\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"zkfc_version_advertised\",\n        \"description\": \"ZKFC advertise version\",\n        \"min_version\": \"2.5.0.0\"\n      },\n      {\n        \"name\": \"phoenix_core_hdfs_site_required\",\n        \"description\": \"HDFS and CORE site required for Phoenix\",\n        \"max_version\": \"2.5.9.9\"\n      },\n      {\n        \"name\": \"ranger_tagsync_ssl_xml_support\",\n        \"description\": \"Ranger Tagsync ssl xml support.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"ranger_xml_configuration\",\n        \"description\": \"Ranger code base support xml configurations\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"kafka_ranger_plugin_support\",\n        \"description\": \"Ambari stack changes for Ranger Kafka Plugin (AMBARI-11299)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"yarn_ranger_plugin_support\",\n        \"description\": \"Implement Stack changes for Ranger Yarn Plugin integration (AMBARI-10866)\",\n        \"min_version\": \"2.3.0.0\"\n      },\n      {\n        \"name\": \"ranger_solr_config_support\",\n        \"description\": \"Showing Ranger solrconfig.xml on UI\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"hive_interactive_atlas_hook_required\",\n        \"description\": \"Registering Atlas Hook for Hive Interactive.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_install_hook_package_support\",\n        \"description\": \"Stop installing packages from 2.6\",\n        \"max_version\": \"2.5.9.9\"\n      },\n      {\n        \"name\": \"atlas_hdfs_site_on_namenode_ha\",\n        \"description\": \"Need to create hdfs-site under atlas-conf dir when Namenode-HA is enabled.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"core_site_for_ranger_plugins\",\n        \"description\": \"Adding core-site.xml in when Ranger plugin is enabled for Storm, Kafka, and Knox.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"secure_ranger_ssl_password\",\n        \"description\": \"Securing Ranger Admin and Usersync SSL and Trustore related passwords in jceks\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"ranger_kms_ssl\",\n        \"description\": \"Ranger KMS SSL properties in ambari stack\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_hdfs_site_on_namenode_ha\",\n        \"description\": \"Need to create hdfs-site under atlas-conf dir when Namenode-HA is enabled.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"atlas_core_site_support\",\n        \"description\": \"Need to create core-site under Atlas conf directory.\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"toolkit_config_update\",\n        \"description\": \"Support separate input and output for toolkit configuration\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"nifi_encrypt_config\",\n        \"description\": \"Encrypt sensitive properties written to nifi property file\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"tls_toolkit_san\",\n        \"description\": \"Support subject alternative name flag\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"admin_toolkit_support\",\n        \"description\": \"Supports the nifi admin toolkit\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"nifi_jaas_conf_create\",\n        \"description\": \"Create NIFI jaas configuration when kerberos is enabled\",\n        \"min_version\": \"2.6.0.0\"\n      },\n      {\n        \"name\": \"registry_remove_rootpath\",\n        \"description\": \"Registry remove root path setting\",\n        \"min_version\": \"2.6.3.0\"\n      },\n      {\n        \"name\": \"nifi_encrypted_authorizers_config\",\n        \"description\": \"Support encrypted authorizers.xml configuration for version 3.1 onwards\",\n        \"min_version\": \"2.6.5.0\"\n      },\n      {\n        \"name\": \"multiple_env_sh_files_support\",\n        \"description\": \"This feature is supported by RANGER and RANGER_KMS service to remove multiple env sh files during upgrade to stack 3.0\",\n        \"max_version\": \"2.6.99.99\"\n      },\n      {\n        \"name\": \"registry_allowed_resources_support\",\n        \"description\": \"Registry allowed resources\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_rewriteuri_filter_support\",\n        \"description\": \"Registry RewriteUri servlet filter\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_support_schema_migrate\",\n        \"description\": \"Support schema migrate in registry for version 3.1 onwards\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"sam_support_schema_migrate\",\n        \"description\": \"Support schema migrate in SAM for version 3.1 onwards\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"sam_storage_core_in_registry\",\n        \"description\": \"Storage core module moved to registry\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"sam_db_file_storage\",\n        \"description\": \"DB based file storage in SAM\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"kafka_extended_sasl_support\",\n        \"description\": \"Support SASL PLAIN and GSSAPI\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"registry_support_db_user_creation\",\n        \"description\": \"Supports registry's database and user creation on the fly\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"streamline_support_db_user_creation\",\n        \"description\": \"Supports Streamline's database and user creation on the fly\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"nifi_auto_client_registration\",\n        \"description\": \"Supports NiFi's client registration in runtime\",\n        \"min_version\": \"3.0.0.0\"\n      },\n      {\n        \"name\": \"ranger_all_admin_change_default_password\",\n        \"description\": \"Supports Ranger All admin's password change in one go instead of multiple calls\",\n        \"min_version\": \"3.1.0.0\"\n      },\n      {\n        \"name\": \"kafka_env_include_ranger_script\",\n        \"description\": \"Need to include Ranger Kafka plugin script if stack version is lower than 3.1.0.0\",\n        \"max_version\": \"3.1.0.99\"\n      },\n      {\n        \"name\": \"ranger_support_security_zone_feature\",\n        \"description\": \"Need to add zoneName field in Ranger Audit Solr Collection\",\n        \"min_version\": \"3.1.1.0\"\n      }\n    ]\n  }\n}",
                    "namenode_rolling_restart_timeout": "4200",
                    "commands_to_retry": "INSTALL,START",
                    "stack_tools": "{\n  \"HDP\": {\n    \"stack_selector\": [\n      \"hdp-select\",\n      \"/usr/bin/hdp-select\",\n      \"hdp-select\"\n    ],\n    \"conf_selector\": [\n      \"conf-select\",\n      \"/usr/bin/conf-select\",\n      \"conf-select\"\n    ]\n  }\n}",
                    "repo_ubuntu_template": "{{package_type}} {{base_url}} {{components}}",
                    "stack_root": "{\"HDP\":\"/usr/hdp\"}",
                    "fetch_nonlocal_groups": "true",
                    "one_dir_per_partition": "false",
                    "kerberos_domain": "EXAMPLE.COM",
                    "stack_packages": "{\n  \"HDP\": {\n    \"stack-select\": {\n      \"ACCUMULO\": {\n        \"ACCUMULO_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-client\",\n          \"INSTALL\": [\n            \"accumulo-client\"\n          ],\n          \"PATCH\": [\n            \"accumulo-client\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_GC\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-gc\",\n          \"INSTALL\": [\n            \"accumulo-gc\"\n          ],\n          \"PATCH\": [\n            \"accumulo-gc\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-gc\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-master\",\n          \"INSTALL\": [\n            \"accumulo-master\"\n          ],\n          \"PATCH\": [\n            \"accumulo-master\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-master\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_MONITOR\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-monitor\",\n          \"INSTALL\": [\n            \"accumulo-monitor\"\n          ],\n          \"PATCH\": [\n            \"accumulo-monitor\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-monitor\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_TRACER\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-tracer\",\n          \"INSTALL\": [\n            \"accumulo-tracer\"\n          ],\n          \"PATCH\": [\n            \"accumulo-tracer\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-tracer\",\n            \"accumulo-client\"\n          ]\n        },\n        \"ACCUMULO_TSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"accumulo-tablet\",\n          \"INSTALL\": [\n            \"accumulo-tablet\"\n          ],\n          \"PATCH\": [\n            \"accumulo-tablet\"\n          ],\n          \"STANDARD\": [\n            \"accumulo-tablet\",\n            \"accumulo-client\"\n          ]\n        }\n      },\n      \"ATLAS\": {\n        \"ATLAS_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"atlas-client\",\n          \"INSTALL\": [\n            \"atlas-client\"\n          ],\n          \"PATCH\": [\n            \"atlas-client\"\n          ],\n          \"STANDARD\": [\n            \"atlas-client\"\n          ]\n        },\n        \"ATLAS_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"atlas-server\",\n          \"INSTALL\": [\n            \"atlas-server\"\n          ],\n          \"PATCH\": [\n            \"atlas-server\"\n          ],\n          \"STANDARD\": [\n            \"atlas-server\"\n          ]\n        }\n      },\n      \"DRUID\": {\n        \"DRUID_COORDINATOR\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-coordinator\",\n          \"INSTALL\": [\n            \"druid-coordinator\"\n          ],\n          \"PATCH\": [\n            \"druid-coordinator\"\n          ],\n          \"STANDARD\": [\n            \"druid-coordinator\"\n          ]\n        },\n        \"DRUID_OVERLORD\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-overlord\",\n          \"INSTALL\": [\n            \"druid-overlord\"\n          ],\n          \"PATCH\": [\n            \"druid-overlord\"\n          ],\n          \"STANDARD\": [\n            \"druid-overlord\"\n          ]\n        },\n        \"DRUID_HISTORICAL\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-historical\",\n          \"INSTALL\": [\n            \"druid-historical\"\n          ],\n          \"PATCH\": [\n            \"druid-historical\"\n          ],\n          \"STANDARD\": [\n            \"druid-historical\"\n          ]\n        },\n        \"DRUID_BROKER\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-broker\",\n          \"INSTALL\": [\n            \"druid-broker\"\n          ],\n          \"PATCH\": [\n            \"druid-broker\"\n          ],\n          \"STANDARD\": [\n            \"druid-broker\"\n          ]\n        },\n        \"DRUID_MIDDLEMANAGER\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-middlemanager\",\n          \"INSTALL\": [\n            \"druid-middlemanager\"\n          ],\n          \"PATCH\": [\n            \"druid-middlemanager\"\n          ],\n          \"STANDARD\": [\n            \"druid-middlemanager\"\n          ]\n        },\n        \"DRUID_ROUTER\": {\n          \"STACK-SELECT-PACKAGE\": \"druid-router\",\n          \"INSTALL\": [\n            \"druid-router\"\n          ],\n          \"PATCH\": [\n            \"druid-router\"\n          ],\n          \"STANDARD\": [\n            \"druid-router\"\n          ]\n        }\n      },\n      \"HBASE\": {\n        \"HBASE_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hbase-client\",\n          \"INSTALL\": [\n            \"hbase-client\"\n          ],\n          \"PATCH\": [\n            \"hbase-client\"\n          ],\n          \"STANDARD\": [\n            \"hbase-client\",\n            \"phoenix-client\",\n            \"hadoop-client\"\n          ]\n        },\n        \"HBASE_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"hbase-master\",\n          \"INSTALL\": [\n            \"hbase-master\"\n          ],\n          \"PATCH\": [\n            \"hbase-master\"\n          ],\n          \"STANDARD\": [\n            \"hbase-master\"\n          ]\n        },\n        \"HBASE_REGIONSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hbase-regionserver\",\n          \"INSTALL\": [\n            \"hbase-regionserver\"\n          ],\n          \"PATCH\": [\n            \"hbase-regionserver\"\n          ],\n          \"STANDARD\": [\n            \"hbase-regionserver\"\n          ]\n        },\n        \"PHOENIX_QUERY_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"phoenix-server\",\n          \"INSTALL\": [\n            \"phoenix-server\"\n          ],\n          \"PATCH\": [\n            \"phoenix-server\"\n          ],\n          \"STANDARD\": [\n            \"phoenix-server\"\n          ]\n        }\n      },\n      \"HDFS\": {\n        \"DATANODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-datanode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-datanode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-datanode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-datanode\"\n          ]\n        },\n        \"HDFS_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-client\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-client\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        },\n        \"NAMENODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-namenode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-namenode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-namenode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-namenode\"\n          ]\n        },\n        \"NFS_GATEWAY\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-nfs3\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-nfs3\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-nfs3\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-nfs3\"\n          ]\n        },\n        \"JOURNALNODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-journalnode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-journalnode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-journalnode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-journalnode\"\n          ]\n        },\n        \"SECONDARY_NAMENODE\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-secondarynamenode\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-secondarynamenode\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-secondarynamenode\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-secondarynamenode\"\n          ]\n        },\n        \"ZKFC\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-hdfs-zkfc\",\n          \"INSTALL\": [\n            \"hadoop-hdfs-zkfc\"\n          ],\n          \"PATCH\": [\n            \"hadoop-hdfs-zkfc\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-hdfs-zkfc\"\n          ]\n        }\n      },\n      \"HIVE\": {\n        \"HIVE_METASTORE\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-metastore\",\n          \"INSTALL\": [\n            \"hive-metastore\"\n          ],\n          \"PATCH\": [\n            \"hive-metastore\"\n          ],\n          \"STANDARD\": [\n            \"hive-metastore\"\n          ]\n        },\n        \"HIVE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-server2\",\n          \"INSTALL\": [\n            \"hive-server2\"\n          ],\n          \"PATCH\": [\n            \"hive-server2\"\n          ],\n          \"STANDARD\": [\n            \"hive-server2\"\n          ]\n        },\n        \"HIVE_SERVER_INTERACTIVE\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-server2-hive\",\n          \"INSTALL\": [\n            \"hive-server2-hive\"\n          ],\n          \"PATCH\": [\n            \"hive-server2-hive\"\n          ],\n          \"STANDARD\": [\n            \"hive-server2-hive\"\n          ]\n        },\n        \"HIVE_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hive-client\",\n          \"INSTALL\": [\n            \"hive-client\"\n          ],\n          \"PATCH\": [\n            \"hive-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"KAFKA\": {\n        \"KAFKA_BROKER\": {\n          \"STACK-SELECT-PACKAGE\": \"kafka-broker\",\n          \"INSTALL\": [\n            \"kafka-broker\"\n          ],\n          \"PATCH\": [\n            \"kafka-broker\"\n          ],\n          \"STANDARD\": [\n            \"kafka-broker\"\n          ]\n        }\n      },\n      \"KNOX\": {\n        \"KNOX_GATEWAY\": {\n          \"STACK-SELECT-PACKAGE\": \"knox-server\",\n          \"INSTALL\": [\n            \"knox-server\"\n          ],\n          \"PATCH\": [\n            \"knox-server\"\n          ],\n          \"STANDARD\": [\n            \"knox-server\"\n          ]\n        }\n      },\n      \"MAPREDUCE2\": {\n        \"HISTORYSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-mapreduce-historyserver\",\n          \"INSTALL\": [\n            \"hadoop-mapreduce-historyserver\"\n          ],\n          \"PATCH\": [\n            \"hadoop-mapreduce-historyserver\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-mapreduce-historyserver\"\n          ]\n        },\n        \"MAPREDUCE2_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-mapreduce-client\",\n          \"INSTALL\": [\n            \"hadoop-mapreduce-client\"\n          ],\n          \"PATCH\": [\n            \"hadoop-mapreduce-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"OOZIE\": {\n        \"OOZIE_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"oozie-client\",\n          \"INSTALL\": [\n            \"oozie-client\"\n          ],\n          \"PATCH\": [\n            \"oozie-client\"\n          ],\n          \"STANDARD\": [\n            \"oozie-client\"\n          ]\n        },\n        \"OOZIE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"oozie-server\",\n          \"INSTALL\": [\n            \"oozie-client\",\n            \"oozie-server\"\n          ],\n          \"PATCH\": [\n            \"oozie-server\",\n            \"oozie-client\"\n          ],\n          \"STANDARD\": [\n            \"oozie-client\",\n            \"oozie-server\"\n          ]\n        }\n      },\n      \"PIG\": {\n        \"PIG\": {\n          \"STACK-SELECT-PACKAGE\": \"pig-client\",\n          \"INSTALL\": [\n            \"pig-client\"\n          ],\n          \"PATCH\": [\n            \"pig-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"RANGER\": {\n        \"RANGER_ADMIN\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-admin\",\n          \"INSTALL\": [\n            \"ranger-admin\"\n          ],\n          \"PATCH\": [\n            \"ranger-admin\"\n          ],\n          \"STANDARD\": [\n            \"ranger-admin\"\n          ]\n        },\n        \"RANGER_TAGSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-tagsync\",\n          \"INSTALL\": [\n            \"ranger-tagsync\"\n          ],\n          \"PATCH\": [\n            \"ranger-tagsync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-tagsync\"\n          ]\n        },\n        \"RANGER_USERSYNC\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-usersync\",\n          \"INSTALL\": [\n            \"ranger-usersync\"\n          ],\n          \"PATCH\": [\n            \"ranger-usersync\"\n          ],\n          \"STANDARD\": [\n            \"ranger-usersync\"\n          ]\n        }\n      },\n      \"RANGER_KMS\": {\n        \"RANGER_KMS_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"ranger-kms\",\n          \"INSTALL\": [\n            \"ranger-kms\"\n          ],\n          \"PATCH\": [\n            \"ranger-kms\"\n          ],\n          \"STANDARD\": [\n            \"ranger-kms\"\n          ]\n        }\n      },\n      \"SPARK2\": {\n        \"LIVY2_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"livy2-client\",\n          \"INSTALL\": [\n            \"livy2-client\"\n          ],\n          \"PATCH\": [\n            \"livy2-client\"\n          ],\n          \"STANDARD\": [\n            \"livy2-client\"\n          ]\n        },\n        \"LIVY2_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"livy2-server\",\n          \"INSTALL\": [\n            \"livy2-server\"\n          ],\n          \"PATCH\": [\n            \"livy2-server\"\n          ],\n          \"STANDARD\": [\n            \"livy2-server\"\n          ]\n        },\n        \"SPARK2_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"spark2-client\",\n          \"INSTALL\": [\n            \"spark2-client\",\n            \"livy2-client\"\n          ],\n          \"PATCH\": [\n            \"spark2-client\",\n            \"livy2-client\",\n            \"hive_warehouse_connector\"\n          ],\n          \"STANDARD\": [\n            \"spark2-client\",\n            \"livy2-client\",\n            \"hive_warehouse_connector\"\n          ]\n        },\n        \"SPARK2_JOBHISTORYSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"spark2-historyserver\",\n          \"INSTALL\": [\n            \"spark2-historyserver\"\n          ],\n          \"PATCH\": [\n            \"spark2-historyserver\"\n          ],\n          \"STANDARD\": [\n            \"spark2-historyserver\"\n          ]\n        },\n        \"SPARK2_THRIFTSERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"spark2-thriftserver\",\n          \"INSTALL\": [\n            \"spark2-thriftserver\"\n          ],\n          \"PATCH\": [\n            \"spark2-thriftserver\"\n          ],\n          \"STANDARD\": [\n            \"spark2-thriftserver\"\n          ]\n        }\n      },\n      \"SQOOP\": {\n        \"SQOOP\": {\n          \"STACK-SELECT-PACKAGE\": \"sqoop-client\",\n          \"INSTALL\": [\n            \"sqoop-client\"\n          ],\n          \"PATCH\": [\n            \"sqoop-client\"\n          ],\n          \"STANDARD\": [\n            \"sqoop-client\"\n          ]\n        }\n      },\n      \"STORM\": {\n        \"NIMBUS\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-nimbus\",\n          \"INSTALL\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"PATCH\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-nimbus\"\n          ]\n        },\n        \"SUPERVISOR\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-supervisor\",\n          \"INSTALL\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ],\n          \"PATCH\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\",\n            \"storm-supervisor\"\n          ]\n        },\n        \"DRPC_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        },\n        \"STORM_UI_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"storm-client\",\n          \"INSTALL\": [\n            \"storm-client\"\n          ],\n          \"PATCH\": [\n            \"storm-client\"\n          ],\n          \"STANDARD\": [\n            \"storm-client\"\n          ]\n        }\n      },\n      \"SUPERSET\": {\n        \"SUPERSET\": {\n          \"STACK-SELECT-PACKAGE\": \"superset\",\n          \"INSTALL\": [\n            \"superset\"\n          ],\n          \"PATCH\": [\n            \"superset\"\n          ],\n          \"STANDARD\": [\n            \"superset\"\n          ]\n        }\n      },\n      \"TEZ\": {\n        \"TEZ_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"tez-client\",\n          \"INSTALL\": [\n            \"tez-client\"\n          ],\n          \"PATCH\": [\n            \"tez-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        }\n      },\n      \"YARN\": {\n        \"APP_TIMELINE_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-timelineserver\",\n          \"INSTALL\": [\n            \"hadoop-yarn-timelineserver\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-timelineserver\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-timelineserver\"\n          ]\n        },\n        \"TIMELINE_READER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-timelinereader\",\n          \"INSTALL\": [\n            \"hadoop-yarn-timelinereader\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-timelinereader\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-timelinereader\"\n          ]\n        },\n        \"NODEMANAGER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-nodemanager\",\n          \"INSTALL\": [\n            \"hadoop-yarn-nodemanager\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-nodemanager\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-nodemanager\"\n          ]\n        },\n        \"RESOURCEMANAGER\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-resourcemanager\",\n          \"INSTALL\": [\n            \"hadoop-yarn-resourcemanager\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-resourcemanager\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-resourcemanager\"\n          ]\n        },\n        \"YARN_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-client\",\n          \"INSTALL\": [\n            \"hadoop-yarn-client\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-client\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-client\"\n          ]\n        },\n        \"YARN_REGISTRY_DNS\": {\n          \"STACK-SELECT-PACKAGE\": \"hadoop-yarn-registrydns\",\n          \"INSTALL\": [\n            \"hadoop-yarn-registrydns\"\n          ],\n          \"PATCH\": [\n            \"hadoop-yarn-registrydns\"\n          ],\n          \"STANDARD\": [\n            \"hadoop-yarn-registrydns\"\n          ]\n        }\n      },\n      \"ZEPPELIN\": {\n        \"ZEPPELIN_MASTER\": {\n          \"STACK-SELECT-PACKAGE\": \"zeppelin-server\",\n          \"INSTALL\": [\n            \"zeppelin-server\"\n          ],\n          \"PATCH\": [\n            \"zeppelin-server\"\n          ],\n          \"STANDARD\": [\n            \"zeppelin-server\"\n          ]\n        }\n      },\n      \"ZOOKEEPER\": {\n        \"ZOOKEEPER_CLIENT\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-client\",\n          \"INSTALL\": [\n            \"zookeeper-client\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-client\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-client\"\n          ]\n        },\n        \"ZOOKEEPER_SERVER\": {\n          \"STACK-SELECT-PACKAGE\": \"zookeeper-server\",\n          \"INSTALL\": [\n            \"zookeeper-server\"\n          ],\n          \"PATCH\": [\n            \"zookeeper-server\"\n          ],\n          \"STANDARD\": [\n            \"zookeeper-server\"\n          ]\n        }\n      }\n    },\n    \"conf-select\": {\n      \"accumulo\": [\n        {\n          \"conf_dir\": \"/etc/accumulo/conf\",\n          \"current_dir\": \"{0}/current/accumulo-client/conf\",\n          \"component\": \"accumulo-client\"\n        }\n      ],\n      \"atlas\": [\n        {\n          \"conf_dir\": \"/etc/atlas/conf\",\n          \"current_dir\": \"{0}/current/atlas-client/conf\",\n          \"component\": \"atlas-client\"\n        }\n      ],\n      \"druid\": [\n        {\n          \"conf_dir\": \"/etc/druid/conf\",\n          \"current_dir\": \"{0}/current/druid-overlord/conf\",\n          \"component\": \"druid-overlord\"\n        }\n      ],\n      \"hadoop\": [\n        {\n          \"conf_dir\": \"/etc/hadoop/conf\",\n          \"current_dir\": \"{0}/current/hadoop-client/conf\",\n          \"component\": \"hadoop-client\"\n        }\n      ],\n      \"hbase\": [\n        {\n          \"conf_dir\": \"/etc/hbase/conf\",\n          \"current_dir\": \"{0}/current/hbase-client/conf\",\n          \"component\": \"hbase-client\"\n        }\n      ],\n      \"hive\": [\n        {\n          \"conf_dir\": \"/etc/hive/conf\",\n          \"current_dir\": \"{0}/current/hive-client/conf\",\n          \"component\": \"hive-client\"\n        }\n      ],\n      \"hive2\": [\n        {\n          \"conf_dir\": \"/etc/hive2/conf\",\n          \"current_dir\": \"{0}/current/hive-server2-hive/conf\",\n          \"component\": \"hive-server2-hive\"\n        }\n      ],\n      \"hive-hcatalog\": [\n        {\n          \"conf_dir\": \"/etc/hive-webhcat/conf\",\n          \"prefix\": \"/etc/hive-webhcat\",\n          \"current_dir\": \"{0}/current/hive-webhcat/etc/webhcat\",\n          \"component\": \"hive-webhcat\"\n        },\n        {\n          \"conf_dir\": \"/etc/hive-hcatalog/conf\",\n          \"prefix\": \"/etc/hive-hcatalog\",\n          \"current_dir\": \"{0}/current/hive-webhcat/etc/hcatalog\",\n          \"component\": \"hive-webhcat\"\n        }\n      ],\n      \"kafka\": [\n        {\n          \"conf_dir\": \"/etc/kafka/conf\",\n          \"current_dir\": \"{0}/current/kafka-broker/conf\",\n          \"component\": \"kafka-broker\"\n        }\n      ],\n      \"knox\": [\n        {\n          \"conf_dir\": \"/etc/knox/conf\",\n          \"current_dir\": \"{0}/current/knox-server/conf\",\n          \"component\": \"knox-server\"\n        }\n      ],\n      \"livy2\": [\n        {\n          \"conf_dir\": \"/etc/livy2/conf\",\n          \"current_dir\": \"{0}/current/livy2-client/conf\",\n          \"component\": \"livy2-client\"\n        }\n      ],\n      \"nifi\": [\n        {\n          \"conf_dir\": \"/etc/nifi/conf\",\n          \"current_dir\": \"{0}/current/nifi/conf\",\n          \"component\": \"nifi\"\n        }\n      ],\n      \"oozie\": [\n        {\n          \"conf_dir\": \"/etc/oozie/conf\",\n          \"current_dir\": \"{0}/current/oozie-client/conf\",\n          \"component\": \"oozie-client\"\n        }\n      ],\n      \"phoenix\": [\n        {\n          \"conf_dir\": \"/etc/phoenix/conf\",\n          \"current_dir\": \"{0}/current/phoenix-client/conf\",\n          \"component\": \"phoenix-client\"\n        }\n      ],\n      \"pig\": [\n        {\n          \"conf_dir\": \"/etc/pig/conf\",\n          \"current_dir\": \"{0}/current/pig-client/conf\",\n          \"component\": \"pig-client\"\n        }\n      ],\n      \"ranger-admin\": [\n        {\n          \"conf_dir\": \"/etc/ranger/admin/conf\",\n          \"current_dir\": \"{0}/current/ranger-admin/conf\",\n          \"component\": \"ranger-admin\"\n        }\n      ],\n      \"ranger-kms\": [\n        {\n          \"conf_dir\": \"/etc/ranger/kms/conf\",\n          \"current_dir\": \"{0}/current/ranger-kms/conf\",\n          \"component\": \"ranger-kms\"\n        }\n      ],\n      \"ranger-tagsync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/tagsync/conf\",\n          \"current_dir\": \"{0}/current/ranger-tagsync/conf\",\n          \"component\": \"ranger-tagsync\"\n        }\n      ],\n      \"ranger-usersync\": [\n        {\n          \"conf_dir\": \"/etc/ranger/usersync/conf\",\n          \"current_dir\": \"{0}/current/ranger-usersync/conf\",\n          \"component\": \"ranger-usersync\"\n        }\n      ],\n      \"spark2\": [\n        {\n          \"conf_dir\": \"/etc/spark2/conf\",\n          \"current_dir\": \"{0}/current/spark2-client/conf\",\n          \"component\": \"spark2-client\"\n        }\n      ],\n      \"sqoop\": [\n        {\n          \"conf_dir\": \"/etc/sqoop/conf\",\n          \"current_dir\": \"{0}/current/sqoop-client/conf\",\n          \"component\": \"sqoop-client\"\n        }\n      ],\n      \"storm\": [\n        {\n          \"conf_dir\": \"/etc/storm/conf\",\n          \"current_dir\": \"{0}/current/storm-client/conf\",\n          \"component\": \"storm-client\"\n        }\n      ],\n      \"superset\": [\n        {\n          \"conf_dir\": \"/etc/superset/conf\",\n          \"current_dir\": \"{0}/current/superset/conf\",\n          \"component\": \"superset\"\n        }\n      ],\n      \"tez\": [\n        {\n          \"conf_dir\": \"/etc/tez/conf\",\n          \"current_dir\": \"{0}/current/tez-client/conf\",\n          \"component\": \"tez-client\"\n        }\n      ],\n      \"zeppelin\": [\n        {\n          \"conf_dir\": \"/etc/zeppelin/conf\",\n          \"current_dir\": \"{0}/current/zeppelin-server/conf\",\n          \"component\": \"zeppelin-server\"\n        }\n      ],\n      \"zookeeper\": [\n        {\n          \"conf_dir\": \"/etc/zookeeper/conf\",\n          \"current_dir\": \"{0}/current/zookeeper-client/conf\",\n          \"component\": \"zookeeper-client\"\n        }\n      ]\n    },\n    \"conf-select-patching\": {\n      \"ACCUMULO\": {\n        \"packages\": [\"accumulo\"]\n      },\n      \"ATLAS\": {\n        \"packages\": [\"atlas\"]\n      },\n      \"DRUID\": {\n        \"packages\": [\"druid\"]\n      },\n      \"FLUME\": {\n        \"packages\": [\"flume\"]\n      },\n      \"HBASE\": {\n        \"packages\": [\"hbase\"]\n      },\n      \"HDFS\": {\n        \"packages\": []\n      },\n      \"HIVE\": {\n        \"packages\": [\"hive\", \"hive-hcatalog\", \"hive2\", \"tez_hive2\"]\n      },\n      \"KAFKA\": {\n        \"packages\": [\"kafka\"]\n      },\n      \"KNOX\": {\n        \"packages\": [\"knox\"]\n      },\n      \"MAPREDUCE2\": {\n        \"packages\": []\n      },\n      \"OOZIE\": {\n        \"packages\": [\"oozie\"]\n      },\n      \"PIG\": {\n        \"packages\": [\"pig\"]\n      },\n      \"R4ML\": {\n        \"packages\": []\n      },\n      \"RANGER\": {\n        \"packages\": [\"ranger-admin\", \"ranger-usersync\", \"ranger-tagsync\"]\n      },\n      \"RANGER_KMS\": {\n        \"packages\": [\"ranger-kms\"]\n      },\n      \"SPARK2\": {\n        \"packages\": [\"spark2\", \"livy2\"]\n      },\n      \"SQOOP\": {\n        \"packages\": [\"sqoop\"]\n      },\n      \"STORM\": {\n        \"packages\": [\"storm\", \"storm-slider-client\"]\n      },\n      \"SUPERSET\": {\n        \"packages\": [\"superset\"]\n      },\n      \"SYSTEMML\": {\n        \"packages\": []\n      },\n      \"TEZ\": {\n        \"packages\": [\"tez\"]\n      },\n      \"TITAN\": {\n        \"packages\": []\n      },\n      \"YARN\": {\n        \"packages\": []\n      },\n      \"ZEPPELIN\": {\n        \"packages\": [\"zeppelin\"]\n      },\n      \"ZOOKEEPER\": {\n        \"packages\": [\"zookeeper\"]\n      }\n    },\n    \"upgrade-dependencies\" : {\n      \"ATLAS\": [\"STORM\"],\n      \"HIVE\": [\"TEZ\", \"MAPREDUCE2\", \"SQOOP\"],\n      \"TEZ\": [\"HIVE\"],\n      \"MAPREDUCE2\": [\"HIVE\"],\n      \"OOZIE\": [\"MAPREDUCE2\"]\n    }\n  }\n}",
                    "namenode_rolling_restart_safemode_exit_timeout": "3600",
                    "ignore_bad_mounts": "false",
                    "user_group": "hadoop",
                    "sysprep_skip_setup_jce": "false",
                    "override_uid": "true",
                    "security_enabled": "true",
                    "sysprep_skip_copy_fast_jar_hdfs": "false",
                    "agent_mounts_ignore_list": "",
                    "recovery_lifetime_max_count": "1024",
                    "recovery_type": "AUTO_START",
                    "repo_suse_rhel_template": "[{{repo_id}}]\nname={{repo_id}}\n{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}\n\npath=/\nenabled=1\ngpgcheck=0",
                    "sysprep_skip_create_users_and_groups": "false",
                    "sysprep_skip_copy_tarballs_hdfs": "false",
                    "sysprep_skip_copy_oozie_share_lib_to_hdfs": "false",
                    "command_retry_enabled": "true",
                    "recovery_enabled": "true",
                    "smokeuser": "ambari-qa",
                    "smokeuser_keytab": "/etc/security/keytabs/smokeuser.headless.keytab",
                    "smokeuser_principal_name": "ambari-qa-hadoopdev@TEST014.ORG",
                    "sysprep_skip_oozie_schema_create": "false",
                    "command_retry_max_time_in_sec": "600",
                    "alerts_repeat_tolerance": "1",
                    "recovery_window_in_minutes": "60",
                    "stack_name": "HDP",
                    "ignore_groupsusers_create": "false"
                }
            }
        },
        {
            "ams-grafana-env": {
                "properties_attributes": {},
                "properties": {
                    "metrics_grafana_connect_retry_delay": "20",
                    "metrics_grafana_log_dir": "/var/log/ambari-metrics-grafana",
                    "metrics_grafana_connect_attempts": "15",
                    "metrics_grafana_pid_dir": "/var/run/ambari-metrics-grafana",
                    "content": "\n# Set environment variables here.\n\n# AMS UI Server Home Dir\nexport AMS_GRAFANA_HOME_DIR={{ams_grafana_home_dir}}\n\n# AMS UI Server Data Dir\nexport AMS_GRAFANA_DATA_DIR={{ams_grafana_data_dir}}\n\n# AMS UI Server Log Dir\nexport AMS_GRAFANA_LOG_DIR={{ams_grafana_log_dir}}\n\n# AMS UI Server PID Dir\nexport AMS_GRAFANA_PID_DIR={{ams_grafana_pid_dir}}",
                    "metrics_grafana_data_dir": "/var/lib/ambari-metrics-grafana",
                    "metrics_grafana_username": "admin"
                }
            }
        },
        {
            "product-info": {
                "properties_attributes": {},
                "properties": {
                    "product-info-content": "\n{\n    \"schemaVersion\" : \"1.0.0\",\n    \"productId\": \"{{stackName}}\",\n    \"componentId\": \"{{stackName}}\",\n    \"productVersion\" : \"{{stackVersion}}\",\n    \"type\":\"cluster\",\n    \"instanceInfo\": {\n        \"guid\": \"\",\n        \"parentGuid\": \"\",\n        \"name\":\"{{clusterName}}\",\n        \"flexSubscriptionId\": \"{{flexSubscriptionId}}\",\n        \"provider\": \"\",\n        \"region\": \"\"\n     }\n}"
                }
            }
        }
    ],
    "host_groups": [
        {
            "components": [
                {
                    "name": "NODEMANAGER"
                },
                {
                    "name": "YARN_CLIENT"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "ZKFC"
                },
                {
                    "name": "HISTORYSERVER"
                },
                {
                    "name": "METRICS_MONITOR"
                },
                {
                    "name": "NAMENODE"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "HST_AGENT"
                },
                {
                    "name": "MAPREDUCE2_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "AMBARI_SERVER"
                },
                {
                    "name": "DATANODE"
                },
                {
                    "name": "JOURNALNODE"
                },
                {
                    "name": "KERBEROS_CLIENT"
                },
                {
                    "name": "APP_TIMELINE_SERVER"
                }
            ],
            "configurations": [],
            "name": "host_group_2",
            "cardinality": "1"
        },
        {
            "components": [
                {
                    "name": "YARN_CLIENT"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "ZKFC"
                },
                {
                    "name": "HST_SERVER"
                },
                {
                    "name": "METRICS_MONITOR"
                },
                {
                    "name": "NAMENODE"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "YARN_REGISTRY_DNS"
                },
                {
                    "name": "ACTIVITY_ANALYZER"
                },
                {
                    "name": "TIMELINE_READER"
                },
                {
                    "name": "ACTIVITY_EXPLORER"
                },
                {
                    "name": "HST_AGENT"
                },
                {
                    "name": "MAPREDUCE2_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "JOURNALNODE"
                },
                {
                    "name": "KERBEROS_CLIENT"
                },
                {
                    "name": "METRICS_GRAFANA"
                },
                {
                    "name": "RESOURCEMANAGER"
                }
            ],
            "configurations": [],
            "name": "host_group_1",
            "cardinality": "1"
        },
        {
            "components": [
                {
                    "name": "NODEMANAGER"
                },
                {
                    "name": "HST_AGENT"
                },
                {
                    "name": "MAPREDUCE2_CLIENT"
                },
                {
                    "name": "YARN_CLIENT"
                },
                {
                    "name": "HDFS_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "name": "DATANODE"
                },
                {
                    "name": "METRICS_MONITOR"
                },
                {
                    "name": "JOURNALNODE"
                },
                {
                    "name": "KERBEROS_CLIENT"
                },
                {
                    "name": "ZOOKEEPER_CLIENT"
                },
                {
                    "name": "METRICS_COLLECTOR"
                }
            ],
            "configurations": [],
            "name": "host_group_3",
            "cardinality": "1"
        }
    ],
    "settings": [
        {
            "recovery_settings": [
                {
                    "recovery_enabled": "true"
                }
            ]
        },
        {
            "service_settings": [
                {
                    "recovery_enabled": "true",
                    "name": "MAPREDUCE2"
                },
                {
                    "recovery_enabled": "true",
                    "name": "SMARTSENSE"
                },
                {
                    "recovery_enabled": "true",
                    "name": "YARN"
                },
                {
                    "recovery_enabled": "true",
                    "name": "ZOOKEEPER"
                },
                {
                    "recovery_enabled": "true",
                    "name": "HDFS"
                },
                {
                    "recovery_enabled": "true",
                    "name": "AMBARI_METRICS"
                }
            ]
        },
        {
            "component_settings": [
                {
                    "recovery_enabled": "true",
                    "name": "ZKFC"
                },
                {
                    "recovery_enabled": "true",
                    "name": "ZOOKEEPER_SERVER"
                },
                {
                    "recovery_enabled": "true",
                    "name": "METRICS_MONITOR"
                },
                {
                    "recovery_enabled": "true",
                    "name": "YARN_REGISTRY_DNS"
                },
                {
                    "recovery_enabled": "true",
                    "name": "HST_SERVER"
                },
                {
                    "recovery_enabled": "true",
                    "name": "MAPREDUCE2_CLIENT"
                }
            ]
        }
    ],
    "Blueprints": {
        "security": {
            "type": "KERBEROS",
            "kerberos_descriptor": {
                "properties": {
                    "additional_realms": "",
                    "keytab_dir": "/etc/security/keytabs",
                    "principal_suffix": "-${cluster_name|toLower()}",
                    "realm": "TEST014.ORG"
                },
                "identities": [
                    {
                        "keytab": {
                            "configuration": "cluster-env/smokeuser_keytab",
                            "file": "${keytab_dir}/smokeuser.headless.keytab",
                            "group": {
                                "access": "r",
                                "name": "${cluster-env/user_group}"
                            },
                            "owner": {
                                "access": "r",
                                "name": "${cluster-env/smokeuser}"
                            }
                        },
                        "name": "smokeuser",
                        "principal": {
                            "configuration": "cluster-env/smokeuser_principal_name",
                            "local_username": "${cluster-env/smokeuser}",
                            "type": "user",
                            "value": "${cluster-env/smokeuser}${principal_suffix}@${realm}"
                        },
                        "referencePath": "smokeuser"
                    },
                    {
                        "keytab": {
                            "file": "${keytab_dir}/spnego.service.keytab",
                            "group": {
                                "access": "r",
                                "name": "${cluster-env/user_group}"
                            },
                            "owner": {
                                "access": "r",
                                "name": "root"
                            }
                        },
                        "name": "spnego",
                        "principal": {
                            "type": "service",
                            "value": "HTTP/_HOST@${realm}"
                        },
                        "referencePath": "spnego"
                    }
                ],
                "services": [
                    {
                        "components": [
                            {
                                "name": "ACCUMULO_CLIENT"
                            },
                            {
                                "name": "ACCUMULO_GC"
                            },
                            {
                                "identities": [],
                                "name": "ACCUMULO_MASTER"
                            },
                            {
                                "name": "ACCUMULO_MONITOR"
                            },
                            {
                                "name": "ACCUMULO_TRACER"
                            },
                            {
                                "name": "ACCUMULO_TSERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "accumulo-site": {
                                    "general.delegation.token.lifetime": "7d",
                                    "general.delegation.token.update.interval": "1d",
                                    "instance.rpc.sasl.enabled": "true",
                                    "instance.security.authenticator": "org.apache.accumulo.server.security.handler.KerberosAuthenticator",
                                    "instance.security.authorizor": "org.apache.accumulo.server.security.handler.KerberosAuthorizor",
                                    "instance.security.permissionHandler": "org.apache.accumulo.server.security.handler.KerberosPermissionHandler",
                                    "trace.token.type": "org.apache.accumulo.core.client.security.tokens.KerberosToken"
                                }
                            },
                            {
                                "client": {
                                    "kerberos.server.primary": "{{bare_accumulo_principal}}"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "accumulo-env/accumulo_user_keytab",
                                    "file": "${keytab_dir}/accumulo.headless.keytab",
                                    "group": {
                                        "access": "r",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${accumulo-env/accumulo_user}"
                                    }
                                },
                                "name": "accumulo",
                                "principal": {
                                    "configuration": "accumulo-env/accumulo_principal_name",
                                    "local_username": "${accumulo-env/accumulo_user}",
                                    "type": "user",
                                    "value": "${accumulo-env/accumulo_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "ACCUMULO/accumulo"
                            },
                            {
                                "keytab": {
                                    "configuration": "accumulo-site/general.kerberos.keytab",
                                    "file": "${keytab_dir}/accumulo.service.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${accumulo-env/accumulo_user}"
                                    }
                                },
                                "name": "accumulo_service",
                                "principal": {
                                    "configuration": "accumulo-site/general.kerberos.principal",
                                    "local_username": "${accumulo-env/accumulo_user}",
                                    "type": "service",
                                    "value": "${accumulo-env/accumulo_user}/_HOST@${realm}"
                                },
                                "referencePath": "ACCUMULO/accumulo_service"
                            },
                            {
                                "keytab": {
                                    "configuration": "accumulo-site/trace.token.property.keytab",
                                    "file": "${keytab_dir}/accumulo-tracer.headless.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${accumulo-env/accumulo_user}"
                                    }
                                },
                                "name": "accumulo_tracer",
                                "principal": {
                                    "configuration": "accumulo-site/trace.user",
                                    "local_username": "${accumulo-env/accumulo_user}",
                                    "type": "user",
                                    "value": "tracer${principal_suffix}@${realm}"
                                },
                                "referencePath": "ACCUMULO/accumulo_tracer"
                            }
                        ],
                        "name": "ACCUMULO"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "file": "${keytab_dir}/ambari.server.keytab",
                                            "owner": {
                                                "access": "r"
                                            }
                                        },
                                        "name": "ambari-server",
                                        "principal": {
                                            "configuration": "cluster-env/ambari_principal_name",
                                            "type": "user",
                                            "value": "ambari-server${principal_suffix}@${realm}"
                                        },
                                        "referencePath": "AMBARI/AMBARI_SERVER/ambari-server"
                                    }
                                ],
                                "name": "AMBARI_SERVER"
                            }
                        ],
                        "name": "AMBARI"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "infra-solr-env/infra_solr_kerberos_keytab",
                                            "file": "${keytab_dir}/ambari-infra-solr.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${infra-solr-env/infra_solr_user}"
                                            }
                                        },
                                        "name": "infra-solr",
                                        "principal": {
                                            "configuration": "infra-solr-env/infra_solr_kerberos_principal",
                                            "type": "service",
                                            "value": "infra-solr/_HOST@${realm}"
                                        },
                                        "referencePath": "AMBARI_INFRA_SOLR/INFRA_SOLR/infra-solr"
                                    }
                                ],
                                "name": "INFRA_SOLR"
                            },
                            {
                                "name": "INFRA_SOLR_CLIENT"
                            }
                        ],
                        "identities": [],
                        "name": "AMBARI_INFRA_SOLR"
                    },
                    {
                        "components": [
                            {
                                "configurations": [
                                    {
                                        "ams-hbase-security-site": {
                                            "hadoop.security.authentication": "kerberos",
                                            "hbase.coprocessor.master.classes": "org.apache.hadoop.hbase.security.access.AccessController",
                                            "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
                                            "hbase.security.authentication": "kerberos",
                                            "hbase.security.authorization": "true",
                                            "hbase.zookeeper.property.authProvider.1": "org.apache.zookeeper.server.auth.SASLAuthenticationProvider",
                                            "hbase.zookeeper.property.jaasLoginRenew": "3600000",
                                            "hbase.zookeeper.property.kerberos.removeHostFromPrincipal": "true",
                                            "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal": "true"
                                        }
                                    },
                                    {
                                        "ams-hbase-site": {
                                            "zookeeper.znode.parent": "/ams-hbase-secure"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "ams-hbase-security-site/hbase.myclient.keytab",
                                            "file": "${keytab_dir}/ams.collector.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${ams-env/ambari_metrics_user}"
                                            }
                                        },
                                        "name": "ams_collector",
                                        "principal": {
                                            "configuration": "ams-hbase-security-site/hbase.myclient.principal",
                                            "local_username": "${ams-env/ambari_metrics_user}",
                                            "type": "service",
                                            "value": "amshbase/_HOST@${realm}"
                                        },
                                        "referencePath": "AMBARI_METRICS/METRICS_COLLECTOR/ams_collector"
                                    },
                                    {
                                        "keytab": {
                                            "configuration": "ams-hbase-security-site/hbase.master.keytab.file",
                                            "file": "${keytab_dir}/ams-hbase.master.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${ams-env/ambari_metrics_user}"
                                            }
                                        },
                                        "name": "ams_hbase_master_hbase",
                                        "principal": {
                                            "configuration": "ams-hbase-security-site/hbase.master.kerberos.principal",
                                            "local_username": "${ams-env/ambari_metrics_user}",
                                            "type": "service",
                                            "value": "amshbase/_HOST@${realm}"
                                        },
                                        "referencePath": "AMBARI_METRICS/METRICS_COLLECTOR/ams_hbase_master_hbase"
                                    },
                                    {
                                        "keytab": {
                                            "configuration": "ams-hbase-security-site/hbase.regionserver.keytab.file",
                                            "file": "${keytab_dir}/ams-hbase.regionserver.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${ams-env/ambari_metrics_user}"
                                            }
                                        },
                                        "name": "ams_hbase_regionserver_hbase",
                                        "principal": {
                                            "configuration": "ams-hbase-security-site/hbase.regionserver.kerberos.principal",
                                            "local_username": "${ams-env/ambari_metrics_user}",
                                            "type": "service",
                                            "value": "amshbase/_HOST@${realm}"
                                        },
                                        "referencePath": "AMBARI_METRICS/METRICS_COLLECTOR/ams_hbase_regionserver_hbase"
                                    },
                                    {
                                        "keytab": {
                                            "configuration": "ams-hbase-security-site/ams.zookeeper.keytab",
                                            "file": "${keytab_dir}/ams-zk.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${ams-env/ambari_metrics_user}"
                                            }
                                        },
                                        "name": "ams_zookeeper",
                                        "principal": {
                                            "configuration": "ams-hbase-security-site/ams.zookeeper.principal",
                                            "local_username": "${ams-env/ambari_metrics_user}",
                                            "type": "service",
                                            "value": "amszk/_HOST@${realm}"
                                        },
                                        "referencePath": "AMBARI_METRICS/METRICS_COLLECTOR/ams_zookeeper"
                                    }
                                ],
                                "name": "METRICS_COLLECTOR"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "ams-hbase-security-site/ams.monitor.keytab",
                                            "file": "${keytab_dir}/ams-monitor.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${ams-env/ambari_metrics_user}"
                                            }
                                        },
                                        "name": "ams_monitor",
                                        "principal": {
                                            "configuration": "ams-hbase-security-site/ams.monitor.principal",
                                            "local_username": "${ams-env/ambari_metrics_user}",
                                            "type": "service",
                                            "value": "amsmon/_HOST@${realm}"
                                        },
                                        "referencePath": "AMBARI_METRICS/METRICS_MONITOR/ams_monitor"
                                    }
                                ],
                                "name": "METRICS_MONITOR"
                            }
                        ],
                        "identities": [],
                        "name": "AMBARI_METRICS"
                    },
                    {
                        "auth_to_local_properties": [
                            "application-properties/atlas.authentication.method.kerberos.name.rules|new_lines_escaped"
                        ],
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "application-properties/atlas.jaas.KafkaClient.option.keyTab",
                                            "file": "${keytab_dir}/atlas.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${atlas-env/metadata_user}"
                                            }
                                        },
                                        "name": "atlas",
                                        "principal": {
                                            "configuration": "application-properties/atlas.jaas.KafkaClient.option.principal",
                                            "local_username": "${atlas-env/metadata_user}",
                                            "type": "service",
                                            "value": "atlas/_HOST@${realm}"
                                        },
                                        "referencePath": "ATLAS/ATLAS_SERVER/atlas"
                                    }
                                ],
                                "name": "ATLAS_SERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "application-properties": {
                                    "atlas.authentication.method.kerberos": "true",
                                    "atlas.jaas.KafkaClient.loginModuleControlFlag": "required",
                                    "atlas.jaas.KafkaClient.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "atlas.jaas.KafkaClient.option.serviceName": "${kafka-env/kafka_user}",
                                    "atlas.jaas.KafkaClient.option.storeKey": "true",
                                    "atlas.jaas.KafkaClient.option.useKeyTab": "true",
                                    "atlas.kafka.sasl.kerberos.service.name": "${kafka-env/kafka_user}",
                                    "atlas.kafka.security.protocol": "SASL_PLAINTEXT",
                                    "atlas.server.ha.zookeeper.acl": "auth:",
                                    "atlas.solr.kerberos.enable": "true"
                                }
                            },
                            {
                                "ranger-atlas-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "name": "ATLAS"
                    },
                    {
                        "auth_to_local_properties": [
                            "druid-common/druid.auth.authenticator.kerberos.authToLocal|new_lines_escaped"
                        ],
                        "components": [
                            {
                                "name": "DRUID_BROKER"
                            },
                            {
                                "name": "DRUID_COORDINATOR"
                            },
                            {
                                "name": "DRUID_HISTORICAL"
                            },
                            {
                                "name": "DRUID_MIDDLEMANAGER"
                            },
                            {
                                "name": "DRUID_OVERLORD"
                            },
                            {
                                "name": "DRUID_ROUTER"
                            }
                        ],
                        "configurations": [
                            {
                                "druid-common": {
                                    "druid.auth.authenticator.kerberos.cookieSignatureSecret": "cookie-signature-secret",
                                    "druid.auth.authenticator.kerberos.type": "kerberos",
                                    "druid.auth.authenticatorChain": "[\"kerberos\"]",
                                    "druid.escalator.authorizerName": "allowAll",
                                    "druid.escalator.type": "kerberos",
                                    "druid.security.extensions.loadList": "[\"druid-kerberos\"]"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "druid-common/druid.escalator.internalClientKeytab",
                                    "file": "${keytab_dir}/druid.headless.keytab",
                                    "group": {
                                        "access": "r",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${druid-env/druid_user}"
                                    }
                                },
                                "name": "druid_escalator_client",
                                "principal": {
                                    "configuration": "druid-common/druid.escalator.internalClientPrincipal",
                                    "local_username": "${druid-env/druid_user}",
                                    "type": "user",
                                    "value": "${druid-env/druid_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "DRUID/druid_escalator_client"
                            },
                            {
                                "keytab": {
                                    "configuration": "druid-common/druid.hadoop.security.kerberos.keytab",
                                    "file": "${keytab_dir}/druid.headless.keytab",
                                    "group": {
                                        "access": "r",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${druid-env/druid_user}"
                                    }
                                },
                                "name": "druid_hdfs",
                                "principal": {
                                    "configuration": "druid-common/druid.hadoop.security.kerberos.principal",
                                    "local_username": "${druid-env/druid_user}",
                                    "type": "user",
                                    "value": "${druid-env/druid_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "DRUID/druid_hdfs"
                            }
                        ],
                        "name": "DRUID"
                    },
                    {
                        "components": [
                            {
                                "configurations": [
                                    {
                                        "hbase-atlas-application-properties": {
                                            "atlas.jaas.ticketBased-KafkaClient.loginModuleControlFlag": "required",
                                            "atlas.jaas.ticketBased-KafkaClient.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                            "atlas.jaas.ticketBased-KafkaClient.option.useTicketCache": "true"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hbase-site/hbase.master.keytab.file",
                                            "file": "${keytab_dir}/hbase.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hbase-env/hbase_user}"
                                            }
                                        },
                                        "name": "hbase_master_hbase",
                                        "principal": {
                                            "configuration": "hbase-site/hbase.master.kerberos.principal",
                                            "local_username": "${hbase-env/hbase_user}",
                                            "type": "service",
                                            "value": "hbase/_HOST@${realm}"
                                        },
                                        "referencePath": "HBASE/HBASE_MASTER/hbase_master_hbase"
                                    }
                                ],
                                "name": "HBASE_MASTER"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hbase-site/hbase.regionserver.keytab.file",
                                            "file": "${keytab_dir}/hbase.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hbase-env/hbase_user}"
                                            }
                                        },
                                        "name": "hbase_regionserver_hbase",
                                        "principal": {
                                            "configuration": "hbase-site/hbase.regionserver.kerberos.principal",
                                            "local_username": "${hbase-env/hbase_user}",
                                            "type": "service",
                                            "value": "hbase/_HOST@${realm}"
                                        },
                                        "referencePath": "HBASE/HBASE_REGIONSERVER/hbase_regionserver_hbase"
                                    }
                                ],
                                "name": "HBASE_REGIONSERVER"
                            },
                            {
                                "identities": [],
                                "name": "PHOENIX_QUERY_SERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "hbase-site": {
                                    "hbase.bulkload.staging.dir": "/apps/hbase/staging",
                                    "hbase.coprocessor.master.classes": "{{hbase_coprocessor_master_classes}}",
                                    "hbase.coprocessor.region.classes": "{{hbase_coprocessor_region_classes}}",
                                    "hbase.coprocessor.regionserver.classes": "{{hbase_coprocessor_regionserver_classes}}",
                                    "hbase.master.ui.readonly": "true",
                                    "hbase.security.authentication": "kerberos",
                                    "hbase.security.authorization": "true",
                                    "zookeeper.znode.parent": "/hbase-secure"
                                }
                            },
                            {
                                "ranger-hbase-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "hbase-env/hbase_user_keytab",
                                    "file": "${keytab_dir}/hbase.headless.keytab",
                                    "group": {
                                        "access": "r",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${hbase-env/hbase_user}"
                                    }
                                },
                                "name": "hbase",
                                "principal": {
                                    "configuration": "hbase-env/hbase_principal_name",
                                    "local_username": "${hbase-env/hbase_user}",
                                    "type": "user",
                                    "value": "${hbase-env/hbase_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "HBASE/hbase"
                            }
                        ],
                        "name": "HBASE"
                    },
                    {
                        "auth_to_local_properties": [
                            "core-site/hadoop.security.auth_to_local"
                        ],
                        "components": [
                            {
                                "configurations": [
                                    {
                                        "hdfs-site": {
                                            "dfs.data.transfer.protection": "authentication,privacy",
                                            "dfs.datanode.address": "0.0.0.0:1019",
                                            "dfs.datanode.http.address": "0.0.0.0:1022"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hdfs-site/dfs.datanode.keytab.file",
                                            "file": "${keytab_dir}/dn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hadoop-env/hdfs_user}"
                                            }
                                        },
                                        "name": "datanode_dn",
                                        "principal": {
                                            "configuration": "hdfs-site/dfs.datanode.kerberos.principal",
                                            "local_username": "${hadoop-env/hdfs_user}",
                                            "type": "service",
                                            "value": "dn/_HOST@${realm}"
                                        },
                                        "referencePath": "HDFS/DATANODE/datanode_dn"
                                    }
                                ],
                                "name": "DATANODE"
                            },
                            {
                                "identities": [],
                                "name": "HDFS_CLIENT"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hdfs-site/dfs.journalnode.keytab.file",
                                            "file": "${keytab_dir}/jn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hadoop-env/hdfs_user}"
                                            }
                                        },
                                        "name": "journalnode_jn",
                                        "principal": {
                                            "configuration": "hdfs-site/dfs.journalnode.kerberos.principal",
                                            "local_username": "${hadoop-env/hdfs_user}",
                                            "type": "service",
                                            "value": "jn/_HOST@${realm}"
                                        },
                                        "referencePath": "HDFS/JOURNALNODE/journalnode_jn"
                                    }
                                ],
                                "name": "JOURNALNODE"
                            },
                            {
                                "configurations": [
                                    {
                                        "hdfs-site": {
                                            "dfs.block.access.token.enable": "true"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hadoop-env/hdfs_user_keytab",
                                            "file": "${keytab_dir}/hdfs.headless.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hadoop-env/hdfs_user}"
                                            }
                                        },
                                        "name": "hdfs",
                                        "principal": {
                                            "configuration": "hadoop-env/hdfs_principal_name",
                                            "local_username": "${hadoop-env/hdfs_user}",
                                            "type": "user",
                                            "value": "${hadoop-env/hdfs_user}${principal_suffix}@${realm}"
                                        },
                                        "referencePath": "HDFS/NAMENODE/hdfs"
                                    },
                                    {
                                        "keytab": {
                                            "configuration": "hdfs-site/dfs.namenode.keytab.file",
                                            "file": "${keytab_dir}/nn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hadoop-env/hdfs_user}"
                                            }
                                        },
                                        "name": "namenode_nn",
                                        "principal": {
                                            "configuration": "hdfs-site/dfs.namenode.kerberos.principal",
                                            "local_username": "${hadoop-env/hdfs_user}",
                                            "type": "service",
                                            "value": "nn/_HOST@${realm}"
                                        },
                                        "referencePath": "HDFS/NAMENODE/namenode_nn"
                                    }
                                ],
                                "name": "NAMENODE"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hdfs-site/nfs.keytab.file",
                                            "file": "${keytab_dir}/nfs.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hadoop-env/hdfs_user}"
                                            }
                                        },
                                        "name": "nfsgateway",
                                        "principal": {
                                            "configuration": "hdfs-site/nfs.kerberos.principal",
                                            "local_username": "${hadoop-env/hdfs_user}",
                                            "type": "service",
                                            "value": "nfs/_HOST@${realm}"
                                        },
                                        "referencePath": "HDFS/NFS_GATEWAY/nfsgateway"
                                    }
                                ],
                                "name": "NFS_GATEWAY"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hdfs-site/dfs.secondary.namenode.keytab.file",
                                            "file": "${keytab_dir}/nn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hadoop-env/hdfs_user}"
                                            }
                                        },
                                        "name": "secondary_namenode_nn",
                                        "principal": {
                                            "configuration": "hdfs-site/dfs.secondary.namenode.kerberos.principal",
                                            "local_username": "${hadoop-env/hdfs_user}",
                                            "type": "service",
                                            "value": "nn/_HOST@${realm}"
                                        },
                                        "referencePath": "HDFS/SECONDARY_NAMENODE/secondary_namenode_nn"
                                    }
                                ],
                                "name": "SECONDARY_NAMENODE"
                            }
                        ],
                        "configurations": [
                            {
                                "core-site": {
                                    "ha.zookeeper.acl": "sasl:nn:rwcda",
                                    "hadoop.http.authentication.signature.secret.file": "/etc/security/http_secret",
                                    "hadoop.http.authentication.simple.anonymous.allowed": "false",
                                    "hadoop.http.authentication.type": "kerberos",
                                    "hadoop.http.filter.initializers": "org.apache.hadoop.security.AuthenticationFilterInitializer,org.apache.hadoop.security.HttpCrossOriginFilterInitializer",
                                    "hadoop.proxyuser.HTTP.groups": "${hadoop-env/proxyuser_group}",
                                    "hadoop.rpc.protection": "authentication,privacy",
                                    "hadoop.security.authentication": "kerberos",
                                    "hadoop.security.authorization": "true"
                                }
                            },
                            {
                                "ranger-hdfs-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "HDFS"
                    },
                    {
                        "components": [
                            {
                                "identities": [],
                                "name": "HIVE_METASTORE"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "hive-site/hive.server2.authentication.kerberos.keytab",
                                            "file": "${keytab_dir}/hive.service.keytab",
                                            "group": {
                                                "access": "r",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${hive-env/hive_user}"
                                            }
                                        },
                                        "name": "hive_server_hive",
                                        "principal": {
                                            "configuration": "hive-site/hive.server2.authentication.kerberos.principal",
                                            "local_username": "${hive-env/hive_user}",
                                            "type": "service",
                                            "value": "hive/_HOST@${realm}"
                                        },
                                        "referencePath": "HIVE/HIVE_SERVER/hive_server_hive"
                                    }
                                ],
                                "name": "HIVE_SERVER"
                            },
                            {
                                "identities": [],
                                "name": "HIVE_SERVER_INTERACTIVE"
                            }
                        ],
                        "configurations": [
                            {
                                "hive-site": {
                                    "hive.metastore.sasl.enabled": "true",
                                    "hive.server2.authentication": "KERBEROS"
                                }
                            },
                            {
                                "ranger-hive-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "HIVE"
                    },
                    {
                        "auth_to_local_properties": [
                            "kafka-broker/sasl.kerberos.principal.to.local.rules|comma"
                        ],
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "kafka-env/kafka_keytab",
                                            "file": "${keytab_dir}/kafka.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${kafka-env/kafka_user}"
                                            }
                                        },
                                        "name": "kafka_broker",
                                        "principal": {
                                            "configuration": "kafka-env/kafka_principal_name",
                                            "type": "service",
                                            "value": "${kafka-env/kafka_user}/_HOST@${realm}"
                                        },
                                        "referencePath": "KAFKA/KAFKA_BROKER/kafka_broker"
                                    }
                                ],
                                "name": "KAFKA_BROKER"
                            }
                        ],
                        "configurations": [
                            {
                                "kafka-broker": {
                                    "authorizer.class.name": "kafka.security.auth.SimpleAclAuthorizer",
                                    "principal.to.local.class": "kafka.security.auth.KerberosPrincipalToLocal",
                                    "security.inter.broker.protocol": "SASL_PLAINTEXT",
                                    "super.users": "user:${kafka-env/kafka_user}",
                                    "zookeeper.set.acl": "true"
                                }
                            },
                            {
                                "ranger-kafka-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "KAFKA"
                    },
                    {
                        "components": [
                            {
                                "name": "KERBEROS_CLIENT"
                            }
                        ],
                        "identities": [],
                        "name": "KERBEROS"
                    },
                    {
                        "components": [
                            {
                                "configurations": [
                                    {
                                        "core-site": {
                                            "hadoop.proxyuser.${knox-env/knox_user}.groups": "${hadoop-env/proxyuser_group}",
                                            "hadoop.proxyuser.${knox-env/knox_user}.hosts": "${clusterHostInfo/knox_gateway_hosts}"
                                        }
                                    },
                                    {
                                        "gateway-site": {
                                            "gateway.hadoop.kerberos.secured": "true",
                                            "java.security.krb5.conf": "/etc/krb5.conf"
                                        }
                                    },
                                    {
                                        "ranger-knox-audit": {
                                            "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                            "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                            "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                            "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                            "xasecure.audit.jaas.Client.option.storeKey": "false",
                                            "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "knox-env/knox_keytab_path",
                                            "file": "${keytab_dir}/knox.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${knox-env/knox_user}"
                                            }
                                        },
                                        "name": "knox_principal",
                                        "principal": {
                                            "configuration": "knox-env/knox_principal_name",
                                            "local_username": "${knox-env/knox_user}",
                                            "type": "service",
                                            "value": "${knox-env/knox_user}/_HOST@${realm}"
                                        },
                                        "referencePath": "KNOX/KNOX_GATEWAY/knox_principal"
                                    }
                                ],
                                "name": "KNOX_GATEWAY"
                            }
                        ],
                        "name": "KNOX"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "logfeeder-env/logfeeder_kerberos_keytab",
                                            "file": "${keytab_dir}/logfeeder.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "root"
                                            }
                                        },
                                        "name": "logfeeder",
                                        "principal": {
                                            "configuration": "logfeeder-env/logfeeder_kerberos_principal",
                                            "type": "service",
                                            "value": "logfeeder/_HOST@${realm}"
                                        },
                                        "referencePath": "LOGSEARCH/LOGSEARCH_LOGFEEDER/logfeeder"
                                    }
                                ],
                                "name": "LOGSEARCH_LOGFEEDER"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "logsearch-env/logsearch_kerberos_keytab",
                                            "file": "${keytab_dir}/logsearch.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${logsearch-env/logsearch_user}"
                                            }
                                        },
                                        "name": "logsearch",
                                        "principal": {
                                            "configuration": "logsearch-env/logsearch_kerberos_principal",
                                            "type": "service",
                                            "value": "logsearch/_HOST@${realm}"
                                        },
                                        "referencePath": "LOGSEARCH/LOGSEARCH_SERVER/logsearch"
                                    }
                                ],
                                "name": "LOGSEARCH_SERVER"
                            }
                        ],
                        "identities": [],
                        "name": "LOGSEARCH"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "mapred-site/mapreduce.jobhistory.keytab",
                                            "file": "${keytab_dir}/jhs.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${mapred-env/mapred_user}"
                                            }
                                        },
                                        "name": "history_server_jhs",
                                        "principal": {
                                            "configuration": "mapred-site/mapreduce.jobhistory.principal",
                                            "local_username": "${mapred-env/mapred_user}",
                                            "type": "service",
                                            "value": "jhs/_HOST@${realm}"
                                        },
                                        "referencePath": "MAPREDUCE2/HISTORYSERVER/history_server_jhs"
                                    }
                                ],
                                "name": "HISTORYSERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "mapred-site": {
                                    "mapreduce.cluster.acls.enabled": "true",
                                    "mapreduce.jobhistory.admin.acl": "${mapred-env/mapred_user}"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "MAPREDUCE2"
                    },
                    {
                        "auth_to_local_properties": [
                            "oozie-site/oozie.authentication.kerberos.name.rules"
                        ],
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "oozie-site/oozie.service.HadoopAccessorService.keytab.file",
                                            "file": "${keytab_dir}/oozie.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${oozie-env/oozie_user}"
                                            }
                                        },
                                        "name": "oozie_server",
                                        "principal": {
                                            "configuration": "oozie-site/oozie.service.HadoopAccessorService.kerberos.principal",
                                            "local_username": "${oozie-env/oozie_user}",
                                            "type": "service",
                                            "value": "oozie/_HOST@${realm}"
                                        },
                                        "referencePath": "OOZIE/OOZIE_SERVER/oozie_server"
                                    }
                                ],
                                "name": "OOZIE_SERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "oozie-site": {
                                    "local.realm": "${realm}",
                                    "oozie.authentication.type": "kerberos",
                                    "oozie.credentials.credentialclasses": "hcat=org.apache.oozie.action.hadoop.HiveCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
                                    "oozie.service.AuthorizationService.authorization.enabled": "true",
                                    "oozie.service.HadoopAccessorService.kerberos.enabled": "true",
                                    "oozie.zookeeper.secure": "true"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "OOZIE"
                    },
                    {
                        "components": [
                            {
                                "identities": [],
                                "name": "PIG"
                            }
                        ],
                        "name": "PIG"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "ranger-admin-site/ranger.admin.kerberos.keytab",
                                            "file": "${keytab_dir}/rangeradmin.service.keytab",
                                            "owner": {
                                                "access": "r",
                                                "name": "${ranger-env/ranger_user}"
                                            }
                                        },
                                        "name": "rangeradmin",
                                        "principal": {
                                            "configuration": "ranger-admin-site/ranger.admin.kerberos.principal",
                                            "local_username": "${ranger-env/ranger_user}",
                                            "type": "service",
                                            "value": "rangeradmin/_HOST@${realm}"
                                        },
                                        "referencePath": "RANGER/RANGER_ADMIN/rangeradmin"
                                    },
                                    {
                                        "keytab": {
                                            "configuration": "ranger-admin-site/ranger.lookup.kerberos.keytab",
                                            "file": "${keytab_dir}/rangerlookup.service.keytab",
                                            "owner": {
                                                "access": "r",
                                                "name": "${ranger-env/ranger_user}"
                                            }
                                        },
                                        "name": "rangerlookup",
                                        "principal": {
                                            "configuration": "ranger-admin-site/ranger.lookup.kerberos.principal",
                                            "type": "service",
                                            "value": "rangerlookup/_HOST@${realm}"
                                        },
                                        "referencePath": "RANGER/RANGER_ADMIN/rangerlookup"
                                    }
                                ],
                                "name": "RANGER_ADMIN"
                            },
                            {
                                "configurations": [
                                    {
                                        "tagsync-application-properties": {
                                            "atlas.authentication.method.kerberos": "true",
                                            "atlas.jaas.KafkaClient.loginModuleControlFlag": "required",
                                            "atlas.jaas.KafkaClient.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                            "atlas.jaas.KafkaClient.option.serviceName": "kafka",
                                            "atlas.jaas.KafkaClient.option.storeKey": "true",
                                            "atlas.jaas.KafkaClient.option.useKeyTab": "true",
                                            "atlas.kafka.sasl.kerberos.service.name": "kafka",
                                            "atlas.kafka.security.protocol": "SASL_PLAINTEXT"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "ranger-tagsync-site/ranger.tagsync.kerberos.keytab",
                                            "file": "${keytab_dir}/rangertagsync.service.keytab",
                                            "owner": {
                                                "access": "r",
                                                "name": "${ranger-env/ranger_user}"
                                            }
                                        },
                                        "name": "rangertagsync",
                                        "principal": {
                                            "configuration": "ranger-tagsync-site/ranger.tagsync.kerberos.principal",
                                            "local_username": "rangertagsync",
                                            "type": "service",
                                            "value": "rangertagsync/_HOST@${realm}"
                                        },
                                        "referencePath": "RANGER/RANGER_TAGSYNC/rangertagsync"
                                    }
                                ],
                                "name": "RANGER_TAGSYNC"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "ranger-ugsync-site/ranger.usersync.kerberos.keytab",
                                            "file": "${keytab_dir}/rangerusersync.service.keytab",
                                            "owner": {
                                                "access": "r",
                                                "name": "${ranger-env/ranger_user}"
                                            }
                                        },
                                        "name": "rangerusersync",
                                        "principal": {
                                            "configuration": "ranger-ugsync-site/ranger.usersync.kerberos.principal",
                                            "local_username": "rangerusersync",
                                            "type": "service",
                                            "value": "rangerusersync/_HOST@${realm}"
                                        },
                                        "referencePath": "RANGER/RANGER_USERSYNC/rangerusersync"
                                    }
                                ],
                                "name": "RANGER_USERSYNC"
                            }
                        ],
                        "configurations": [
                            {
                                "ranger-admin-site": {
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "RANGER"
                    },
                    {
                        "auth_to_local_properties": [
                            "kms-site/hadoop.kms.authentication.kerberos.name.rules"
                        ],
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "dbks-site/ranger.ks.kerberos.keytab",
                                            "file": "${keytab_dir}/rangerkms.service.keytab",
                                            "owner": {
                                                "access": "r",
                                                "name": "${kms-env/kms_user}"
                                            }
                                        },
                                        "name": "rangerkms",
                                        "principal": {
                                            "configuration": "dbks-site/ranger.ks.kerberos.principal",
                                            "local_username": "keyadmin",
                                            "type": "service",
                                            "value": "rangerkms/_HOST@${realm}"
                                        },
                                        "referencePath": "RANGER_KMS/RANGER_KMS_SERVER/rangerkms"
                                    }
                                ],
                                "name": "RANGER_KMS_SERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "kms-site": {
                                    "hadoop.kms.authentication.kerberos.principal": "*",
                                    "hadoop.kms.authentication.type": "kerberos"
                                }
                            },
                            {
                                "ranger-kms-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            }
                        ],
                        "identities": [],
                        "name": "RANGER_KMS"
                    },
                    {
                        "components": [
                            {
                                "configurations": [
                                    {
                                        "ams-hbase-site": {
                                            "hbase.superuser": "${activity-conf/global.activity.analyzer.user},${activity-conf/activity.explorer.user},${ams-env/ambari_metrics_user}"
                                        }
                                    },
                                    {
                                        "yarn-site": {
                                            "yarn.admin.acl": "${yarn-env/yarn_user}"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "activity-conf/global.activity.analyzer.user.keytab",
                                            "file": "${keytab_dir}/activity-analyzer.headless.keytab",
                                            "owner": {
                                                "access": "r"
                                            }
                                        },
                                        "name": "activity_analyzer",
                                        "principal": {
                                            "configuration": "activity-conf/global.activity.analyzer.user.principal",
                                            "local_username": "${activity-conf/global.activity.analyzer.user}",
                                            "type": "service",
                                            "value": "${activity-conf/global.activity.analyzer.user}/_HOST@${realm}"
                                        },
                                        "referencePath": "SMARTSENSE/ACTIVITY_ANALYZER/activity_analyzer"
                                    }
                                ],
                                "name": "ACTIVITY_ANALYZER"
                            },
                            {
                                "configurations": [
                                    {
                                        "activity-zeppelin-site": {
                                            "zeppelin.server.kerberos.keytab": "${keytab_dir}/activity-explorer.headless.keytab",
                                            "zeppelin.server.kerberos.principal": "${activity-conf/activity.explorer.user}/_HOST@${realm}"
                                        }
                                    },
                                    {
                                        "ams-hbase-site": {
                                            "hbase.superuser": "${activity-conf/global.activity.analyzer.user},${activity-conf/activity.explorer.user},${ams-env/ambari_metrics_user}"
                                        }
                                    },
                                    {
                                        "yarn-site": {
                                            "yarn.admin.acl": "${yarn-env/yarn_user}"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "activity-conf/activity.explorer.user.keytab",
                                            "file": "${keytab_dir}/activity-explorer.headless.keytab",
                                            "owner": {
                                                "access": "r"
                                            }
                                        },
                                        "name": "activity_explorer",
                                        "principal": {
                                            "configuration": "activity-conf/activity.explorer.user.principal",
                                            "local_username": "${activity-conf/activity.explorer.user}",
                                            "type": "service",
                                            "value": "${activity-conf/activity.explorer.user}/_HOST@${realm}"
                                        },
                                        "referencePath": "SMARTSENSE/ACTIVITY_EXPLORER/activity_explorer"
                                    }
                                ],
                                "name": "ACTIVITY_EXPLORER"
                            }
                        ],
                        "name": "SMARTSENSE"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "livy2-conf/livy.server.launch.kerberos.keytab",
                                            "file": "${keytab_dir}/livy.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${livy2-env/livy2_user}"
                                            }
                                        },
                                        "name": "livyuser",
                                        "principal": {
                                            "configuration": "livy2-conf/livy.server.launch.kerberos.principal",
                                            "local_username": "${livy2-env/livy2_user}",
                                            "type": "service",
                                            "value": "${livy2-env/livy2_user}/_HOST@${realm}"
                                        },
                                        "referencePath": "SPARK2/LIVY2_SERVER/livyuser"
                                    }
                                ],
                                "name": "LIVY2_SERVER"
                            },
                            {
                                "name": "SPARK2_CLIENT"
                            },
                            {
                                "identities": [],
                                "name": "SPARK2_JOBHISTORYSERVER"
                            },
                            {
                                "identities": [],
                                "name": "SPARK2_THRIFTSERVER"
                            }
                        ],
                        "configurations": [
                            {
                                "livy2-conf": {
                                    "livy.impersonation.enabled": "true",
                                    "livy.server.auth.type": "kerberos"
                                }
                            },
                            {
                                "spark2-atlas-application-properties-override": {
                                    "atlas.jaas.KafkaClient.option.keyTab": "${keytab_dir}/spark-atlas.headless.keytab"
                                }
                            },
                            {
                                "spark2-atlas-application-properties-yarn": {
                                    "atlas.jaas.KafkaClient.option.keyTab": "./__spark_libs__/spark-atlas.headless.keytab"
                                }
                            },
                            {
                                "spark2-defaults": {
                                    "spark.history.kerberos.enabled": "true"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "file": "${keytab_dir}/spark-atlas.headless.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${spark2-env/spark_user}"
                                    }
                                },
                                "name": "atlas_kafka",
                                "principal": {
                                    "configuration": "spark2-atlas-application-properties-override/atlas.jaas.KafkaClient.option.principal",
                                    "type": "user",
                                    "value": "spark_atlas@${realm}"
                                },
                                "referencePath": "SPARK2/atlas_kafka"
                            },
                            {
                                "keytab": {
                                    "file": "${keytab_dir}/spark.headless.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${spark2-env/spark_user}"
                                    }
                                },
                                "name": "spark2user",
                                "principal": {
                                    "local_username": "${spark2-env/spark_user}",
                                    "type": "user",
                                    "value": "${spark2-env/spark_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "SPARK2/spark2user"
                            },
                            {
                                "keytab": {
                                    "configuration": "spark2-hive-site-override/hive.server2.authentication.kerberos.keytab",
                                    "file": "${keytab_dir}/spark.service.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${spark2-env/spark_user}"
                                    }
                                },
                                "name": "spark_service_keytab",
                                "principal": {
                                    "configuration": "spark2-hive-site-override/hive.server2.authentication.kerberos.principal",
                                    "local_username": "${spark2-env/spark_user}",
                                    "type": "service",
                                    "value": "spark/_HOST@${realm}"
                                },
                                "referencePath": "SPARK2/spark_service_keytab"
                            }
                        ],
                        "name": "SPARK2"
                    },
                    {
                        "components": [
                            {
                                "name": "SQOOP"
                            }
                        ],
                        "configurations": [
                            {
                                "sqoop-atlas-application.properties": {
                                    "atlas.jaas.KafkaClient.option.renewTicket": "true",
                                    "atlas.jaas.KafkaClient.option.useTicketCache": "true"
                                }
                            }
                        ],
                        "name": "SQOOP"
                    },
                    {
                        "components": [
                            {
                                "identities": [],
                                "name": "DRPC_SERVER"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "storm-env/nimbus_keytab",
                                            "file": "${keytab_dir}/nimbus.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${storm-env/storm_user}"
                                            }
                                        },
                                        "name": "nimbus_server",
                                        "principal": {
                                            "configuration": "storm-env/nimbus_principal_name",
                                            "type": "service",
                                            "value": "nimbus/_HOST@${realm}"
                                        },
                                        "referencePath": "STORM/NIMBUS/nimbus_server"
                                    }
                                ],
                                "name": "NIMBUS"
                            },
                            {
                                "identities": [],
                                "name": "STORM_UI_SERVER"
                            },
                            {
                                "name": "SUPERVISOR"
                            }
                        ],
                        "configurations": [
                            {
                                "ranger-storm-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            },
                            {
                                "storm-site": {
                                    "drpc.authorizer": "org.apache.storm.security.auth.authorizer.DRPCSimpleACLAuthorizer",
                                    "java.security.auth.login.config": "{{conf_dir}}/storm_jaas.conf",
                                    "nimbus.admins": "['{{storm_bare_jaas_principal}}', '{{ambari_bare_jaas_principal}}']",
                                    "nimbus.authorizer": "org.apache.storm.security.auth.authorizer.SimpleACLAuthorizer",
                                    "nimbus.impersonation.acl": "{ {{storm_bare_jaas_principal}} : {hosts: ['*'], groups: ['*']}}",
                                    "nimbus.impersonation.authorizer": "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer",
                                    "nimbus.supervisor.users": "['{{storm_bare_jaas_principal}}']",
                                    "storm.principal.tolocal": "org.apache.storm.security.auth.KerberosPrincipalToLocal",
                                    "storm.thrift.transport": "org.apache.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
                                    "storm.zookeeper.superACL": "sasl:{{storm_bare_jaas_principal}}",
                                    "supervisor.enable": "true",
                                    "ui.filter": "org.apache.storm.org.apache.hadoop.security.authentication.server.AuthenticationFilter",
                                    "ui.filter.params": "{'type': 'kerberos', 'kerberos.principal': '{{storm_ui_jaas_principal}}', 'kerberos.keytab': '{{storm_ui_keytab_path}}', 'kerberos.name.rules': 'DEFAULT'}"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "storm-env/storm_keytab",
                                    "file": "${keytab_dir}/storm.headless.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${storm-env/storm_user}"
                                    }
                                },
                                "name": "storm_components",
                                "principal": {
                                    "configuration": "storm-env/storm_principal_name",
                                    "type": "user",
                                    "value": "${storm-env/storm_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "STORM/storm_components"
                            }
                        ],
                        "name": "STORM"
                    },
                    {
                        "components": [
                            {
                                "name": "SUPERSET"
                            }
                        ],
                        "configurations": [
                            {
                                "superset": {
                                    "ENABLE_KERBEROS_AUTHENTICATION": "True",
                                    "KERBEROS_REINIT_TIME_SEC": "3600"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "superset/KERBEROS_KEYTAB",
                                    "file": "${keytab_dir}/superset.headless.keytab",
                                    "group": {
                                        "access": "r",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${superset-env/superset_user}"
                                    }
                                },
                                "name": "superset",
                                "principal": {
                                    "configuration": "superset/KERBEROS_PRINCIPAL",
                                    "local_username": "${superset-env/superset_user}",
                                    "type": "user",
                                    "value": "${superset-env/superset_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "SUPERSET/superset"
                            }
                        ],
                        "name": "SUPERSET"
                    },
                    {
                        "components": [
                            {
                                "configurations": [
                                    {
                                        "tez-site": {
                                            "tez.am.view-acls": ""
                                        }
                                    }
                                ],
                                "identities": [],
                                "name": "TEZ_CLIENT"
                            }
                        ],
                        "name": "TEZ"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "yarn-site/yarn.timeline-service.keytab",
                                            "file": "${keytab_dir}/yarn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${yarn-env/yarn_user}"
                                            }
                                        },
                                        "name": "app_timeline_server_yarn",
                                        "principal": {
                                            "configuration": "yarn-site/yarn.timeline-service.principal",
                                            "local_username": "${yarn-env/yarn_user}",
                                            "type": "service",
                                            "value": "yarn/_HOST@${realm}"
                                        },
                                        "referencePath": "YARN/APP_TIMELINE_SERVER/app_timeline_server_yarn"
                                    }
                                ],
                                "name": "APP_TIMELINE_SERVER"
                            },
                            {
                                "configurations": [
                                    {
                                        "yarn-site": {
                                            "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor"
                                        }
                                    }
                                ],
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "yarn-site/yarn.nodemanager.keytab",
                                            "file": "${keytab_dir}/nm.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${yarn-env/yarn_user}"
                                            }
                                        },
                                        "name": "nodemanager_nm",
                                        "principal": {
                                            "configuration": "yarn-site/yarn.nodemanager.principal",
                                            "local_username": "${yarn-env/yarn_user}",
                                            "type": "service",
                                            "value": "nm/_HOST@${realm}"
                                        },
                                        "referencePath": "YARN/NODEMANAGER/nodemanager_nm"
                                    }
                                ],
                                "name": "NODEMANAGER"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "yarn-site/yarn.resourcemanager.keytab",
                                            "file": "${keytab_dir}/rm.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${yarn-env/yarn_user}"
                                            }
                                        },
                                        "name": "resource_manager_rm",
                                        "principal": {
                                            "configuration": "yarn-site/yarn.resourcemanager.principal",
                                            "local_username": "${yarn-env/yarn_user}",
                                            "type": "service",
                                            "value": "rm/_HOST@${realm}"
                                        },
                                        "referencePath": "YARN/RESOURCEMANAGER/resource_manager_rm"
                                    }
                                ],
                                "name": "RESOURCEMANAGER"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "yarn-site/yarn.timeline-service.keytab",
                                            "file": "${keytab_dir}/yarn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${yarn-env/yarn_user}"
                                            }
                                        },
                                        "name": "yarn_timeline_reader",
                                        "principal": {
                                            "configuration": "yarn-site/yarn.timeline-service.principal",
                                            "local_username": "${yarn-env/yarn_user}",
                                            "type": "service",
                                            "value": "yarn/_HOST@${realm}"
                                        },
                                        "referencePath": "YARN/TIMELINE_READER/yarn_timeline_reader"
                                    }
                                ],
                                "name": "TIMELINE_READER"
                            },
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "yarn-env/yarn.registry-dns.keytab",
                                            "file": "${keytab_dir}/yarn.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${yarn-env/yarn_user}"
                                            }
                                        },
                                        "name": "registry_dns_yarn",
                                        "principal": {
                                            "configuration": "yarn-env/yarn.registry-dns.principal",
                                            "local_username": "${yarn-env/yarn_user}",
                                            "type": "service",
                                            "value": "yarn/_HOST@${realm}"
                                        },
                                        "referencePath": "YARN/YARN_REGISTRY_DNS/registry_dns_yarn"
                                    }
                                ],
                                "name": "YARN_REGISTRY_DNS"
                            }
                        ],
                        "configurations": [
                            {
                                "capacity-scheduler": {
                                    "yarn.scheduler.capacity.root.acl_administer_queue": "${yarn-env/yarn_user}",
                                    "yarn.scheduler.capacity.root.acl_submit_applications": "${yarn-env/yarn_user},${cluster-env/smokeuser}",
                                    "yarn.scheduler.capacity.root.default.acl_administer_jobs": "${yarn-env/yarn_user}",
                                    "yarn.scheduler.capacity.root.default.acl_administer_queue": "${yarn-env/yarn_user}",
                                    "yarn.scheduler.capacity.root.default.acl_submit_applications": "${yarn-env/yarn_user},${yarn-env/yarn_ats_user}"
                                }
                            },
                            {
                                "core-site": {
                                    "hadoop.proxyuser.${yarn-env/yarn_user}.groups": "*",
                                    "hadoop.proxyuser.${yarn-env/yarn_user}.hosts": "${clusterHostInfo/resourcemanager_hosts}"
                                }
                            },
                            {
                                "ranger-yarn-audit": {
                                    "xasecure.audit.destination.solr.force.use.inmemory.jaas.config": "true",
                                    "xasecure.audit.jaas.Client.loginModuleControlFlag": "required",
                                    "xasecure.audit.jaas.Client.loginModuleName": "com.sun.security.auth.module.Krb5LoginModule",
                                    "xasecure.audit.jaas.Client.option.serviceName": "solr",
                                    "xasecure.audit.jaas.Client.option.storeKey": "false",
                                    "xasecure.audit.jaas.Client.option.useKeyTab": "true"
                                }
                            },
                            {
                                "yarn-hbase-site": {
                                    "hbase.coprocessor.master.classes": "org.apache.hadoop.hbase.security.access.AccessController",
                                    "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
                                    "hbase.security.authentication": "kerberos",
                                    "hbase.security.authorization": "true",
                                    "zookeeper.znode.parent": "/atsv2-hbase-secure"
                                }
                            },
                            {
                                "yarn-site": {
                                    "hadoop.registry.client.auth": "kerberos",
                                    "hadoop.registry.jaas.context": "Client",
                                    "hadoop.registry.secure": "true",
                                    "hadoop.registry.system.accounts": "sasl:${principals/YARN/APP_TIMELINE_SERVER/app_timeline_server_yarn|principalPrimary()},sasl:${principals/MAPREDUCE2/HISTORYSERVER/history_server_jhs|principalPrimary()},sasl:${principals/HDFS/NAMENODE/hdfs|principalPrimary()},sasl:${principals/YARN/RESOURCEMANAGER/resource_manager_rm|principalPrimary()},sasl:${principals/HIVE/HIVE_SERVER/hive_server_hive|principalPrimary()},sasl:${principals/SPARK2/spark_service_keytab|principalPrimary()}",
                                    "yarn.acl.enable": "true",
                                    "yarn.admin.acl": "${yarn-env/yarn_user}",
                                    "yarn.resourcemanager.proxy-user-privileges.enabled": "true",
                                    "yarn.resourcemanager.proxyuser.*.groups": "",
                                    "yarn.resourcemanager.proxyuser.*.hosts": "",
                                    "yarn.resourcemanager.proxyuser.*.users": "",
                                    "yarn.resourcemanager.zk-acl": "sasl:${principals/YARN/RESOURCEMANAGER/resource_manager_rm|principalPrimary()}:rwcda",
                                    "yarn.timeline-service.enabled": "true",
                                    "yarn.timeline-service.http-authentication.cookie.domain": "",
                                    "yarn.timeline-service.http-authentication.cookie.path": "",
                                    "yarn.timeline-service.http-authentication.kerberos.name.rules": "",
                                    "yarn.timeline-service.http-authentication.proxyuser.*.groups": "",
                                    "yarn.timeline-service.http-authentication.proxyuser.*.hosts": "",
                                    "yarn.timeline-service.http-authentication.proxyuser.*.users": "",
                                    "yarn.timeline-service.http-authentication.signature.secret": "",
                                    "yarn.timeline-service.http-authentication.signature.secret.file": "",
                                    "yarn.timeline-service.http-authentication.signer.secret.provider": "",
                                    "yarn.timeline-service.http-authentication.signer.secret.provider.object": "",
                                    "yarn.timeline-service.http-authentication.token.validity": "",
                                    "yarn.timeline-service.http-authentication.type": "kerberos"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "yarn-env/yarn_ats_user_keytab",
                                    "file": "${keytab_dir}/yarn-ats.hbase-client.headless.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${yarn-env/yarn_ats_user}"
                                    }
                                },
                                "name": "yarn_ats",
                                "principal": {
                                    "configuration": "yarn-env/yarn_ats_principal_name",
                                    "local_username": "${yarn-env/yarn_ats_user}",
                                    "type": "user",
                                    "value": "${yarn-env/yarn_ats_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "YARN/yarn_ats"
                            },
                            {
                                "keytab": {
                                    "configuration": "yarn-hbase-site/hbase.master.keytab.file",
                                    "file": "${keytab_dir}/yarn-ats.hbase-master.service.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${yarn-env/yarn_ats_user}"
                                    }
                                },
                                "name": "yarn_ats_hbase_master",
                                "principal": {
                                    "configuration": "yarn-hbase-site/hbase.master.kerberos.principal",
                                    "local_username": "${yarn-env/yarn_ats_user}",
                                    "type": "service",
                                    "value": "yarn-ats-hbase/_HOST@${realm}"
                                },
                                "referencePath": "YARN/yarn_ats_hbase_master"
                            },
                            {
                                "keytab": {
                                    "configuration": "yarn-hbase-site/hbase.regionserver.keytab.file",
                                    "file": "${keytab_dir}/yarn-ats.hbase-regionserver.service.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${yarn-env/yarn_ats_user}"
                                    }
                                },
                                "name": "yarn_ats_hbase_regionserver",
                                "principal": {
                                    "configuration": "yarn-hbase-site/hbase.regionserver.kerberos.principal",
                                    "local_username": "${yarn-env/yarn_ats_user}",
                                    "type": "service",
                                    "value": "yarn-ats-hbase/_HOST@${realm}"
                                },
                                "referencePath": "YARN/yarn_ats_hbase_regionserver"
                            }
                        ],
                        "name": "YARN"
                    },
                    {
                        "components": [
                            {
                                "name": "ZEPPELIN_MASTER"
                            }
                        ],
                        "configurations": [
                            {
                                "core-site": {
                                    "hadoop.proxyuser.${zeppelin-env/zeppelin_user}.groups": "*",
                                    "hadoop.proxyuser.${zeppelin-env/zeppelin_user}.hosts": "*"
                                }
                            },
                            {
                                "zeppelin-env": {
                                    "zeppelin.kerberos.enabled": "true"
                                }
                            }
                        ],
                        "identities": [
                            {
                                "keytab": {
                                    "configuration": "zeppelin-site/zeppelin.server.kerberos.keytab",
                                    "file": "${keytab_dir}/zeppelin.server.kerberos.keytab",
                                    "group": {
                                        "access": "",
                                        "name": "${cluster-env/user_group}"
                                    },
                                    "owner": {
                                        "access": "r",
                                        "name": "${zeppelin-env/zeppelin_user}"
                                    }
                                },
                                "name": "zeppelin_user",
                                "principal": {
                                    "configuration": "zeppelin-site/zeppelin.server.kerberos.principal",
                                    "local_username": "${zeppelin-env/zeppelin_user}",
                                    "type": "user",
                                    "value": "${zeppelin-env/zeppelin_user}${principal_suffix}@${realm}"
                                },
                                "referencePath": "ZEPPELIN/zeppelin_user"
                            }
                        ],
                        "name": "ZEPPELIN"
                    },
                    {
                        "components": [
                            {
                                "identities": [
                                    {
                                        "keytab": {
                                            "configuration": "zookeeper-env/zookeeper_keytab_path",
                                            "file": "${keytab_dir}/zk.service.keytab",
                                            "group": {
                                                "access": "",
                                                "name": "${cluster-env/user_group}"
                                            },
                                            "owner": {
                                                "access": "r",
                                                "name": "${zookeeper-env/zk_user}"
                                            }
                                        },
                                        "name": "zookeeper_zk",
                                        "principal": {
                                            "configuration": "zookeeper-env/zookeeper_principal_name",
                                            "type": "service",
                                            "value": "zookeeper/_HOST@${realm}"
                                        },
                                        "referencePath": "ZOOKEEPER/ZOOKEEPER_SERVER/zookeeper_zk"
                                    }
                                ],
                                "name": "ZOOKEEPER_SERVER"
                            }
                        ],
                        "identities": [],
                        "name": "ZOOKEEPER"
                    }
                ]
            }
        },
        "blueprint_name": "hadoopdev",
        "stack_name": "HDP",
        "stack_version": "3.1"
    }
}