---
    
- include_tasks: ambari_server_stop.yml      

- name: Install {{ database }} required packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ lookup('vars', database + '_packages') | join(',') }}"

- name: Load the Ambari Server schema (postgres)
  postgresql_db:
    name: "{{ database_options.ambari_db_name }}"
    maintenance_db: "{{ database_options.ambari_db_name }}"
    login_host: "{{ database_options.external_hostname|default(ansible_fqdn,true) }}"
    port: "{{ postgres_port }}"
    login_user: "{{ database_options.ambari_db_username }}"
    login_password: "{{ database_options.ambari_db_password }}"
    state: restore
    target: /var/lib/ambari-server/resources/Ambari-DDL-Postgres-CREATE.sql
    ssl_mode: disable

- name: Set the Ambari Server to run as ambari
  lineinfile:
    path: /etc/ambari-server/conf/ambari.properties
    regexp: "^ambari-server.user="
    line: "ambari-server.user=ambari"
    state: present
        
- name: Run Ambari-server setup jdbc 
  shell: |
       /usr/sbin/ambari-server setup --jdbc-db={{ database }} --jdbc-driver={{ lookup('vars', database + '_jdbc_location') }}

- name: Run Ambari-server setup java home 
  shell: |       
       ambari-server setup -j {{postgres_java_rootfolder}}{{postgres_java_folder}} -s

- name: Run Ambari-server setup 
  shell: |       
       /usr/sbin/ambari-server setup --databasehost={{hostvars[groups['sql'][0]].inventory_hostname}} --databasename={{database_options.ambari_db_name}} \
       --databaseusername={{database_options.ambari_db_username}} --postgresschema={{database_options.ambari_db_name}} --databasepassword={{database_options.ambari_db_password}} --databaseport={{postgres_port}} --database={{database}} -s

- name: Run Ambari-server setup 
  shell: |       
       /usr/sbin/ambari-server setup -s {{ ambari_java_options|default("") }} {{ ambari_database_options|default("") }}
       
- name: Run Ambari-server setup 
  shell: |       
       /usr/sbin/ambari-server setup-pam --pam-config-file=/etc/pam.d/login --pam-auto-create-groups=true

- name: Increase the Ambari Server startup timeout
  lineinfile:
    path: /etc/ambari-server/conf/ambari.properties
    state: present
    line: 'server.startup.web.timeout=120'
  notify: Restart ambari-server
  
- name: Disable api.csrf
  shell: |  
       echo 'api.csrfPrevention.enabled=false' >> /etc/ambari-server/conf/ambari.properties

- meta: flush_handlers

- name: Make sure the ambari-server service is started
  service:
    name: ambari-server
    state: started

- name: Make sure the ambari-server service is enabled
  service:
    name: ambari-server
    enabled: yes
  ignore_errors: true
